"use strict";(self.webpackChunkCRIS=self.webpackChunkCRIS||[]).push([[4316],{4316:(fr,Xe,v)=>{v.r(Xe),v.d(Xe,{default:()=>cr});var F=v(15861),b=v(17626),mt=v(73281),ht=v(79608),k=v(26584),Me=v(63290),pt=v(99959),ge=v(10699),yt=v(32917),R=v(77712),Pe=v(90912),Ee=v(85931),gt=v(8314),xt=v(55342),q=v(76898),It=v(44917),vt=v(65088),bt=v(552),St=v(50107),Ae=(v(29132),v(90885)),Ke=v(84792),Rt=v(68653),Qe=v(37053),qe=v(38305),ze=v(13812),et=v(25982),Tt=v(11354),He=v(85436),wt=v(9548),re=v(2584),Ct=v(86810),Ft=v(60330),tt=v(72258),be=v(27497),X=v(79781),se=v(61068),Mt=v(67313),rt=v(8614),ae=v(79751),N=v(28594),Le=v(30994),U=v(2004),W=v(72642);let G=class extends((0,Ft.v)(Ct.wq)){constructor(){super(...arguments),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}init(){var r=this;return(0,F.Z)(function*(){const e=(0,N.zD)();r.addResolvingPromise(e),yield r.when()})()}normalizeCtorArgs(r){return r?.ioConfig&&(r={...r,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:re.Z.create(),...r.ioConfig}}),r}get _isGlobalWrappableSource(){const{rasterInfo:r}=this,e=(0,N.ut)(r.spatialReference);return null!=e&&r.extent.width>=e/2}get _hasNoneOrGCSShiftTransform(){const{transform:r}=this.rasterInfo;return null==r||"gcs-shift"===r.type}set rasterJobHandler(r){this._set("rasterJobHandler",r),"Function"===this.datasetFormat&&this.primaryRasters?.rasters?.forEach(e=>e.rasterJobHandler=r)}set url(r){this._set("url",(0,qe.Nm)(r,Me.Z.getLogger(this)))}open(r){return(0,F.Z)(function*(){throw new k.Z("BaseRaster:open-not-implemented","open() is not implemented")})()}fetchTile(r,e,i,t={}){var n=this;return(0,F.Z)(function*(){const a=t.tileInfo||n.rasterInfo.storageInfo.tileInfo,s=n.getTileExtentFromTileInfo(r,e,i,a);return n.fetchPixels(s,a.size[0],a.size[1],t)})()}identify(r,e={}){var i=this;return(0,F.Z)(function*(){r=(0,Pe.TJ)(W.Z,r).clone().normalize();const{multidimensionalDefinition:t,timeExtent:n}=e,{rasterInfo:a}=i,{hasMultidimensionalTranspose:s,multidimensionalInfo:o}=a;let{transposedVariableName:l}=e;const c=null!=o&&s&&(null!=n||(0,X.WU)(t));c&&!l&&(l=null!=t&&t.length>0?t[0].variableName??void 0:o.variables[0].name,e={...e,transposedVariableName:l}),e=i._getRequestOptionsWithSliceId(e);const{spatialReference:u,extent:f}=a,{datumTransformation:d}=e;let m=(0,N.nF)(r,u,d);if(!f.intersects(m))return{location:m,value:null};if(null!=a.transform){const D=a.transform.inverseTransform(m);if(!a.nativeExtent.intersects(D))return{location:D,value:null};m=D}let y=0;const g=null!=l&&null!=o&&a.hasMultidimensionalTranspose;if("Function"===i.datasetFormat){const D=i.primaryRasters.rasters[0];if(g)return D.identify(m,e);const{pixelSize:E}=a,A=3,B=E.x*A/2,J=E.y*A/2,z=new U.Z({xmin:m.x-B,xmax:m.x+B,ymin:m.y-J,ymax:m.y+J,spatialReference:u}),H={interpolation:"nearest"},{pixelBlock:te}=yield D.fetchPixels(z,A,A,H),{pixelBlock:$}=yield i.fetchPixels(z,A,A,H);if(null==te)return{location:m,value:null};const _=Math.floor(A*A*.5),ne=!te.mask||te.mask[_]?te.pixels.map(Q=>Q[_]):null;let ye;return null!=$&&(ye=!$.mask||$.mask[_]?$.pixels.map(Q=>Q[_]):void 0),{location:m,value:ne,processedValue:ye,pyramidLevel:0}}if(!g)if(e.srcResolution)y=(0,N.kr)(e.srcResolution,a,i.ioConfig.sampling).pyramidLevel;else if(y=yield i.computeBestPyramidLevelForLocation(r,e),null==y)return{location:m,value:null};const h=i.identifyPixelLocation(m,y,null,g);if(null===h)return{location:m,value:null};const{row:p,col:x,rowOffset:I,colOffset:w,blockWidth:T}=h,S=(0,se.Rq)(i.url,l??e.sliceId),C=`${y}/${p}/${x}`;let M=(0,se.Qg)(S,null,C);null==M&&(M=i.fetchRawTile(y,p,x,e),(0,se.gX)(S,null,C,M));const Z=yield M;return Z?.pixels?.length?i._processIdentifyResult(Z,{srcLocation:m,position:I*T+w,pyramidLevel:y,useTransposedTile:!!g,requestSomeSlices:c,identifyOptions:e}):{location:m,value:null}})()}fetchPixels(r,e,i,t={}){var n=this;return(0,F.Z)(function*(){r=(0,N.Fi)(r),t=n._getRequestOptionsWithSliceId(t);const{_hasNoneOrGCSShiftTransform:a}=n;if(t.requestRawData&&a)return n._fetchPixels(r,e,i,t);const s=(0,N.ut)(r.spatialReference),o=(0,N.Hq)(r);if(null==s||0===o||1===o&&n._isGlobalWrappableSource&&a)return n._fetchPixels(r,e,i,t);if(o>=3)return{extent:r,pixelBlock:null};const l=[],{xmin:c,xmax:u}=r,f=Math.round(s/(u-c)*e),d=f-Math.round((s/2-c)/(u-c)*e);let m=0;const y=[];for(let x=0;x<=o;x++){const I=new U.Z({xmin:0===x?c:-s/2,xmax:x===o?u-s*x:s/2,ymin:r.ymin,ymax:r.ymax,spatialReference:r.spatialReference}),w=0===x?f-d:x===o?e-m:f;m+=w,y.push(w);const T=t.disableWrapAround&&x>0?null:n._fetchPixels(I,w,i,t);l.push(T)}const g=(yield Promise.all(l)).map(x=>x?.pixelBlock);let h=null;const p={width:e,height:i};return h=n.rasterJobHandler?(yield n.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:g,srcMosaicSize:p,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:y},t)).pixelBlock:(0,ae.us)(g,p,{blockWidths:y}),{extent:r,srcExtent:(0,N.tB)(r,n.rasterInfo.spatialReference,t.datumTransformation),pixelBlock:h}})()}fetchRawPixels(r,e,i,t={}){var n=this;return(0,F.Z)(function*(){e={x:Math.floor(e.x),y:Math.floor(e.y)};const a=yield n._fetchRawTiles(r,e,i,t),{nativeExtent:s,nativePixelSize:o,storageInfo:l}=n.rasterInfo,c=2**r,u=o.x*c,f=o.y*c,d=new U.Z({xmin:s.xmin+u*e.x,xmax:s.xmin+u*(e.x+i.width-1),ymin:s.ymax-f*(e.y+i.height-1),ymax:s.ymax-f*e.y,spatialReference:s.spatialReference});if(!a)return{extent:d,srcExtent:d,pixelBlock:null};const{pixelBlocks:m,mosaicSize:y}=a;if(1===m.length&&null!=m[0]&&m[0].width===i.width&&m[0].height===i.height)return{extent:d,srcExtent:d,pixelBlock:a.pixelBlocks[0]};const p={x:e.x%(r>0?l.pyramidBlockWidth:l.blockWidth),y:e.y%(r>0?l.pyramidBlockHeight:l.blockHeight)};let x;return x=n.rasterJobHandler?(yield n.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:m,srcMosaicSize:y,destDimension:i,clipOffset:p,clipSize:i,coefs:null,sampleSpacing:null,interpolation:t.interpolation,alignmentInfo:null,blockWidths:null},t)).pixelBlock:(0,ae.us)(m,y,{clipOffset:p,clipSize:i}),{extent:d,srcExtent:d,pixelBlock:x}})()}fetchRawTile(r,e,i,t){throw new k.Z("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(r){return(0,N.tB)(this.rasterInfo.extent,r)}decodePixelBlock(r,e){return!this.rasterJobHandler||e.useCanvas?(0,rt.J)(r,e):this.rasterJobHandler.decode({data:r,options:e})}request(r,e,i=0){var t=this;return(0,F.Z)(function*(){const{customFetchParameters:n}=t.ioConfig,{range:a,query:s,headers:o}=e;i=i??e.retryCount??t.ioConfig.retryCount;const l=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return yield(0,Ke.Z)(r,{...e,query:{...s,...n},headers:{...o,...l}})}catch(c){if(i>0)return i--,t.request(r,e,i);throw c}})()}getSliceIndex(r){const{multidimensionalInfo:e}=this.rasterInfo;return null==e||null==r||0===r.length?null:(0,X.gk)(r,e)}getTileExtentFromTileInfo(r,e,i,t){const n=t.lodAt(r);return this.getTileExtent({x:n.resolution,y:n.resolution},e,i,t.origin,t.spatialReference,t.size)}updateTileInfo(){const{storageInfo:r,spatialReference:e,extent:i,pixelSize:t}=this.rasterInfo;if(!r.tileInfo){const n=[],a=r.maximumPyramidLevel||0;let s=Math.max(t.x,t.y),o=1/.0254*96*s;for(let c=0;c<=a;c++)n.unshift(new tt.Z({level:a-c,resolution:s,scale:o})),s*=2,o*=2;const l=new W.Z({x:i.xmin,y:i.ymax,spatialReference:e});r.tileInfo=new re.Z({origin:l,size:[r.blockWidth,r.blockHeight],spatialReference:e,lods:n}),r.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(r,e=512,i=512,t){const{width:n,height:a,nativeExtent:s,pixelSize:o,spatialReference:l}=r,c=new W.Z({x:s.xmin,y:s.ymax,spatialReference:l});null==t&&(t=Math.max(0,Math.round(Math.log(Math.max(n,a))/Math.LN2-8)));const u=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[o],t);r.storageInfo=new be.Z({blockWidth:e,blockHeight:i,pyramidBlockWidth:e,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:t,blockBoundary:u})}computeBestPyramidLevelForLocation(r,e={}){return(0,F.Z)(function*(){return 0})()}computeBlockBoundary(r,e,i,t,n,a=0,s=2){if(1===n.length&&a>0){n=[...n];let{x:u,y:f}=n[0];for(let d=0;d<a;d++)u*=s,f*=s,n.push({x:u,y:f})}const o=[],{x:l,y:c}=t;for(let u=0;u<n.length;u++){const{x:f,y:d}=n[u];o.push({minCol:Math.floor((r.xmin-l+.1*f)/e/f),maxCol:Math.floor((r.xmax-l-.1*f)/e/f),minRow:Math.floor((c-r.ymax+.1*d)/i/d),maxRow:Math.floor((c-r.ymin-.1*d)/i/d)})}return o}getPyramidPixelSize(r){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:t}=this.rasterInfo.storageInfo;if(0===r)return e;if(null!=i&&i.length)return i[r-1];const n=t**r;return{x:e.x*n,y:e.y*n}}identifyPixelLocation(r,e,i,t){const{spatialReference:n,nativeExtent:a,storageInfo:s}=this.rasterInfo,{maximumPyramidLevel:o,origin:l,transposeInfo:c}=s,u=t&&null!=c?c.tileSize[0]:s.blockWidth,f=t&&null!=c?c.tileSize[1]:s.blockHeight,d=(0,N.nF)(r,n,i);if(!a.intersects(d)||e<0||e>o)return null;const m=this.getPyramidPixelSize(e),{x:y,y:g}=m,h=(l.y-d.y)/g/f,p=(d.x-l.x)/y/u,x=Math.min(f-1,Math.floor((h-Math.floor(h))*f)),I=Math.min(u-1,Math.floor((p-Math.floor(p))*u));return{pyramidLevel:e,row:Math.floor(h),col:Math.floor(p),rowOffset:x,colOffset:I,blockWidth:u,srcLocation:d}}getTileExtent(r,e,i,t,n,a){const[s,o]=a,l=t.x+i*s*r.x,u=t.y-e*o*r.y;return new U.Z({xmin:l,xmax:l+s*r.x,ymin:u-o*r.y,ymax:u,spatialReference:n})}getBlockWidthHeight(r){return{blockWidth:r>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:r>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(r,e,i){const t=this.rasterInfo.storageInfo.blockBoundary[r];return!t||t.maxRow<e||t.maxCol<i||t.minRow>e||t.minCol>i}_fetchPixels(r,e,i,t={}){var n=this;return(0,F.Z)(function*(){let a=(0,N.Hq)(r);if(a>=2)return{extent:r,pixelBlock:null};const s=n._getSourceDataInfo(r,e,i,t),{pyramidLevel:o,srcResolution:l,srcExtent:c,srcWidth:u,srcHeight:f,ul:d}=s;if(0===u||0===f)return{extent:r,srcExtent:c,pixelBlock:null};const{rasterInfo:m}=n,y=m.transform,g="gcs-shift"===y?.type,h=null!=(0,N.ut)(r.spatialReference);!g&&h||(a=(0,N.Hq)(s.srcExtent,g));const p=yield n._fetchRawTiles(o,d,{width:u,height:f,wrapCount:a},t);if(!p)return{extent:r,srcExtent:c,pixelBlock:null};const x=m.storageInfo,I=o>0?x.pyramidBlockWidth:x.blockWidth,w=o>0?x.pyramidBlockHeight:x.blockHeight;let{x:T,y:O}=m.pixelSize;if(o>0){const{pyramidResolutions:ie,pyramidScalingFactor:ur}=x;if(null!=ie&&ie[o-1])({x:T,y:O}=ie[o-1]);else{const dt=ur**o;T*=dt,O*=dt}}const S=m.spatialReference,C=new W.Z({x:T,y:O,spatialReference:S}),M=I===u&&w===f&&d.x%I==0&&d.y%w==0,Z=new W.Z({x:(r.xmax-r.xmin)/e,y:(r.ymax-r.ymin)/i,spatialReference:r.spatialReference}),P=!r.spatialReference.equals(S),D=S.isGeographic?1e-9:1e-4,{datumTransformation:E}=t;if(!P&&M&&1===p.pixelBlocks.length&&I===e&&w===i&&n._isSameResolution(l,Z,D))return{extent:r,srcExtent:c,srcTilePixelSize:C,pixelBlock:p.pixelBlocks[0]};const A=h&&null!=(0,N.ut)(c.spatialReference)&&n._hasNoneOrGCSShiftTransform,B=t.requestProjectedLocalDirections&&n.rasterInfo.dataType.startsWith("vector");B&&!n.rasterJobHandler&&(yield(0,N.zD)());const J=n.rasterJobHandler?yield n.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:r,srcBufferExtent:p.extent,pixelSize:Z.toJSON(),datumTransformation:E,rasterTransform:y,hasWrapAround:a>0||A,isAdaptive:!1!==n.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:B},t):(0,N.Qp)({projectedExtent:r,srcBufferExtent:p.extent,pixelSize:Z,datumTransformation:E,rasterTransform:y,hasWrapAround:a>0||A,isAdaptive:!1,includeGCSGrid:B});let z;const H=!t.requestRawData,te={rows:J.spacing[0],cols:J.spacing[1]},$=n._hasNoneOrGCSShiftTransform?n._getRasterTileAlignmentInfo(o,p.extent.xmin):void 0,{pixelBlocks:_,mosaicSize:ne,isPartiallyFilled:ye}=p;let Q=null;if(n.rasterJobHandler)({pixelBlock:z,localNorthDirections:Q}=yield n.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:_,srcMosaicSize:ne,destDimension:H?{width:e,height:i}:null,coefs:H?J.coefficients:null,sampleSpacing:H?te:null,projectDirections:B,gcsGrid:B?J.gcsGrid:null,isUV:"vector-uv"===n.rasterInfo.dataType,interpolation:t.interpolation,alignmentInfo:$,blockWidths:null},t));else{const ie=(0,ae.us)(_,ne,{alignmentInfo:$});z=H?(0,ae.Uk)(ie,{width:e,height:i},J.coefficients,te,t.interpolation):ie,B&&J.gcsGrid&&(Q=(0,ae.Qh)({width:e,height:i},J.gcsGrid),z=(0,Le.xQ)(z,n.rasterInfo.dataType,Q))}return t.requestRawData||B?{extent:r,srcExtent:c,srcTilePixelSize:C,pixelBlock:z,transformGrid:J,localNorthDirections:Q,isPartiallyFilled:ye}:{extent:r,srcExtent:c,srcTilePixelSize:C,pixelBlock:z}})()}_fetchRawTiles(r,e,i,t){var n=this;return(0,F.Z)(function*(){const{origin:a,blockBoundary:s}=n.rasterInfo.storageInfo,{blockWidth:o,blockHeight:l}=n.getBlockWidthHeight(r);let{x:c,y:u}=e,{width:f,height:d,wrapCount:m}=i;const y=n._getRasterTileAlignmentInfo(r,0);t.buffer&&(c-=t.buffer.cols,u-=t.buffer.rows,f+=2*t.buffer.cols,d+=2*t.buffer.rows);let g=0,h=0,p=0;m&&null!=y&&(({worldColumnCountFromOrigin:h,originColumnOffset:p,rightPadding:g}=y),h*y.blockWidth-g>=c+f&&(g=0));const x=Math.floor(c/o),I=Math.floor(u/l),w=Math.floor((c+f+g-1)/o),T=Math.floor((u+d+g-1)/l),O=s[r];if(!O)return null;const{minRow:S,minCol:C,maxCol:M,maxRow:Z}=O;if(0===m&&(T<S||w<C||I>Z||x>M))return null;const P=new Array;let D=!1;const E=null==n.ioConfig.allowPartialFill?t.allowPartialFill:n.ioConfig.allowPartialFill;for(let $=I;$<=T;$++)for(let _=x;_<=w;_++){let ne=_;if(!t.disableWrapAround&&m&&null!=y&&h<=_&&(ne=_-h-p),$>=S&&ne>=C&&Z>=$&&M>=ne){const ye=n._fetchRawTile(r,$,ne,t);P.push(E?new Promise(Q=>{ye.then(ie=>Q(ie)).catch(()=>{D=!0,Q(null)})}):ye)}else P.push(Promise.resolve(null))}if(0===P.length)return null;const A=yield Promise.all(P),B={height:(T-I+1)*l,width:(w-x+1)*o},{spatialReference:J}=n.rasterInfo,z=n.getPyramidPixelSize(r),{x:H,y:te}=z;return{extent:new U.Z({xmin:a.x+x*o*H,xmax:a.x+(w+1)*o*H,ymin:a.y-(T+1)*l*te,ymax:a.y-I*l*te,spatialReference:J}),pixelBlocks:A,mosaicSize:B,isPartiallyFilled:D}})()}_isSameResolution(r,e,i){return Math.abs(r.x-e.x)<i&&Math.abs(r.y-e.y)<i}_fetchRawTile(r,e,i,t){const n=this.rasterInfo.storageInfo.blockBoundary[r];if(!n)return Promise.resolve(null);const{minRow:a,minCol:s,maxCol:o,maxRow:l}=n;if(e<a||i<s||e>l||i>o)return Promise.resolve(null);const c=(0,se.Rq)(this.url,t.sliceId),u=`${r}/${e}/${i}`;let f=(0,se.Qg)(c,t.registryId,u);if(null==f){const d=new AbortController;f=this.fetchRawTile(r,e,i,{...t,signal:d.signal}),(0,se.gX)(c,t.registryId,u,f,d),f.catch(()=>(0,se.Gc)(c,t.registryId,u))}return t.signal&&(0,ge.fu)(t,()=>{(0,se.OE)(c,t.registryId,u)}),f}_computeMagDirValues(r){const{bandCount:e,dataType:i}=this.rasterInfo;if((2!==e||"vector-magdir"!==i)&&"vector-uv"!==i||2!==r?.length||!r[0]?.length)return null;const t=r[0].length;if("vector-magdir"===i){const l=r[1].map(c=>(c+360)%360);return[r[0],l]}const[n,a]=r,s=[],o=[];for(let l=0;l<t;l++){const[c,u]=(0,Le.Tg)([n[l],a[l]]);s.push(c),o.push(u)}return[s,o]}_getRasterTileAlignmentInfo(r,e){return null==this._rasterTileAlighmentInfo&&(this._rasterTileAlighmentInfo=(0,N.P_)(this.rasterInfo)),null==this._rasterTileAlighmentInfo.pyramidsInfo?null:{startX:e,halfWorldWidth:this._rasterTileAlighmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlighmentInfo.hasGCSSShiftTransform,...this._rasterTileAlighmentInfo.pyramidsInfo[r]}}_getSourceDataInfo(r,e,i,t={}){const n={datumTransformation:t.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};t.srcResolution&&(n.srcResolution=t.srcResolution,this._updateSourceDataInfo(r,n));const a=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:s,srcHeight:o,pyramidLevel:l}=n,c=s/e,u=o/i,f=l<a&&c*u>=16,d=l===a&&this._requireTooManySrcTiles(s,o,e,i);if(f||d||0===s||0===o){const m=new W.Z({x:(r.xmax-r.xmin)/e,y:(r.ymax-r.ymin)/i,spatialReference:r.spatialReference});let y=(0,N.VO)(m,this.rasterInfo.spatialReference,r,n.datumTransformation);if(f&&t.srcResolution&&(!y||t.srcResolution&&y.x+y.y<t.srcResolution.x+t.srcResolution.y)){const h=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(a-l+3>=h){const p=2**h;y={x:t.srcResolution.x*p,y:t.srcResolution.y*p}}}y&&(n.srcResolution=y,this._updateSourceDataInfo(r,n))}return this._requireTooManySrcTiles(n.srcWidth,n.srcHeight,e,i)&&(n.srcWidth=0,n.srcHeight=0),n}_requireTooManySrcTiles(r,e,i,t){const{tileInfo:n}=this.rasterInfo.storageInfo;return Math.ceil(r/n.size[0])*Math.ceil(e/n.size[1])>=256||r/i>8||e/t>8}_updateSourceDataInfo(r,e){e.srcWidth=0,e.srcHeight=0;const{rasterInfo:i}=this,t=i.spatialReference,{srcResolution:n,datumTransformation:a}=e,{pyramidLevel:s,pyramidResolution:o,excessiveReading:l}=(0,N.kr)(n,i,this.ioConfig.sampling);if(l)return;let c=e.srcExtent||(0,N.tB)(r,t,a);if(null==c)return;const u=i.transform;u&&(c=u.inverseTransform(c)),e.srcExtent=c;const{x:f,y:d}=i.storageInfo.origin,m=Math.floor((c.xmin-f)/o.x+.1),y=Math.floor((d-c.ymax)/o.y+.1),g=Math.floor((c.xmax-f)/o.x-.1),h=Math.floor((d-c.ymin)/o.y-.1),p=c.width<.1*o.x?0:g-m+1,x=c.height<.1*o.y?0:h-y+1;e.pyramidLevel=s,e.pyramidResolution=o,e.srcWidth=p,e.srcHeight=x,e.ul={x:m,y}}_getRequestOptionsWithSliceId(r){return null!=this.rasterInfo.multidimensionalInfo&&null==r.sliceId&&(r={...r,sliceId:this.getSliceIndex(r.multidimensionalDefinition)}),r}_processIdentifyResult(r,e){const{srcLocation:i,position:t,pyramidLevel:n,useTransposedTile:a}=e,s=r.pixels[0].length/r.width/r.height;if(r.mask&&!r.mask[t])return{location:i,value:null};const{multidimensionalInfo:o}=this.rasterInfo;if(null==o||!a){const h=r.pixels.map(I=>I[t]),p={location:i,value:h,pyramidLevel:n},x=this._computeMagDirValues(h.map(I=>[I]));return x?.length&&(p.magdirValue=x.map(I=>I[0])),p}let l=r.pixels.map(h=>h.slice(t*s,t*s+s)),c=this._computeMagDirValues(l);const{requestSomeSlices:u,identifyOptions:f}=e;let d=(0,X.MO)(o,f.transposedVariableName);if(u){const h=(0,X.Ur)(d,f.multidimensionalDefinition,f.timeExtent);l=l.map(p=>h.map(x=>p[x])),c=c?.map(p=>h.map(x=>p[x])),d=h.map(p=>d[p])}const m=r.noDataValues||this.rasterInfo.noDataValue,y={pixels:l,pixelType:r.pixelType};let g;return null!=m&&((0,Mt.A)(y,m),g=y.mask),{location:i,value:null,dataSeries:d.map((h,p)=>{const x={value:0===g?.[p]?null:l.map(I=>I[p]),multidimensionalDefinition:h.multidimensionalDefinition.map(I=>new et.Z({...I,isSlice:!0}))};return c?.length&&(x.magdirValue=[c[0][p],c[1][p]]),x}),pyramidLevel:n}}};(0,b._)([(0,R.Cb)()],G.prototype,"_rasterTileAlighmentInfo",void 0),(0,b._)([(0,R.Cb)({readOnly:!0})],G.prototype,"_isGlobalWrappableSource",null),(0,b._)([(0,R.Cb)({readOnly:!0})],G.prototype,"_hasNoneOrGCSShiftTransform",null),(0,b._)([(0,R.Cb)()],G.prototype,"rasterJobHandler",null),(0,b._)([(0,R.Cb)(ze.HQ)],G.prototype,"url",null),(0,b._)([(0,R.Cb)({type:String,json:{write:!0}})],G.prototype,"datasetName",void 0),(0,b._)([(0,R.Cb)({type:String,json:{write:!0}})],G.prototype,"datasetFormat",void 0),(0,b._)([(0,R.Cb)()],G.prototype,"hasUniqueSourceStorageInfo",void 0),(0,b._)([(0,R.Cb)()],G.prototype,"rasterInfo",void 0),(0,b._)([(0,R.Cb)()],G.prototype,"ioConfig",void 0),(0,b._)([(0,R.Cb)()],G.prototype,"sourceJSON",void 0),G=(0,b._)([(0,q.j)("esri.layers.support.rasterDatasets.BaseRaster")],G);const ue=G;var We=v(17253);let fe=class extends ue{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null}open(r){var e=this;return(0,F.Z)(function*(){yield e.init();const{rasterFunction:i}=e;e.primaryRasters?.rasters?.length?i.sourceRasters=e.primaryRasters.rasters:(e.primaryRasters=i.getPrimaryRasters(),e.rasterJobHandler&&e.primaryRasters.rasters?.forEach(u=>u.rasterJobHandler=e.rasterJobHandler));const{rasters:t,rasterIds:n}=e.primaryRasters,a=t.map(u=>u.rasterInfo?void 0:u.open(r));yield Promise.all(a);const s=t.map(({rasterInfo:u})=>u),o=i.bind({rasterInfos:s,rasterIds:n});if(!o.success||0===s.length)throw new k.Z("raster-function:open",`cannot bind the function: ${o.error??""}`);const l="Table"===i.functionName?i:i.functionArguments?.raster;"Table"===l?.functionName&&(i.rasterInfo.attributeTable=We.Z.fromJSON(l.functionArguments.attributeTableAsRecordSet)),yield e.syncJobHandler();const c=s[0];e.hasUniqueSourceStorageInfo=1===s.length||s.slice(1).every(u=>e._hasSameStorageInfo(u,c)),e.set("sourceJSON",t[0].sourceJSON),e.set("rasterInfo",i.rasterInfo)})()}syncJobHandler(){var r=this;return(0,F.Z)(function*(){return r.rasterJobHandler?.updateRasterFunction(r.rasterFunction)})()}fetchPixels(r,e,i,t={}){var n=this;return(0,F.Z)(function*(){const{rasters:a,rasterIds:s}=n.primaryRasters;let o=!1;const{interpolation:l}=t,c=n.rasterFunction.flatWebGLFunctionChain?.hasFocalFunction;!t.requestRawData&&"bilinear"!==l&&c&&(o=1===a.length&&!t.skipRasterFunction,t={...t,interpolation:"bilinear",requestRawData:o});const u=a.map(I=>I.fetchPixels(r,e,i,t)),f=yield Promise.all(u),d=f.map(I=>I.pixelBlock),m=o||t.requestRawData?f.map(I=>I.srcTilePixelSize):null;if(t.skipRasterFunction||d.every(I=>null==I))return f[0];const y=f.find(I=>null!=I.pixelBlock)?.extent??r,g=n.rasterJobHandler?yield n.rasterJobHandler.process({extent:y,primaryPixelBlocks:d,primaryPixelSizes:m,primaryRasterIds:s}):n.rasterFunction.process({extent:y,primaryPixelBlocks:d,primaryPixelSizes:m,primaryRasterIds:s}),{transformGrid:h}=f[0];if(!o||null==g||null==h)return{...f[0],pixelBlock:g};const p={rows:h.spacing[0],cols:h.spacing[1]};let x;return x=n.rasterJobHandler?(yield n.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[g],srcMosaicSize:{width:g.width,height:g.height},destDimension:{width:e,height:i},coefs:h.coefficients,sampleSpacing:p,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:l,alignmentInfo:void 0,blockWidths:null},t)).pixelBlock:(0,ae.Uk)(g,{width:e,height:i},h.coefficients,p,l),{extent:r,srcExtent:f[0].srcExtent,pixelBlock:x}})()}_hasSameStorageInfo(r,e){const{storageInfo:i,pixelSize:t,spatialReference:n,extent:a}=r,{storageInfo:s,pixelSize:o,spatialReference:l,extent:c}=e;return t.x===o.x&&t.y===o.y&&n.equals(l)&&a.equals(c)&&i.blockHeight===s.blockHeight&&i.blockWidth===s.blockWidth&&i.maximumPyramidLevel===s.maximumPyramidLevel}};(0,b._)([(0,R.Cb)({type:String,json:{write:!0}})],fe.prototype,"datasetFormat",void 0),(0,b._)([(0,R.Cb)()],fe.prototype,"tileType",void 0),(0,b._)([(0,R.Cb)()],fe.prototype,"rasterFunction",void 0),(0,b._)([(0,R.Cb)()],fe.prototype,"primaryRasters",void 0),fe=(0,b._)([(0,q.j)("esri.layers.support.rasterDatasets.FunctionRaster")],fe);const Ue=fe;var it=v(16730),oe=v(85073);function je(){return(je=(0,F.Z)(function*(r,e,i){if("extent"===i.type)return function kt(r,e,i){const{width:t,height:n}=r,a=new Uint8Array(t*n),s=e.width/t,o=e.height/n;if(i.width/s<.5||i.height/o<.5)return new oe.Z({pixelType:r.pixelType,width:t,height:n,mask:a,pixels:[...r.pixels]});const{xmin:l,xmax:c,ymin:u,ymax:f}=e,{xmin:d,xmax:m,ymin:y,ymax:g}=i,h=Math.max(l,d),p=Math.min(c,m),x=Math.max(u,y),I=Math.min(f,g),w=.5*s,T=.5*o;if(p-h<w||I-x<T||p<l+w||h>c-w||x>f-T||I<u+T)return new oe.Z({pixelType:r.pixelType,width:t,height:n,mask:a,pixels:[...r.pixels]});const O=Math.max(0,(h-l)/s),S=Math.min(t,Math.max(0,(p-l)/s)),C=Math.max(0,(f-I)/o),M=Math.min(n,Math.max(0,(f-x)/o)),Z=Math.round(O),P=Math.round(S)-1,D=Math.round(C),E=Math.round(M)-1;if(Z===P&&O%1>.5&&S%1<.5||D===E&&C%1>.5&&M%1<.5)return new oe.Z({pixelType:r.pixelType,width:t,height:n,mask:a,pixels:[...r.pixels]});if(0===Z&&0===D&&P===t&&E===n)return r;const A=r.mask;for(let B=D;B<=E;B++)for(let J=Z;J<=P;J++){const z=B*t+J;a[z]=A?A[z]:255}return new oe.Z({pixelType:r.pixelType,width:t,height:n,mask:a,pixels:[...r.pixels]})}(r,e,i);const{width:t,height:n}=r,a=new Uint8Array(t*n),{contains:s,intersects:o}=yield Promise.all([v.e(4918),v.e(8592),v.e(4766)]).then(v.bind(v,44766));return o(e,i)?"polyline"===i.type?function Bt(r,e,i){const{width:t,height:n}=r,a=new Uint8Array(t*n),s=e.width/t,o=e.height/n,{xmin:l,ymax:c}=e,{paths:u}=i,f=r.mask;for(let d=0;d<u.length;d++){const m=u[d];for(let y=0;y<m.length-1;y++){const[g,h]=m[y],[p,x]=m[y+1];let I=Math.floor((c-h)/o),w=Math.floor((c-x)/o);if(w<I){const O=I;I=w,w=O}I=Math.max(0,I),w=Math.min(n-1,w);const T=(p-g)/(x-h);for(let O=I;O<=w;O++){const S=O===I?Math.max(h,x):(n+1-O)*o,C=O===w?Math.min(h,x):S-o;let M=Math.floor(x===h?(g-l)/s:(T*(S-h)+g-l)/s),Z=Math.floor(x===h?(p-l)/s:(T*(C-h)+g-l)/s);if(Z<M){const D=M;M=Z,Z=D}const P=O*t;M=Math.max(0,M),Z=Math.min(t-1,Z);for(let D=P+M;D<=P+Z;D++)a[D]=f?f[D]:255}}}return new oe.Z({pixelType:r.pixelType,width:t,height:n,mask:a,pixels:[...r.pixels]})}(r,e,i):s(i,e)?r:function Dt(r,e,i){if(!r)return r;const{width:t,height:n}=r,a=e.width/t,s=e.height/n,{xmin:o,ymax:l}=e;let c;if("extent"===i.type){const h=(i.xmin-o)/a,p=(i.xmax-o)/a,x=(l-i.ymax)/s,I=(l-i.ymin)/s;c=[[[h,x],[h,I],[p,I],[p,x],[h,x]]]}else c=i.rings.map(h=>h.map(([p,x])=>[(p-o)/a,(l-x)/s]));const u=document.createElement("canvas");u.width=t,u.height=n;const f=u.getContext("2d");f.fillStyle="#f00",c.forEach(h=>{f.beginPath(),f.moveTo(h[0][0],h[0][1]);for(let p=0;p<h.length;p++)f.lineTo(h[p][0],h[p][1]);f.closePath(),f.fill()});const d=f.getImageData(0,0,t,n).data,m=r.mask,y=t*n,g=new Uint8Array(y);for(let h=0;h<y;h++)m&&!m[h]||(g[h]=d[4*h+3]>127?255:0);return new oe.Z({pixelType:r.pixelType,width:t,height:n,mask:g,maskIsAlpha:!1,pixels:[...r.pixels]})}(r,e,i):new oe.Z({pixelType:r.pixelType,width:t,height:n,mask:a,maskIsAlpha:!1,pixels:[...r.pixels]})})).apply(this,arguments)}var Oe=v(93865),Se=v(17057),le=v(8341),Nt=v(99033),Et=v(27599),At=v(37084),j=v(65234);const st=Me.Z.getLogger("esri.layers.mixins.ImageryTileMixin"),zt=r=>{let e=class extends r{constructor(...t){super(...t),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.rasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster="Function"===t[0]?.raster?.datasetFormat}get fullExtent(){return this.rasterInfo?.extent}set multidimensionalDefinition(t){this._set("multidimensionalDefinition",t),this.updateRenderer()}set rasterFunction(t){"none"===t?.functionName?.toLowerCase()&&(t=void 0),this._set("rasterFunction",t),this.updateRasterFunction()}set url(t){this._set("url",(0,qe.Nm)(t,st))}set renderer(t){null==t&&null==this.rasterFunction?this._configDefaultRenderer("override"):(this._set("renderer",t),this.updateRenderer())}readRenderer(t,n,a){const s=n?.layerDefinition?.drawingInfo?.renderer;return(0,Ae.ij)(s,a)||void 0}convertVectorFieldData(t,n){var a=this;return(0,F.Z)(function*(){if(null==t||!a.rasterInfo)return null;const s=a._rasterJobHandler.instance,o=a.rasterInfo.dataType;return s?s.convertVectorFieldData({pixelBlock:t,dataType:o},n):(0,Le.KC)(t,o)})()}computeStatisticsHistograms(t,n){var a=this;return(0,F.Z)(function*(){t=(0,Pe.TJ)(Et.Z,t).clone();const{rasterInfo:s}=a,{geometry:o}=t;if(null==o)throw new k.Z("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let l=o;const{spatialReference:c}=s;o.spatialReference.equals(c)||(yield(0,N.zD)(),l="extent"===o.type?(0,N.tB)(o,c):(0,N.Wt)(o,c));const u=t.pixelSize??new W.Z({x:s.pixelSize.x,y:s.pixelSize.y,spatialReference:c}),{extent:f,width:d,height:m}=function Jt(r,e,i,t=!0){const{spatialReference:n}=r,{x:a,y:s}=function Ot(r,e){if(r.spatialReference.equals(e))return r;const i=(0,it.c9)(r.spatialReference),t=(0,it.c9)(e);if(i===t)return r;const n=i/t;return{x:r.x*n,y:r.y*n}}(i,n);let o,l,c;const u="extent"===e.type?e:e.extent;let{xmin:f,xmax:d,ymax:m,ymin:y}=u;const{xmin:g,ymax:h}=r.extent;return t?(f=g+(f>g?a*Math.round((f-g)/a):0),m=h-(m<h?s*Math.round((h-m)/s):0),d=g+(d>g?a*Math.round((d-g)/a):0),y=h-(y<h?s*Math.round((h-y)/s):0),o=new U.Z({xmin:f,ymax:m,xmax:d,ymin:y,spatialReference:n}),l=Math.round(o.width/a),c=Math.round(o.height/s)):(l=Math.floor((d-f)/a+.8),c=Math.floor((m-y)/s+.8),f=g+(f>g?a*Math.floor((f-g)/a+.1):0),m=h-(m<h?s*Math.floor((h-m)/s+.1):0),d=f+l*a,y=m-c*s,o=new U.Z({xmin:f,ymax:m,xmax:d,ymin:y,spatialReference:n})),{extent:o,width:l,height:c}}(s,l,u),y=yield a.fetchPixels(f,d,m,{...n,interpolation:"nearest"});if(null==y.pixelBlock)throw new k.Z("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const g=yield function Zt(r,e,i){return je.apply(this,arguments)}(y.pixelBlock,f,l),h=a._rasterJobHandler.instance;return h?h.computeStatisticsHistograms({pixelBlock:g},n):(0,Se.js)(g)})()}createFlowMesh(t,n){var a=this;return(0,F.Z)(function*(){const s=a._rasterJobHandler.instance;return s?s.createFlowMesh(t,n):(0,At.GE)(t.meshType,t.simulationSettings,t.flowData,null!=n.signal?n.signal:(new AbortController).signal)})()}normalizeRasterFetchOptions(t){const{multidimensionalInfo:n}=this.rasterInfo??{};if(null==n)return t;let a=t.multidimensionalDefinition||this.multidimensionalDefinition;a?.length||(a=(0,X.Tj)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const s=t.timeExtent||this.timeExtent;if(null!=a&&null!=s&&(null!=s.start||null!=s.end)){a=a.map(g=>g.clone());const o=n.variables.find(({name:g})=>g===a[0].variableName)?.dimensions?.find(({name:g})=>"StdTime"===g),l=a.find(({dimensionName:g})=>"StdTime"===g);if(!o||!l)return{...t,multidimensionalDefinition:null};const{start:c,end:u}=s,f=null==c?null:c.getTime(),d=null==u?null:u.getTime(),m=f??d,y=d??f;if(null!=o.values){const g=o.values.filter(h=>Array.isArray(h)?m===y?h[0]<=m&&h[1]>=m:h[0]<=m&&h[1]>m||h[0]<y&&h[1]>=y||h[0]>=m&&h[1]<=y||h[0]<m&&h[1]>y:m===y?h===m:h>=m&&h<=y);if(g.length){const h=g.sort((p,x)=>{const I=Array.isArray(p)?p[0]:p,w=Array.isArray(p)?p[1]:p,T=Array.isArray(x)?x[0]:x,O=Array.isArray(x)?x[1]:x;return m===y?I-T:Math.abs(w-y)-Math.abs(O-y)})[0];l.values=[h]}else a=null}else if(o.hasRegularIntervals&&o.extent){const[g,h]=o.extent;m>h||y<g?a=null:l.values=m===y?[m]:[Math.max(g,m),Math.min(h,y)]}}return null!=a&&(0,X.nb)(a,this.multidimensionalSubset)?{...t,multidimensionalDefinition:null}:{...t,multidimensionalDefinition:a}}updateRasterFunction(){var t=this;return(0,F.Z)(function*(){if(!t.loaded||"imagery-tile"!==t.type||!t.rasterFunction&&!t._cachedRasterFunctionJson||JSON.stringify(t.rasterFunction)===JSON.stringify(t._cachedRasterFunctionJson))return;if(t._isConstructedFromFunctionRaster&&"Function"===t.raster.datasetFormat){const f=t.raster.rasterFunction.toJSON();return!t.rasterFunction&&f&&t._set("rasterFunction",He.Z.fromJSON(f)),void(t._cachedRasterFunctionJson=t.rasterFunction?.toJSON())}let n,a=t.raster,s=!1;"Function"===a.datasetFormat?(n=a.primaryRasters.rasters,a=n[0],s=!0):n=[a];const{rasterFunction:o}=t;if(o){const f={raster:a};n.length>1&&n.forEach(y=>f[y.url]=y);const d=(0,Oe.Ue)(o.functionDefinition?.toJSON()??o.toJSON(),f),m=new Ue({rasterFunction:d});m.rasterJobHandler=t._rasterJobHandler.instance,yield m.open(),t._cachedRasterFunctionJson=t.rasterFunction?.toJSON(),t.raster=m}else t.raster=a,t._cachedRasterFunctionJson=null,yield a.when();if(t._cachedRendererJson=null,!s&&!o)return;const{bandIds:l}=t,{bandCount:c}=t.raster.rasterInfo,u=l?.length?l.some(f=>f>=c):c>=3;l&&(u||t.renderer&&"raster-stretch"!==t.renderer.type)&&t._set("bandIds",null),t._configDefaultRenderer("auto")})()}updateRenderer(){var t=this;return(0,F.Z)(function*(){const{loaded:n,symbolizer:a}=t;if(!n||!a||!t.renderer)return;const{rasterInfo:s}=t.raster,l=(0,X.WY)(s,{multidimensionalDefinition:t.multidimensionalDefinition,multidimensionalSubset:t.multidimensionalSubset})?.name,c=(0,le.ol)({...t.renderer.toJSON(),variableName:l});if(JSON.stringify(t._cachedRendererJson)===JSON.stringify(c))return;const u=t._rasterJobHandler.instance;u&&(a.rasterInfo=(0,le.FI)(s,l),a.rendererJSON=c,a.bind(),yield u.updateSymbolizer(a),t._cachedRendererJson=c)})()}applyRenderer(t,n){var a=this;return(0,F.Z)(function*(){const s=t?.pixelBlock;if(!(null!=s&&s.pixels&&s.pixels.length>0))return null;let o;yield a.updateRenderer();const l=a._rasterJobHandler.instance,c=a.bandIds??[];return o=l?yield l.symbolize({...t,simpleStretchParams:n,bandIds:c}):a.symbolizer.symbolize({...t,simpleStretchParams:n,bandIds:c}),o})()}getTileUrl(t,n,a){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${t}/${n}/${a}`:""}getCompatibleTileInfo(t,n,a=!1){if(!this.loaded||null==n)return null;if(a&&t.equals(this.spatialReference))return this.tileInfo;const s=(0,Qe.C5)(t);return re.Z.create({size:256,spatialReference:t,origin:s?{x:s.origin[0],y:s.origin[1]}:{x:n.xmin,y:n.ymax}})}getCompatibleFullExtent(t){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(t)||(this._compatibleFullExtent=this.raster.computeExtent(t)),this._compatibleFullExtent):null}fetchTile(t,n,a,s={}){var o=this;return(0,F.Z)(function*(){if(i(o),s.requestAsImageElement){const c=o.getTileUrl(t,n,a);return(0,Ke.Z)(c,{responseType:"image",query:{...o.refreshParameters,...o.raster.ioConfig.customFetchParameters},signal:s.signal}).then(u=>u.data)}const{rasterInfo:l}=o;return null!=l.multidimensionalInfo&&null==(s=o.normalizeRasterFetchOptions(s)).multidimensionalDefinition?{extent:o.raster.getTileExtentFromTileInfo(t,n,a,s.tileInfo||l.storageInfo.tileInfo),pixelBlock:null}:(yield o._initJobHandler(),yield o.updateRasterFunction(),"raster-shaded-relief"===o.renderer?.type&&(s={...s,buffer:{cols:1,rows:1}}),o.raster.fetchTile(t,n,a,s))})()}fetchPixels(t,n,a,s={}){var o=this;return(0,F.Z)(function*(){return null!=o.rasterInfo.multidimensionalInfo&&null==(s=o.normalizeRasterFetchOptions(s)).multidimensionalDefinition?{extent:t,pixelBlock:null}:(yield o._initJobHandler(),yield o.updateRasterFunction(),n=Math.round(n),a=Math.round(a),o.raster.fetchPixels(t,n,a,s))})()}identify(t,n={}){var a=this;return(0,F.Z)(function*(){const{raster:s,rasterInfo:o}=a;if(!(null==o.multidimensionalInfo||o.hasMultidimensionalTranspose&&((0,X.WU)(n.multidimensionalDefinition)||n.transposedVariableName||n.timeExtent)||null!=(n=a.normalizeRasterFetchOptions(n)).multidimensionalDefinition))return{location:t,value:null};const l=a.multidimensionalSubset?.areaOfInterest;if(l&&!l.contains(t))throw new k.Z("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return s.identify(t,n)})()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const t=this.rasterInfo?.multidimensionalInfo;if(null==t||"standard-time"!==this.rasterInfo?.dataType)return!1;const n=this.multidimensionalDefinition,a=n?.[0]?.variableName;return t.variables.some(s=>s.name===a&&(!n?.[0].dimensionName||s.dimensions.some(o=>"StdTime"===o.name)))}getStandardTimeValue(t){return new Date(24*(t-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(t){return(0,X.jj)(this.multidimensionalSubset,t??this.rasterInfo?.multidimensionalInfo)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=(0,X.Tj)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&"Function"===this.raster.datasetFormat&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){var t=this;if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const n=new wt.Z;return this._rasterJobHandler.connectionPromise=n.initialize().then((0,F.Z)(function*(){i(t),t._rasterJobHandler.instance=n,t.raster.rasterJobHandler=n,"Function"===t.raster.datasetFormat&&t.raster.syncJobHandler(),t.rasterFunction&&(yield t.updateRasterFunction().catch(()=>{})),t.renderer&&t.updateRenderer()})).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(null==this.interpolation){i(this);const{raster:t}=this,n=(0,le.In)(t.rasterInfo,t.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",n)}}_configDefaultRenderer(t="no"){i(this);const{rasterInfo:n}=this.raster;!this.bandIds&&n.bandCount>1&&(this.bandIds=(0,le.YD)(n));const s=(0,X.WY)(n,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset})?.name;if(!this.renderer||"override"===t){const u=(0,le.Ob)(n,{bandIds:this.bandIds,variableName:s}),f=n.statistics,d=f&&f.length>0?f[0]:null;"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===u.type&&((d?.max??0)>1e24||(d?.min??0)<-1e24)&&(u.dynamicRangeAdjustment=!0,u.statistics=null,"none"===u.stretchType&&(u.stretchType="min-max")),this.renderer=u}const o=(0,le.ol)({...this.renderer.toJSON(),variableName:s}),l=(0,le.FI)(n,s);this.symbolizer?(this.symbolizer.rendererJSON=o,this.symbolizer.rasterInfo=l):this.symbolizer=new Nt.Z({rendererJSON:o,rasterInfo:l});const c=this.symbolizer.bind();if(c.success){if("auto"===t){const{colormap:u}=this.raster.rasterInfo,f=this.renderer;if(null!=u&&"raster-colormap"===f.type){const d=(0,le.Ob)(this.raster.rasterInfo);JSON.stringify(d)!==JSON.stringify(f)&&this._configDefaultRenderer("override")}else if("raster-stretch"===f.type){const d=this.bandIds?.length,m=f.statistics?.length;!f.dynamicRangeAdjustment&&m&&d&&m!==d&&this._configDefaultRenderer("override")}}}else st.warn("imagery-tile-mixin",c.error||"The given renderer is not supported by the layer."),"auto"===t&&this._configDefaultRenderer("override")}};function i(t){if(!t.raster||!t.rasterInfo)throw new k.Z("imagery-tile","no raster")}return(0,b._)([(0,R.Cb)({clonable:!1})],e.prototype,"_cachedRendererJson",void 0),(0,b._)([(0,R.Cb)({clonable:!1})],e.prototype,"_cachedRasterFunctionJson",void 0),(0,b._)([(0,R.Cb)({clonable:!1})],e.prototype,"_compatibleFullExtent",void 0),(0,b._)([(0,R.Cb)({clonable:!1})],e.prototype,"_isConstructedFromFunctionRaster",void 0),(0,b._)([(0,R.Cb)({clonable:!1})],e.prototype,"_rasterJobHandler",void 0),(0,b._)([(0,R.Cb)()],e.prototype,"bandIds",void 0),(0,b._)([(0,R.Cb)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),(0,b._)([(0,R.Cb)({json:{read:!1}})],e.prototype,"fullExtent",null),(0,b._)([(0,R.Cb)()],e.prototype,"interpolation",void 0),(0,b._)([(0,R.Cb)()],e.prototype,"ioConfig",void 0),(0,b._)([(0,R.Cb)({type:[et.Z],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),(0,b._)([(0,R.Cb)({type:Tt.Z,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),(0,b._)([(0,R.Cb)()],e.prototype,"raster",void 0),(0,b._)([(0,R.Cb)({type:He.Z,json:{name:"renderingRule",write:!0}})],e.prototype,"rasterFunction",null),(0,b._)([(0,R.Cb)()],e.prototype,"rasterInfo",void 0),(0,b._)([(0,R.Cb)()],e.prototype,"sourceJSON",void 0),(0,b._)([(0,R.Cb)({readOnly:!0,type:j.Z,json:{read:!1}})],e.prototype,"spatialReference",void 0),(0,b._)([(0,R.Cb)({type:re.Z})],e.prototype,"tileInfo",void 0),(0,b._)([(0,R.Cb)(ze.HQ)],e.prototype,"url",null),(0,b._)([(0,R.Cb)({types:Ae.dr,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||!("raster-stretch"===this.renderer?.type&&"none"===this.renderer.stretchType&&!this.renderer.useGamma)}}},origins:{"web-scene":{types:Ae.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&"vector-field"!==t.type&&"flow"!==t.type})}}}}})],e.prototype,"renderer",null),(0,b._)([(0,Rt.r)("renderer")],e.prototype,"readRenderer",null),(0,b._)([(0,R.Cb)({clonable:!1})],e.prototype,"symbolizer",void 0),e=(0,b._)([(0,q.j)("esri.layers.ImageryTileMixin")],e),e};var Ht=v(49286),Lt=v(6647),Wt=v(30346),Ut=v(99555),jt=v(97941),xe=v(36255),Gt=v(2939),Re=v(84727),at=v(15365);function Vt(r){const e=r.fields,i=r.records,t=e.some(c=>"oid"===c.name.toLowerCase())?"OBJECTID":"OID",n=[{name:t,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),a=n.map(c=>c.name),s=[];let o=0,l=0;return i.forEach(c=>{const u={};for(u[t]=o++,l=1;l<a.length;l++)u[a[l]]=c[l-1];s.push({attributes:u})}),{displayFieldName:"",fields:n,features:s}}class ot{static get supportedVersions(){return[5]}static parse(e){const i=new DataView(e),t=3&i.getUint8(0);if(3!==t)return{header:{version:t},recordSet:null};const n=i.getUint32(4,!0),a=i.getUint16(8,!0),s=i.getUint16(10,!0),o={version:t,recordCount:n,headerByteCount:a,recordByteCount:s};let l=32;const c=[],u=[];let f;if(3===t){for(;13!==i.getUint8(l);)f=String.fromCharCode(i.getUint8(l+11)).trim(),c.push({name:(0,at.f)(new Uint8Array(e,l,11)),type:f,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(f)],length:i.getUint8(l+16)}),l+=32;if(l+=1,c.length>0)for(;u.length<n&&e.byteLength-l>s;){const d=[];32===i.getUint8(l)?(l+=1,c.forEach(m=>{if("C"===m.type)d.push((0,at.f)(new Uint8Array(e,l,m.length)).trim());else if("N"===m.type)d.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim(),10));else if("F"===m.type)d.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim()));else if("D"===m.type){const y=String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim();d.push(new Date(parseInt(y.substring(0,4),10),parseInt(y.substring(4,6),10)-1,parseInt(y.substring(6,8),10)))}l+=m.length}),u.push(d)):l+=s}}return{header:o,fields:c,records:u,recordSet:Vt({fields:c,records:u})}}}var lt=v(46572);const de=new Map;de.set("int16","esriFieldTypeSmallInteger"),de.set("int32","esriFieldTypeInteger"),de.set("int64","esriFieldTypeInteger"),de.set("float32","esriFieldTypeSingle"),de.set("float64","esriFieldTypeDouble"),de.set("text","esriFieldTypeString");let Te=class extends ue{constructor(){super(...arguments),this.storageInfo=null,this.datasetFormat="CRF"}open(r){var e=this;return(0,F.Z)(function*(){yield e.init();const{data:i}=yield e.request(e.url+"/conf.json",{signal:r?.signal});if(!e._validateHeader(i))throw new k.Z("cloudraster:open","Invalid or unsupported conf.json.");e.datasetName=e.url.slice(e.url.lastIndexOf("/")+1);const{storageInfo:t,rasterInfo:n}=e._parseHeader(i);if("thematic"===n.dataType){const a=yield e._fetchAuxiliaryInformation();n.attributeTable=a}e._set("storageInfo",t),e._set("rasterInfo",n),e.ioConfig.retryCount=e.ioConfig.retryCount||0})()}fetchRawTile(r,e,i,t={}){var n=this;return(0,F.Z)(function*(){const{transposeInfo:a}=n.rasterInfo.storageInfo,{transposedVariableName:s}=t,o=!(!a||!s),l=o?0:n.rasterInfo.storageInfo.maximumPyramidLevel-r;if(l<0)return null;const c=n._buildCacheFilePath(l,e,i,t.multidimensionalDefinition,s),u=n._getIndexRecordFromBundle(e,i,o),f=yield n.request(c,{range:{from:0,to:n.storageInfo.headerSize-1},responseType:"array-buffer",signal:t.signal});if(!f)return null;const d=new Uint8Array(f.data),m=n._getTileEndAndContentType(d,u);if(0===m.recordSize)return null;const y=yield n.request(c,{range:{from:m.position,to:m.position+m.recordSize},responseType:"array-buffer",signal:t.signal});if(!y)return null;const[g,h]=n._getTileSize(o);return n.decodePixelBlock(y.data,{width:g,height:h,planes:null,pixelType:null,returnInterleaved:o})})()}_validateHeader(r){return r&&"RasterInfo"===r.type&&!["origin","extent","geodataXform","LODInfos","blockWidth","blockHeight","bandCount","pixelType","pixelSizeX","pixelSizeY","format","packetSize"].some(i=>!r[i])}_parseHeader(r){const e=["u1","u2","u4","u8","s8","u16","s16","u32","s32","f32","f64"][r.pixelType],{bandCount:i,colormap:t,blockWidth:n,blockHeight:a,firstPyramidLevel:s,maximumPyramidLevel:o}=r,l=r.statistics?.map(H=>({min:H.min,max:H.max,avg:H.mean,stddev:H.standardDeviation,median:H.median,mode:H.mode})),c=r.histograms?.[0]?.counts?.length?r.histograms:null,u=r.extent.spatialReference,f=r.geodataXform?.spatialReference,d=new j.Z(u?.wkid||u?.wkt||u?.wkt2?u:f);let m=new U.Z({xmin:r.extent.xmin,ymin:r.extent.ymin,xmax:r.extent.xmax,ymax:r.extent.ymax,spatialReference:d});const y=new W.Z({x:r.pixelSizeX,y:r.pixelSizeY,spatialReference:d}),g=Math.round((m.xmax-m.xmin)/y.x),h=Math.round((m.ymax-m.ymin)/y.y),p=this._parseTransform(r.geodataXform),x=p?m:null;p&&(m=p.forwardTransform(m),y.x=(m.xmax-m.xmin)/g,y.y=(m.ymax-m.ymin)/h);const I=r.properties??{},w=r.format.toLowerCase().replace("cache/",""),T=new W.Z(r.origin.x,r.origin.y,d);let O,S,C,M;if(t?.colors)for(O=[],S=0;S<t.colors.length;S++)C=t.colors[S],M=t.values?t.values[S]:S,O.push([M,255&C,C<<16>>>24,C<<8>>>24,C>>>24]);const Z=r.LODInfos,P=[];for(S=0;S<Z.levels.length;S++)P.push(new tt.Z({level:Z.levels[S],resolution:Z.resolutions[S],scale:96/.0254*Z.resolutions[S]}));const D=new re.Z({dpi:96,lods:P,format:w,origin:T,size:[n,a],spatialReference:d}),E={recordSize:8,packetSize:r.packetSize,headerSize:r.packetSize*r.packetSize*8+64},A=[{maxCol:Math.ceil(g/n)-1,maxRow:Math.ceil(h/a)-1,minCol:0,minRow:0}];let B=2;if(o>0)for(S=0;S<o;S++)A.push({maxCol:Math.ceil(g/B/n)-1,maxRow:Math.ceil(h/B/a)-1,minCol:0,minRow:0}),B*=2;const J=r.mdInfo;let z=null;if(J&&I._yxs){const H=I._yxs;z={packetSize:H.PacketSize,tileSize:[H.TileXSize,H.TileYSize]}}return{storageInfo:E,rasterInfo:new Re.Z({width:g,height:h,pixelType:e,bandCount:i,extent:m,nativeExtent:x,transform:p,spatialReference:d,pixelSize:y,keyProperties:I,statistics:l,histograms:c,multidimensionalInfo:J,colormap:O,storageInfo:new be.Z({blockWidth:n,blockHeight:a,pyramidBlockWidth:n,pyramidBlockHeight:a,origin:T,tileInfo:D,transposeInfo:z,firstPyramidLevel:s,maximumPyramidLevel:o,blockBoundary:A})})}}_parseTransform(r){if(!(0,lt.j)(r))throw new k.Z("cloudraster:open","the data contains unsupported geodata transform types");const e=(0,lt.c)(r);if("identity"===e.type)return null;if("polynomial"!==e.type||!e.forwardCoefficients?.length||!e.inverseCoefficients?.length)throw new k.Z("cloudraster:open","the data contains unsupported geodata transforms - both forward and inverse coefficients are required currently");return e}_fetchAuxiliaryInformation(r){var e=this;return(0,F.Z)(function*(){const i=e.request(e.url+"/conf.vat.json",{signal:r}).then(s=>s.data).catch(()=>null),t=e.request(e.url+"/conf.vat.dbf",{responseType:"array-buffer",signal:r}).then(s=>s.data).catch(()=>null),n=yield Promise.all([i,t]);let a;if(n[0]){let s=n[0].fields;const o=n[0].values;if(s&&o){s=s.map(c=>({type:"OID"===c.name?"esriFieldTypeOID":de.get(c.type),name:c.name,alias:c.alias||c.name}));const l=o.map(c=>({attributes:c}));s&&o&&(a={fields:s,features:l})}}return!a&&n[1]&&(a=ot.parse(n[1]).recordSet),We.Z.fromJSON(a)})()}_buildCacheFilePath(r,e,i,t,n){const a=this._getPackageSize(!!n),s=Math.floor(e/a)*a,o=Math.floor(i/a)*a,l="R"+this._toHexString4(s)+"C"+this._toHexString4(o);let c="L";c+=r>=10?r.toString():"0"+r.toString();const{multidimensionalInfo:u}=this.rasterInfo,f=t?.[0];if(null==u||!f)return`${this.url}/_alllayers/${c}/${l}.bundle`;let d="_yxs";if(!n){d=u.variables.find(g=>g.name===f.variableName).dimensions[0].values.indexOf(f.values[0]).toString(16);const y=4-d.length;for(let g=0;g<y;g++)d="0"+d;d="S"+d}const m=this._getVariableFolderName(n||f.variableName);return`${this.url}/_alllayers/${m}/${d}/${c}/${l}.bundle`}_getPackageSize(r=!1){const{transposeInfo:e}=this.rasterInfo.storageInfo;return r&&null!=e?e.packetSize??0:this.storageInfo.packetSize}_getTileSize(r=!1){const{storageInfo:e}=this.rasterInfo,{transposeInfo:i}=e;return r&&null!=i?i.tileSize:e.tileInfo.size}_getVariableFolderName(r){return""===(r=r.trim())?"_v":r.replaceAll(/[\{|\}\-]/g,"_").replace("\\*","_v")}_getIndexRecordFromBundle(r,e,i=!1){const t=this._getPackageSize(i),n=t*(r%t)+e%t;if(n<0)throw new Error("Invalid level / row / col");return 20+n*this.storageInfo.recordSize+44}_getTileEndAndContentType(r,e){const i=r.subarray(e,e+8);let t,n=0;for(t=0;t<5;t++)n|=(255&i[t])<<8*t;const a=0xffffffffff&n;for(n=0,t=5;t<8;t++)n|=(255&i[t])<<8*(t-5);return{position:a,recordSize:0xffffffffff&n}}_toHexString4(r){let e=r.toString(16);if(4!==e.length){let i=4-e.length;for(;i-- >0;)e="0"+e}return e}};(0,b._)([(0,R.Cb)({readOnly:!0})],Te.prototype,"storageInfo",void 0),(0,b._)([(0,R.Cb)({type:String,json:{write:!0}})],Te.prototype,"datasetFormat",void 0),Te=(0,b._)([(0,q.j)("esri.layers.support.rasterDatasets.CloudRaster")],Te);const $t=Te;let we=class extends ue{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.data=null}open(r){var e=this;return(0,F.Z)(function*(){yield e.init();const i=e.data,{pixelBlock:t,statistics:n,histograms:a,name:s,keyProperties:o,nativeExtent:l,transform:c}=e.data,{width:u,height:f,pixelType:d}=t,m=i.extent??new U.Z({xmin:-.5,ymin:.5,xmax:u-.5,ymax:f-.5,spatialReference:new j.Z({wkid:3857})}),h=new Re.Z({width:u,height:f,pixelType:d,extent:m,nativeExtent:l,transform:c,pixelSize:{x:m.width/u,y:m.height/f},spatialReference:m.spatialReference,bandCount:t.pixels.length,keyProperties:o||{},statistics:n,isPseudoSpatialReference:i.isPseudoSpatialReference??!i.extent,histograms:a});e.createRemoteDatasetStorageInfo(h,512,512),e._set("rasterInfo",h),e.updateTileInfo(),yield e._buildInMemoryRaster(t,{width:512,height:512},r),e.datasetName=s,e.url="/InMemory/"+s})()}fetchRawTile(r,e,i,t={}){const n=this._pixelBlockTiles.get(`${r}/${e}/${i}`);return Promise.resolve(n)}_buildInMemoryRaster(r,e,i){var t=this;return(0,F.Z)(function*(){const n=t.rasterInfo.storageInfo.maximumPyramidLevel,a=t.rasterJobHandler?t.rasterJobHandler.split({pixelBlock:r,tileSize:e,maximumPyramidLevel:n},i):Promise.resolve((0,ae.Vl)(r,e,n)),s=null!=t.rasterInfo.statistics,o=null!=t.rasterInfo.histograms,l=s?Promise.resolve({statistics:null,histograms:null}):t.rasterJobHandler?t.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:r},i):Promise.resolve((0,Se.Hv)(r)),c=yield(0,ge.as)([a,l]);if(!c[0].value&&c[1].value)throw new k.Z("inmemory-raster:open","failed to build in memory raster");t._pixelBlockTiles=c[0].value,s||(t.rasterInfo.statistics=c[1].value?.statistics),o||(t.rasterInfo.histograms=c[1].value?.histograms)})()}};(0,b._)([(0,R.Cb)({type:String,json:{write:!0}})],we.prototype,"datasetFormat",void 0),(0,b._)([(0,R.Cb)()],we.prototype,"data",void 0),we=(0,b._)([(0,q.j)("esri.layers.support.rasterDatasets.InMemoryRaster")],we);const _t=we;function Ie(r,e){if(!r||!e)return[];let i=e;e.includes("/")?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=[];if(e){const a=Ie(r,i);for(let s=0;s<a.length;s++)Ie(a[s],e).forEach(o=>t.push(o));return t}const n=r.getElementsByTagNameNS("*",i);if(!n||0===n.length)return[];for(let a=0;a<n.length;a++)t.push(n[a]||n.item(a));return t}function Y(r,e){if(!r||!e)return null;let i=e;e.includes("/")?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=Ie(r,i);return t.length>0?e?Y(t[0],e):t[0]:null}function K(r,e=null){const i=e?Y(r,e):r;let t;return i?(t=i.textContent||i.nodeValue,t?t.trim():null):null}function Ze(r,e){return function Yt(r,e){const i=Ie(r,e),t=[];let n;for(let a=0;a<i.length;a++)n=i[a].textContent||i[a].nodeValue,n&&(n=n.trim(),""!==n&&t.push(n));return t}(r,e).map(i=>Number(i))}function me(r,e){const i=K(r,e);return Number(i)}function Ge(r,e){const i=r?.nodeName?.toLowerCase(),t=e.toLowerCase();return i.slice(i.lastIndexOf(":")+1)===t}var Ve=v(85374);function ut(r,e){if(!r||!e)return null;const i=[];for(let t=0;t<r.length;t++)i.push(r[t]),i.push(e[t]);return i}function De(r){if(!r)return null;let e=Number(r);if(!isNaN(e)&&0!==e)return new j.Z({wkid:e});if(r=String(r).trim(),(0,Qe.xl)(r))return new j.Z({wkt2:r});const i=r.toUpperCase();if(i.startsWith("COMPD_CS")){if(!i.includes("VERTCS")||!i.includes("GEOGCS")&&!i.startsWith("PROJCS"))return null;const t=i.indexOf("VERTCS"),n=i.indexOf("PROJCS"),a=n>-1?n:i.indexOf("GEOGCS");if(-1===a)return null;const s=r.slice(a,r.lastIndexOf("]",t)+1).trim(),o=r.slice(t,r.lastIndexOf("]")).trim();e=$e(s);const l=new j.Z(e?{wkid:e}:{wkt:s}),c=$e(o);return c&&(l.vcsWkid=c),l}return i.startsWith("GEOGCS")||i.startsWith("PROJCS")?(e=$e(r),new j.Z(0!==e?{wkid:e}:{wkt:r})):null}function $e(r){const e=r.replaceAll("]","[").replaceAll('"',"").split("[").map(n=>n.trim()).filter(n=>""!==n),i=e[e.length-1].split(","),t=i[0]?.toLowerCase();if(("epsg"===t||"esri"===t)&&r.endsWith('"]]')){const n=Number(i[1]);if(!isNaN(n)&&0!==n)return n}return 0}function _e(r){if("pamdataset"!==r?.documentElement.tagName?.toLowerCase())return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};r.documentElement.childNodes.forEach(t=>{if(1===t.nodeType)if(Ge(t,"SRS")){if(!e.spatialReference){const n=K(t);e.spatialReference=De(n)}}else if(Ge(t,"Metadata"))if("xml:ESRI"===t.getAttribute("domain")){const{spatialReference:n,transform:a}=function Xt(r){const e=Y(r,"GeodataXform"),i=De(me(e,"SpatialReference/WKID")||K(e,"SpatialReference/WKT"));if("typens:PolynomialXform"!==e.getAttribute("xsi:type"))return{spatialReference:i,transform:null};const t=me(e,"PolynomialOrder")??1,n=Ze(e,"CoeffX/Double"),a=Ze(e,"CoeffY/Double"),s=Ze(e,"InverseCoeffX/Double"),o=Ze(e,"InverseCoeffY/Double"),l=ut(n,a),c=ut(s,o);return{spatialReference:i,transform:l&&c&&l.length&&c.length?new Ve.Z({spatialReference:i,polynomialOrder:t,forwardCoefficients:l,inverseCoefficients:c}):null}}(t);e.transform=a,e.spatialReference||(e.spatialReference=n)}else Ie(t,"MDI").forEach(n=>e.metadata[n.getAttribute("key")]=K(n));else if(Ge(t,"PAMRasterBand")){const n=function Kt(r){const e=me(r,"NoDataValue"),i=Y(r,"Histograms/HistItem"),t=me(i,"HistMin"),n=me(i,"HistMax"),a=me(i,"BucketCount"),s=K(i,"HistCounts")?.split("|").map(d=>Number(d));let o,l,c,u;Ie(r,"Metadata/MDI").forEach(d=>{const m=Number(d.textContent??d.nodeValue);switch(d.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=m;break;case"STATISTICS_MAXIMUM":l=m;break;case"STATISTICS_MEAN":c=m;break;case"STATISTICS_STDDEV":u=m}});const f=me(r,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:s?.length&&null!=t&&null!=n?{min:t,max:n,size:a||s.length,counts:s}:null,sourceBandIndex:f,statistics:null!=o&&null!=l?{min:o,max:l,avg:c,stddev:u}:null}}(t);null!=n.sourceBandIndex&&null==e.rasterBands[n.sourceBandIndex]?e.rasterBands[n.sourceBandIndex]=n:e.rasterBands.push(n)}});const i=e.rasterBands;return i.length&&(e.statistics=i[0].statistics?i.map(a=>a.statistics).filter(Ee.pC):null,e.histograms=i[0].histogram?i.map(a=>a.histogram).filter(Ee.pC):null),e}let ke=class extends ue{open(r){var e=this;return(0,F.Z)(function*(){yield e.init();const i=yield e._fetchData(r);let{spatialReference:t,statistics:n,histograms:a,transform:s}=yield e._fetchAuxiliaryData(r);const o=!t;o&&(t=new j.Z({wkid:3857})),a?.length&&null==n&&(n=(0,Se.Oh)(a));const{width:l,height:c}=i;let u=new U.Z({xmin:-.5,ymin:.5-c,xmax:l-.5,ymax:.5,spatialReference:t});const f=s?s.forwardTransform(u):u;let d=!0;if(s){const y=s.forwardCoefficients;d=y&&0===y[1]&&0===y[2],d&&(s=null,u=f)}const m=new _t({data:{extent:f,nativeExtent:u,transform:s,pixelBlock:i,statistics:n,histograms:a,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:o}});yield m.open(),m.data=null,e._set("rasterInfo",m.rasterInfo),e._inMemoryRaster=m})()}fetchRawTile(r,e,i,t={}){return this._inMemoryRaster.fetchRawTile(r,e,i,t)}_fetchData(r){var e=this;return(0,F.Z)(function*(){const{data:i}=yield e.request(e.url,{responseType:"array-buffer",signal:r?.signal}),t=(0,rt.y)(i).toUpperCase();if("JPG"!==t&&"PNG"!==t&&"GIF"!==t&&"BMP"!==t)throw new k.Z("image-aux-raster:open","the data is not a supported format");e._set("datasetFormat",t);const n=t.toLowerCase(),a="gif"===n||"bmp"===n||!(0,gt.Z)("ios"),s=yield e.decodePixelBlock(i,{format:n,useCanvas:a,hasNoZlibMask:!0});if(null==s)throw new k.Z("image-aux-raster:open","the data cannot be decoded");return s})()}_fetchAuxiliaryData(r){var e=this;return(0,F.Z)(function*(){const i=r?.signal,t=e.ioConfig.skipExtensions??[],n=t.includes("aux.xml")?null:e.request(e.url+".aux.xml",{responseType:"xml",signal:i}),a=e.datasetFormat,s="JPG"===a?"jgw":"PNG"===a?"pgw":"BMP"===a?"bpw":null,o=s&&t.includes(s)?null:e.request(e.url.slice(0,e.url.lastIndexOf("."))+"."+s,{responseType:"text",signal:i}),l=yield(0,ge.as)([n,o]);if(i?.aborted)throw(0,ge.zE)();const c=_e(l[0].value?.data);if(!c.transform){const u=l[1].value?l[1].value.data.split("\n").slice(0,6).map(f=>Number(f)):null;c.transform=6===u?.length?new Ve.Z({forwardCoefficients:[u[4],u[5],u[0],-u[1],u[2],-u[3]]}):null}return c})()}};(0,b._)([(0,R.Cb)({type:String,json:{write:!0}})],ke.prototype,"datasetFormat",void 0),ke=(0,b._)([(0,q.j)("esri.layers.support.rasterDatasets.ImageAuxRaster")],ke);const Be=ke;var Qt=v(62208),qt=v(21726),er=v(14946),tr=v(76671),ft=v(99208);let Ce=class extends ue{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}open(r){var e=this;return(0,F.Z)(function*(){yield e.init();const i=r?.signal,t=e.sourceJSON?{data:e.sourceJSON}:yield e.request(e.url,{query:{f:"json"},signal:i});t.ssl&&(e.url=e.url.replace(/^http:/i,"https:"));const n=t.data;if(e.sourceJSON=n,!n)throw new k.Z("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!n.tileInfo)throw new k.Z("imageserverraster:open","use ImageryLayer to open non-tiled image services");e._fixScaleInServiceInfo(),e.tileType=n.cacheType,null==e.tileType&&(e.tileType=["jpg","jpeg","png","png8","png24","png32","mixed"].includes(n.tileInfo.format.toLowerCase())?"Map":"lerc"===n.tileInfo.format.toLowerCase()?"Elevation":"Raster"),e.datasetName=n.name?.slice(n.name.indexOf("/")+1)??"";const s=yield e._fetchRasterInfo({signal:i});if(null==s)throw new k.Z("image-server-raster:open","cannot initialize image service");(0,ft.n$)(s,n);const o="Map"===e.tileType?function rr(r,e){if(!r)return null;const{minScale:i,maxScale:t,minLOD:n,maxLOD:a}=e;if(null!=n&&null!=a)return re.Z.fromJSON({...r,lods:r.lods.filter(({level:s})=>null!=s&&s>=n&&s<=a)});if(0!==i&&0!==t){const s=c=>Math.round(1e4*c)/1e4,o=i?s(i):1/0,l=t?s(t):-1/0;return re.Z.fromJSON({...r,lods:r.lods.filter(c=>{const u=s(c.scale);return u<=o&&u>=l})})}return re.Z.fromJSON(r)}(n.tileInfo,n):re.Z.fromJSON(n.tileInfo);(0,Qt.O3)(o);const[l,c]=e._computeMinMaxLOD(s,o),{extent:u,pixelSize:f}=s,d=.5/s.width*f.x,m=Math.max(f.x,f.y),{lods:y}=o;("Map"!==e.tileType&&0!==n.maxScale||Math.abs(f.x-f.y)>d||!y.some(C=>Math.abs(C.resolution-m)<d))&&(f.x=f.y=l.resolution,s.width=Math.ceil((u.xmax-u.xmin)/f.x-.1),s.height=Math.ceil((u.ymax-u.ymin)/f.y-.1));const g=l.level-c.level,[h,p]=o.size,x=[],I=[];y.forEach((C,M)=>{C.level>=c.level&&C.level<=l.level&&x.push({x:C.resolution,y:C.resolution}),M<y.length-1&&I.push(Math.round(10*C.resolution/y[M+1].resolution)/10)}),x.sort((C,M)=>C.x-M.x);const w=e.computeBlockBoundary(u,h,p,o.origin,x,g),T=x.length>1?x.slice(1):null;let O;n.transposeInfo&&(O={tileSize:[n.transposeInfo.rows,n.transposeInfo.cols],packetSize:s.keyProperties?._yxs.PacketSize??0});const S=I.length<=1||I.length>=3&&I.slice(0,-1).every(C=>C===I[0])?I[0]??2:Math.round(10/(c.resolution/l.resolution)**(-1/g))/10;if(s.storageInfo=new be.Z({blockWidth:o.size[0],blockHeight:o.size[1],pyramidBlockWidth:o.size[0],pyramidBlockHeight:o.size[1],pyramidResolutions:T,pyramidScalingFactor:S,compression:o.format,origin:o.origin,firstPyramidLevel:1,maximumPyramidLevel:g,tileInfo:o,transposeInfo:O,blockBoundary:w}),e._fixGCSShift(s),e._set("rasterInfo",s),n.capabilities.toLowerCase().includes("tilemap")){const C={tileInfo:s.storageInfo.tileInfo,parsedUrl:(0,qt.mN)(e.url),url:e.url,tileServers:[]};e._tilemapCache=new er.y({layer:C})}})()}fetchRawTile(r,e,i,t={}){var n=this;return(0,F.Z)(function*(){const{storageInfo:a,extent:s}=n.rasterInfo,{transposeInfo:o}=a,l=null!=o&&!!t.transposedVariableName;if(n._slices&&!l&&null==t.sliceId)return null;const u=`${n.url}/tile/${l?0:a.maximumPyramidLevel-r+n._levelOffset}/${e}/${i}`,f=n._slices?l?{variable:t.transposedVariableName}:{sliceId:t.sliceId||0}:null,{data:d}=yield n.request(u,{query:f,responseType:"array-buffer",signal:t.signal});if(!d)return null;const m=l?o.tileSize:a.tileInfo.size,y=yield n.decodePixelBlock(d,{width:m[0],height:m[1],planes:null,pixelType:null,isPoint:"Elevation"===n.tileType,returnInterleaved:l,noDataValue:n.rasterInfo.noDataValue});if(null==y)return null;const g=a.blockBoundary[r];if("jpg"!==a.compression||i>g.minCol&&i<g.maxCol&&e>g.minRow&&e<g.maxRow)return y;const{origin:h,blockWidth:p,blockHeight:x}=a,{x:I,y:w}=n.getPyramidPixelSize(r),T=Math.round((s.xmin-h.x)/I)%p,O=Math.round((s.xmax-h.x)/I)%p||p,S=Math.round((h.y-s.ymax)/w)%x,C=Math.round((h.y-s.ymin)/w)%x||x,M=i===g.minCol?T:0,Z=e===g.minRow?S:0;return(0,ae.pW)(y,{x:M,y:Z},{width:(i===g.maxCol?O:p)-M,height:(e===g.maxRow?C:x)-Z}),y})()}getSliceIndex(r){if(!this._slices||null==r||0===r.length)return null;const e=r;for(let i=0;i<this._slices.length;i++){const t=this._slices[i].multidimensionalDefinition;if(t.length===e.length&&!t.some(n=>{const a=e.find(s=>n.variableName===s.variableName&&s.dimensionName===n.dimensionName);return!a||(Array.isArray(n.values[0])?`${n.values[0][0]}-${n.values[0][1]}`:n.values[0])!==(Array.isArray(a.values[0])?`${a.values[0][0]}-${a.values[0][1]}`:a.values[0])}))return i}return null}fetchVariableStatisticsHistograms(r,e){var i=this;return(0,F.Z)(function*(){const t=i.request(i.url+"/statistics",{query:{variable:r,f:"json"},signal:e}).then(s=>s.data?.statistics),n=i.request(i.url+"/histograms",{query:{variable:r,f:"json"},signal:e}).then(s=>s.data?.histograms),a=yield Promise.all([t,n]);return a[0]&&a[0].forEach(s=>{s.avg=s.mean,s.stddev=s.standardDeviation}),a[1]?.[0]?.counts?.length||(a[1]=null),{statistics:a[0]||null,histograms:a[1]||null}})()}computeBestPyramidLevelForLocation(r,e={}){var i=this;return(0,F.Z)(function*(){if(!i._tilemapCache)return 0;let t=i.identifyPixelLocation(r,0,e.datumTransformation);if(null===t)return null;let n=0;const{maximumPyramidLevel:a}=i.rasterInfo.storageInfo;let s=a-n+i._levelOffset;const o=t.srcLocation;for(;s>=0;){try{if("available"===(yield i._tilemapCache.fetchAvailability(s,t.row,t.col,e)))break}catch{}if(s--,n++,t=i.identifyPixelLocation(o,n,e.datumTransformation),null===t)return null}return-1===s||null==t?null:n})()}_fetchRasterInfo(r){var e=this;return(0,F.Z)(function*(){const i=e.sourceJSON;if("Map"===e.tileType){const o=i.fullExtent||i.extent,l=Math.ceil((o.xmax-o.xmin)/i.pixelSizeX-.1),c=Math.ceil((o.ymax-o.ymin)/i.pixelSizeY-.1),u=j.Z.fromJSON(i.spatialReference||o.spatialReference),f=new W.Z({x:i.pixelSizeX,y:i.pixelSizeY,spatialReference:u});return new Re.Z({width:l,height:c,bandCount:3,extent:U.Z.fromJSON(o),spatialReference:u,pixelSize:f,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:t}=r,n=(0,ft.gh)(e.url,e.sourceJSON,{signal:t,query:e.ioConfig.customFetchParameters}),a=i.hasMultidimensions?e.request(`${e.url}/slices`,{query:{f:"json"},signal:t}).then(o=>o.data?.slices).catch(()=>null):null,s=yield Promise.all([n,a]);return e._slices=s[1],s[0]})()}_fixScaleInServiceInfo(){const{sourceJSON:r}=this;r.minScale&&r.minScale<0&&(r.minScale=0),r.maxScale&&r.maxScale<0&&(r.maxScale=0)}_fixGCSShift(r){const{extent:e,spatialReference:i}=r;e.xmin>-1&&e.xmax>181&&i?.wkid&&i.isGeographic&&(r.nativeExtent=r.extent,r.transform=new tr.Z,r.extent=r.transform.forwardTransform(e))}_computeMinMaxLOD(r,e){const{pixelSize:i}=r,t=.5/r.width*i.x,{lods:n}=e,a=e.lodAt(Math.max.apply(null,n.map(d=>d.level))),s=e.lodAt(Math.min.apply(null,n.map(d=>d.level))),{tileType:o}=this;if("Map"===o)return this._levelOffset=n[0].level,[a,s];if("Raster"===o)return[n.find(d=>d.resolution===i.x)??a,s];const{minScale:l,maxScale:c}=this.sourceJSON;let u=a;c>0&&(u=n.find(d=>Math.abs(d.scale-c)<t),u||(u=n.filter(d=>d.scale>c).sort((d,m)=>d.scale>m.scale?1:-1)[0]??a));let f=s;return l>0&&(f=n.find(d=>Math.abs(d.scale-l)<t)??s,this._levelOffset=f.level-s.level),[u,f]}};(0,b._)([(0,R.Cb)({type:String,json:{write:!0}})],Ce.prototype,"datasetFormat",void 0),(0,b._)([(0,R.Cb)()],Ce.prototype,"tileType",void 0),Ce=(0,b._)([(0,q.j)("esri.layers.support.rasterDatasets.ImageServerRaster")],Ce);const nr=Ce;var ir=v(44853);const ee=new Map;ee.set("Int8","s8"),ee.set("UInt8","u8"),ee.set("Int16","s16"),ee.set("UInt16","u16"),ee.set("Int32","s32"),ee.set("UInt32","u32"),ee.set("Float32","f32"),ee.set("Float64","f32"),ee.set("Double64","f32");const ce=new Map;ce.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ce.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ce.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ce.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let ve=class extends ue{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}open(r){var e=this;return(0,F.Z)(function*(){yield e.init(),e.datasetName=e.url.slice(e.url.lastIndexOf("/")+1);const i=r?r.signal:null,t=yield e.request(e.url,{responseType:"xml",signal:i}),{rasterInfo:n,files:a}=e._parseHeader(t.data);if(-1===e.ioConfig.skipExtensions?.indexOf("aux.xml")){const h=yield e._fetchAuxiliaryData(r);null!=h&&(n.statistics=h.statistics??n.statistics,n.histograms=h.histograms,h.histograms&&null==n.statistics&&(n.statistics=(0,Se.Oh)(h.histograms)))}e._set("rasterInfo",n),e._files=a;const s=yield e.request(a.index,{responseType:"array-buffer",signal:i});e._storageIndex=e._parseIndex(s.data);const{blockWidth:o,blockHeight:l}=e.rasterInfo.storageInfo,c=e.rasterInfo.storageInfo.pyramidScalingFactor,{width:u,height:f}=e.rasterInfo,d=[],m=e._getBandSegmentCount();let y=0,g=-1;for(;y<e._storageIndex.length;){g++;const h=Math.ceil(u/o/c**g)-1,p=Math.ceil(f/l/c**g)-1;y+=(h+1)*(p+1)*m*4,d.push({maxRow:p,maxCol:h,minCol:0,minRow:0})}e.rasterInfo.storageInfo.blockBoundary=d,g>0&&(e.rasterInfo.storageInfo.firstPyramidLevel=1,e.rasterInfo.storageInfo.maximumPyramidLevel=g),e.updateTileInfo()})()}fetchRawTile(r,e,i,t={}){var n=this;return(0,F.Z)(function*(){const{blockWidth:a,blockHeight:s,blockBoundary:o}=n.rasterInfo.storageInfo,l=o[r];if(!l||l.maxRow<e||l.maxCol<i||l.minRow>e||l.minCol>i)return null;const{bandCount:c,pixelType:u}=n.rasterInfo,{ranges:f,actualTileWidth:d,actualTileHeight:m}=n._getTileLocation(r,e,i);if(!f||0===f.length)return null;if(0===f[0].from&&0===f[0].to){const P=new Uint8Array(a*s);return new oe.Z({width:a,height:s,pixels:null,mask:P,validPixelCount:0})}const{bandIds:y}=n.ioConfig,g=n._getBandSegmentCount(),h=[];let p=0;for(p=0;p<g;p++)y&&!y.includes(p)||h.push(n.request(n._files.data,{range:{from:f[p].from,to:f[p].to},responseType:"array-buffer",signal:t.signal}));const x=yield Promise.all(h),I=x.map(P=>P.data.byteLength).reduce((P,D)=>P+D),w=new Uint8Array(I);let T=0;for(p=0;p<g;p++)w.set(new Uint8Array(x[p].data),T),T+=x[p].data.byteLength;const O=ce.get(n.rasterInfo.storageInfo.compression).decoderFormat,S=yield n.decodePixelBlock(w.buffer,{width:a,height:s,format:O,planes:y?.length||c,pixelType:u});if(null==S)return null;let{noDataValue:C}=n.rasterInfo;if(null!=C&&"lerc"!==O&&!S.mask&&(C=C[0],null!=C)){const P=S.width*S.height,D=new Uint8Array(P);if(Math.abs(C)>1e24)for(p=0;p<P;p++)Math.abs((S.pixels[0][p]-C)/C)>1e-6&&(D[p]=1);else for(p=0;p<P;p++)S.pixels[0][p]!==C&&(D[p]=1);S.mask=D}let M=0,Z=0;if(d!==a||m!==s){let P=S.mask;if(P)for(p=0;p<s;p++)if(Z=p*a,p<m)for(M=d;M<a;M++)P[Z+M]=0;else for(M=0;M<a;M++)P[Z+M]=0;else for(P=new Uint8Array(a*s),S.mask=P,p=0;p<m;p++)for(Z=p*a,M=0;M<d;M++)P[Z+M]=1}return S})()}_parseIndex(r){if(r.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,i,t,n,a,s;if(ir.f){for(i=new Uint8Array(r),n=new ArrayBuffer(r.byteLength),t=new Uint8Array(n),a=0;a<r.byteLength/4;a++)for(s=0;s<4;s++)t[4*a+s]=i[4*a+3-s];e=new Uint32Array(n)}else e=new Uint32Array(r);return e}_getBandSegmentCount(){return ce.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(r,e,i){const{blockWidth:t,blockHeight:n,pyramidScalingFactor:a}=this.rasterInfo.storageInfo,{width:s,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,u,f,d=0,m=0;for(f=0;f<r;f++)m=a**f,c=Math.ceil(s/t/m),u=Math.ceil(o/n/m),d+=c*u;m=a**r,c=Math.ceil(s/t/m),u=Math.ceil(o/n/m),d+=e*c+i,d*=4*l;const y=this._storageIndex.subarray(d,d+4*l);let g=0,h=0;const p=[];for(let x=0;x<l;x++)g=y[4*x]*2**32+y[4*x+1],h=g+y[4*x+2]*2**32+y[4*x+3],p.push({from:g,to:h});return{ranges:p,actualTileWidth:i<c-1?t:Math.ceil(s/m)-t*(c-1),actualTileHeight:e<u-1?n:Math.ceil(o/m)-n*(u-1)}}_parseHeader(r){const e=Y(r,"MRF_META/Raster");if(!e)throw new k.Z("mrf:open","not a valid MRF format");const i=Y(e,"Size"),t=parseInt(i.getAttribute("x"),10),n=parseInt(i.getAttribute("y"),10),a=parseInt(i.getAttribute("c"),10),s=(K(e,"Compression")||"none").toLowerCase();if(!ce.has(s))throw new k.Z("mrf:open","currently does not support compression "+s);const o=K(e,"DataType")||"UInt8",l=ee.get(o);if(null==l)throw new k.Z("mrf:open","currently does not support pixel type "+o);const c=Y(e,"PageSize"),u=parseInt(c.getAttribute("x"),10),f=parseInt(c.getAttribute("y"),10),d=Y(e,"DataValues");let m,y;if(d&&(y=d.getAttribute("NoData"),null!=y&&(m=y.trim().split(" ").map(P=>parseFloat(P)))),Y(r,"MRF_META/CachedSource"))throw new k.Z("mrf:open","currently does not support MRF referencing other data files");const g=Y(r,"MRF_META/GeoTags"),h=Y(g,"BoundingBox");let p,x=!1;if(null!=h){const P=parseFloat(h.getAttribute("minx")),D=parseFloat(h.getAttribute("miny")),E=parseFloat(h.getAttribute("maxx")),A=parseFloat(h.getAttribute("maxy")),B=K(g,"Projection")||"";let J=j.Z.WGS84;if("LOCAL_CS[]"!==B)if(B.toLowerCase().startsWith("epsg:")){const z=Number(B.slice(5));isNaN(z)||0===z||(J=new j.Z({wkid:z}))}else J=De(B)??j.Z.WGS84;else x=!0,J=new j.Z({wkid:3857});p=new U.Z(P,D,E,A),p.spatialReference=J}else x=!0,p=new U.Z({xmin:-.5,ymin:.5-n,xmax:t-.5,ymax:.5,spatialReference:new j.Z({wkid:3857})});const I=Y(r,"MRF_META/Rsets"),w=parseInt(I?.getAttribute("scale")||"2",10),T=p.spatialReference,O=new be.Z({origin:new W.Z({x:p.xmin,y:p.ymax,spatialReference:T}),blockWidth:u,blockHeight:f,pyramidBlockWidth:u,pyramidBlockHeight:f,compression:s,pyramidScalingFactor:w}),S=new W.Z({x:p.width/t,y:p.height/n,spatialReference:T}),C=new Re.Z({width:t,height:n,extent:p,isPseudoSpatialReference:x,spatialReference:T,bandCount:a,pixelType:l,pixelSize:S,noDataValue:m,storageInfo:O}),M=K(r,"datafile"),Z=K(r,"IndexFile");return{rasterInfo:C,files:{mrf:this.url,index:Z||this.url.replace(".mrf",".idx"),data:M||this.url.replace(".mrf",ce.get(s).blobExtension)}}}_fetchAuxiliaryData(r){var e=this;return(0,F.Z)(function*(){try{const{data:i}=yield e.request(e.url+".aux.xml",{responseType:"xml",signal:r?.signal});return _e(i)}catch{return null}})()}};(0,b._)([(0,R.Cb)()],ve.prototype,"_files",void 0),(0,b._)([(0,R.Cb)()],ve.prototype,"_storageIndex",void 0),(0,b._)([(0,R.Cb)({type:String,json:{write:!0}})],ve.prototype,"datasetFormat",void 0),ve=(0,b._)([(0,q.j)("esri.layers.support.rasterIO.MRFRaster")],ve);const sr=ve;var he=v(93122),Je=v(635);const Ye=(r,e)=>r.get(e)?.values,Fe=(r,e)=>r.get(e)?.values?.[0];let pe=class extends ue{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}open(r){var e=this;return(0,F.Z)(function*(){yield e.init();const i=r?r.signal:null,{data:t}=yield e.request(e.url,{range:{from:0,to:e._bufferSize},responseType:"array-buffer",signal:i});if(!t)throw new k.Z("tiffraster:open","failed to open url "+e.url);e.datasetName=e.url.slice(e.url.lastIndexOf("/")+1,e.url.lastIndexOf("."));const{littleEndian:n,firstIFDPos:a,isBigTiff:s}=(0,he.cK)(t),o=[];yield e._readIFDs(o,t,n,a,0,s?8:4,i);const{imageInfo:l,rasterInfo:c}=e._parseIFDs(o),u=(0,he.ee)(o),f=(0,he.I7)(o);if(e._headerInfo={littleEndian:n,isBigTiff:s,ifds:o,pyramidIFDs:u,maskIFDs:f,...l},e._set("rasterInfo",c),!l.isSupported)throw new k.Z("tiffraster:open","this tiff is not supported: "+l.message);if(!l.tileWidth)throw new k.Z("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");c.isPseudoSpatialReference&&Me.Z.getLogger(e).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const d=o[0].get("PREDICTOR")?.values?.[0];if(3===o[0].get("SAMPLEFORMAT")?.values?.[0]&&2===d)throw new k.Z("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floatting point data");const{skipExtensions:y=[]}=e.ioConfig;if(!y.includes("aux.xml")){const g=yield e._fetchAuxiliaryMetaData(r);null!=g&&e._processPAMInfo(g,c)}y.includes("vat.dbf")||1!==c.bandCount||"u8"!==c.pixelType||(c.attributeTable=yield e._fetchAuxiliaryTable(r),null!=c.attributeTable&&(c.keyProperties.DataType="thematic")),e.updateTileInfo()})()}fetchRawTile(r,e,i,t={}){var n=this;return(0,F.Z)(function*(){if(!n._headerInfo?.isSupported||n.isBlockOutside(r,e,i))return null;const a=yield n._fetchRawTiffTile(r,e,i,!1,t);if(null!=a&&n._headerInfo.hasMaskBand){const s=yield n._fetchRawTiffTile(r,e,i,!0,t);null!=s&&s.pixels[0]instanceof Uint8Array&&(a.mask=s.pixels[0])}return a})()}_parseIFDs(r){const e=(0,he.FI)(r),{width:i,height:t,tileWidth:n,tileHeight:a,planes:s,pixelType:o,compression:l,firstPyramidLevel:c,maximumPyramidLevel:u,pyramidBlockWidth:f,pyramidBlockHeight:d,tileBoundary:m,affine:y,metadata:g}=e;let p=De(e.extent.spatialReference?.wkt||e.extent.spatialReference?.wkid),x=!!e.isPseudoGeographic;null==p&&(x=!0,p=new j.Z({wkid:3857}));const I=new U.Z({...e.extent,spatialReference:p}),w=new W.Z(I?{x:I.xmin,y:I.ymax,spatialReference:p}:{x:0,y:0}),T=new be.Z({blockWidth:n,blockHeight:a,pyramidBlockWidth:f,pyramidBlockHeight:d,compression:l,origin:w,firstPyramidLevel:c,maximumPyramidLevel:u,blockBoundary:m}),O=new W.Z({x:(I.xmax-I.xmin)/i,y:(I.ymax-I.ymin)/t,spatialReference:p}),S=g?{BandProperties:g.bandProperties,DataType:g.dataType}:{};let C=null;const M=Fe(r[0],"PHOTOMETRICINTERPRETATION"),Z=Ye(r[0],"COLORMAP");if(M<=3&&Z?.length>3&&Z.length%3==0){C=[];const D=Z.length/3;for(let E=0;E<D;E++)C.push([E,Z[E]>>>8,Z[E+D]>>>8,Z[E+2*D]>>>8])}const P=new Re.Z({width:i,height:t,bandCount:s,pixelType:o,pixelSize:O,storageInfo:T,spatialReference:p,isPseudoSpatialReference:x,keyProperties:S,extent:I,colormap:C,statistics:g?g.statistics:null});return y?.length&&(P.nativeExtent=new U.Z({xmin:-.5,ymin:.5-t,xmax:i-.5,ymax:.5,spatialReference:p}),P.transform=new Ve.Z({polynomialOrder:1,forwardCoefficients:[y[2]+y[0]/2,y[5]-y[3]/2,y[0],y[3],-y[1],-y[4]]}),P.extent=P.transform.forwardTransform(P.nativeExtent),P.pixelSize=new W.Z({x:(I.xmax-I.xmin)/i,y:(I.ymax-I.ymin)/t,spatialReference:p}),T.origin.x=-.5,T.origin.y=.5),{imageInfo:e,rasterInfo:P}}_processPAMInfo(r,e){if(e.statistics=r.statistics??e.statistics,e.histograms=r.histograms,r.histograms&&null==e.statistics&&(e.statistics=(0,Se.Oh)(r.histograms)),r.transform&&null==e.transform){e.transform=r.transform,e.nativeExtent=e.extent;const i=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new W.Z({x:(i.xmax-i.xmin)/e.width,y:(i.ymax-i.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=i}e.isPseudoSpatialReference&&r.spatialReference&&(e.spatialReference=r.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}_readIFDs(r,e,i,t,n,a=4,s){var o=this;return(0,F.Z)(function*(){if(!t)return null;(t>=e.byteLength||t<0)&&(e=(yield o.request(o.url,{range:{from:t+n,to:t+n+o._bufferSize},responseType:"array-buffer",signal:s})).data,n=t+n,t=0);const l=yield o._readIFD(e,i,t,n,Je.Z.tiffTags,a,s);if(r.push(l.ifd),!l.nextIFD)return null;yield o._readIFDs(r,e,i,l.nextIFD-n,n,a,s)})()}_readIFD(r,e,i,t,n=Je.Z.tiffTags,a=4,s){var o=this;return(0,F.Z)(function*(){if(!r)return null;const l=(0,he.vr)(r,e,i,t,n,a);if(l.success){const c=[];if(l.ifd?.forEach(u=>{u.values||c.push(u)}),c.length>0){const u=c.map(d=>d.offlineOffsetSize).filter(Ee.pC),f=Math.min.apply(null,u.map(d=>d[0]));if(Math.min.apply(null,u.map(d=>d[0]+d[1]))-f<=o._bufferSize){const{data:d}=yield o.request(o.url,{range:{from:f,to:f+o._bufferSize},responseType:"array-buffer",signal:s});r=d,t=f,c.forEach(m=>(0,he.Dq)(r,e,m,t))}}if(l.ifd?.has("GEOKEYDIRECTORY")){const u=l.ifd.get("GEOKEYDIRECTORY"),f=u?.values;if(f&&f.length>4){const d=f[0]+"."+f[1]+"."+f[2],m=yield o._readIFD(r,e,u.valueOffset+6-t,t,Je.Z.geoKeys,2,s);u.data=m.ifd,u.data&&u.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[d]})}}return l}return l.requiredBufferSize&&l.requiredBufferSize!==r.byteLength?(r=(yield o.request(o.url,{range:{from:t,to:t+l.requiredBufferSize+4},responseType:"array-buffer",signal:s})).data).byteLength<l.requiredBufferSize?null:o._readIFD(r,e,0,t,Je.Z.tiffTags,4,s):void 0})()}_fetchRawTiffTile(r,e,i,t,n={}){var a=this;return(0,F.Z)(function*(){const s=a._getTileLocation(r,e,i,t);if(!s)return null;const{ranges:o,actualTileWidth:l,actualTileHeight:c,ifd:u}=s,f=o.map(S=>a.request(a.url,{range:S,responseType:"array-buffer",signal:n.signal})),d=yield Promise.all(f),m=d.map(S=>S.data.byteLength).reduce((S,C)=>S+C),y=1===d.length?d[0].data:new ArrayBuffer(m),g=[0],h=[0];if(d.length>1){const S=new Uint8Array(y);for(let C=0,M=0;C<d.length;C++){const Z=d[C].data;S.set(new Uint8Array(Z),M),g[C]=M,M+=Z.byteLength,h[C]=Z.byteLength}}const{blockWidth:p,blockHeight:x}=a.getBlockWidthHeight(r),I=yield a.decodePixelBlock(y,{format:"tiff",customOptions:{headerInfo:a._headerInfo,ifd:u,offsets:g,sizes:h},width:p,height:x,planes:null,pixelType:null});if(null==I)return null;let w,T,O;if(l!==p||c!==x){let S=I.mask;if(S)for(w=0;w<x;w++)if(O=w*p,w<c)for(T=l;T<p;T++)S[O+T]=0;else for(T=0;T<p;T++)S[O+T]=0;else for(S=new Uint8Array(p*x),I.mask=S,w=0;w<c;w++)for(O=w*p,T=0;T<l;T++)S[O+T]=1}return I})()}_getTileLocation(r,e,i,t=!1){const{firstPyramidLevel:n,blockBoundary:a}=this.rasterInfo.storageInfo,s=0===r?0:r-(n-1),{_headerInfo:o}=this;if(!o)return null;const l=t?o.maskIFDs[s]:0===s?o?.ifds[0]:o?.pyramidIFDs[s-1];if(!l)return null;const c=(0,he.If)(l,o),u=Ye(l,"TILEOFFSETS");if(void 0===u)return null;const f=Ye(l,"TILEBYTECOUNTS"),{minRow:d,minCol:m,maxRow:y,maxCol:g}=a[s];if(e>y||i>g||e<d||i<m)return null;const h=Fe(l,"IMAGEWIDTH"),p=Fe(l,"IMAGELENGTH"),x=Fe(l,"TILEWIDTH"),I=Fe(l,"TILELENGTH"),w=[];if(c){const{bandCount:T}=this.rasterInfo;for(let O=0;O<T;O++){const S=O*(y+1)*(g+1)+e*(g+1)+i;w[O]={from:u[S],to:u[S]+f[S]-1}}}else{const T=e*(g+1)+i;w.push({from:u[T],to:u[T]+f[T]-1})}for(let T=0;T<w.length;T++)if(null==w[T].from||!w[T].to||w[T].to<0)return null;return{ranges:w,ifd:l,actualTileWidth:i===g&&h%x||x,actualTileHeight:e===y&&p%I||I}}_fetchAuxiliaryMetaData(r){var e=this;return(0,F.Z)(function*(){try{const{data:i}=yield e.request(e.url+".aux.xml",{responseType:"xml",signal:r?.signal});return _e(i)}catch{return null}})()}_fetchAuxiliaryTable(r){var e=this;return(0,F.Z)(function*(){try{const{data:i}=yield e.request(e.url+".vat.dbf",{responseType:"array-buffer",signal:r?.signal}),t=ot.parse(i);return t?.recordSet?We.Z.fromJSON(t.recordSet):null}catch{return null}})()}};(0,b._)([(0,R.Cb)()],pe.prototype,"_files",void 0),(0,b._)([(0,R.Cb)()],pe.prototype,"_headerInfo",void 0),(0,b._)([(0,R.Cb)()],pe.prototype,"_bufferSize",void 0),(0,b._)([(0,R.Cb)({type:String,json:{write:!0}})],pe.prototype,"datasetFormat",void 0),pe=(0,b._)([(0,q.j)("esri.layers.support.rasterDatasets.TIFFRaster")],pe);const ar=pe,V=new Map;V.set("CRF",{desc:"Cloud Raster Format",constructor:$t}),V.set("MRF",{desc:"Meta Raster Format",constructor:sr}),V.set("TIFF",{desc:"GeoTIFF",constructor:ar}),V.set("RasterTileServer",{desc:"Raster Tile Server",constructor:nr}),V.set("JPG",{desc:"JPG Raster Format",constructor:Be}),V.set("PNG",{desc:"PNG Raster Format",constructor:Be}),V.set("GIF",{desc:"GIF Raster Format",constructor:Be}),V.set("BMP",{desc:"BMP Raster Format",constructor:Be});class or{static get supportedFormats(){const e=new Set;return V.forEach((i,t)=>e.add(t)),e}static open(e){var i=this;return(0,F.Z)(function*(){const{url:t,ioConfig:n,sourceJSON:a}=e;let s=e.datasetFormat;null==s&&t.lastIndexOf(".")&&(s=t.slice(t.lastIndexOf(".")+1).toUpperCase()),"OVR"===s||"TIF"===s?s="TIFF":"JPG"!==s&&"JPEG"!==s&&"JFIF"!==s||(s="JPG"),t.toLowerCase().includes("/imageserver")&&!t.toLowerCase().includes("/wcsserver")&&(s="RasterTileServer");const o={url:t,sourceJSON:a,datasetFormat:s,ioConfig:n??{bandIds:null,sampling:null}};let l,c;if(s&&i.supportedFormats.has(s)){if("CRF"===s&&!n?.enableCRF)throw new k.Z("rasterfactory:open",`cannot open raster: ${t}`);return l=V.get(s).constructor,c=new l(o),yield c.open({signal:e.signal}),c}if(s)throw new k.Z("rasterfactory:open","not a supported format "+s);const u=Array.from(V.keys());let f=0;const d=()=>(s=u[f++],s&&("CRF"!==s||n?.enableCRF)?(l=V.get(s).constructor,c=new l(o),c.open({signal:e.signal}).then(()=>c).catch(()=>d())):null);return d()})()}static register(e,i,t){V.has(e.toUpperCase())||V.set(e.toUpperCase(),{desc:i,constructor:t})}}var lr=v(49430),Ne=v(20885);let L=class extends((0,bt.h)((0,Ut.M)((0,Ht.q)((0,Lt.I)((0,St.N)(zt((0,jt.n)((0,vt.Y)((0,Wt.Q)((0,pt.R)((0,ht.J)(It.Z)))))))))))){constructor(...r){var e;super(...r),e=this,this._primaryRasters=[],this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this._debouncedSaveOperations=(0,ge.Ds)(function(){var i=(0,F.Z)(function*(t,n,a){const{save:s,saveAs:o}=yield Promise.all([v.e(8592),v.e(9301)]).then(v.bind(v,97452));switch(t){case Ne.x.SAVE:return s(e,n);case Ne.x.SAVE_AS:return o(e,a,n)}});return function(t,n,a){return i.apply(this,arguments)}}())}normalizeCtorArgs(r,e){return"string"==typeof r?{url:r,...e}:r}load(r){const e=null!=r?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},r).catch(ge.r9).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){const r=[new xe.Z({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new xe.Z({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],{rasterInfo:e}=this,i=e?.attributeTable,t=null!=i?i.fields:null;if(t){const o=t.filter(l=>"oid"!==l.type&&"value"!==l.name.toLowerCase()).map(l=>{const c=l.clone();return c.name="Raster."+l.name,c});r.push(...o)}const a=e?.dataType,s=e?.multidimensionalInfo;if(("vector-magdir"===a||"vector-uv"===a)&&null!=s){const o=s.variables[0].unit?.trim();r.push(new xe.Z({name:"Raster.Magnitude",alias:"Magnitude"+(o?` (${o})`:""),domain:null,editable:!1,type:"double"})),r.push(new xe.Z({name:"Raster.Direction",alias:"Direction (\xb0)",domain:null,editable:!1,type:"double"}))}return r}createPopupTemplate(r){const{rasterFields:e}=this,i=new Set(e.map(({name:t})=>t).filter(t=>"raster.servicepixelvalue.raw"!==t.toLowerCase()));return(0,lr.eZ)({fields:e,title:this.title},{...r,visibleFieldNames:i})}generateRasterInfo(r,e){var i=this;return(0,F.Z)(function*(){if(!(r=(0,Pe.TJ)(He.Z,r)))return i.rasterInfo;try{const t={raster:i._primaryRasters[0]};i._primaryRasters.length>1&&i._primaryRasters.forEach(s=>t[s.url]=s);const n=(0,Oe.Ue)(r.functionDefinition?.toJSON()??r.toJSON(),t),a=new Ue({rasterFunction:n});return yield a.open(e),a.rasterInfo}catch(t){throw t instanceof k.Z?t:new k.Z("imagery-tile-layer","the given raster function is not supported")}})()}save(r){var e=this;return(0,F.Z)(function*(){return e._debouncedSaveOperations(Ne.x.SAVE,r)})()}saveAs(r,e){var i=this;return(0,F.Z)(function*(){return i._debouncedSaveOperations(Ne.x.SAVE_AS,e,r)})()}write(r,e){const i=this._primaryRasters[0]??this.raster;return(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))?super.write(r,e):(e?.messages&&e.messages.push(new k.Z("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e.origin}/${e.layerContainerType||"operational-layers"}'`,{layer:this})),null)}_openRaster(r){var e=this;return(0,F.Z)(function*(){let i=!1;if(e.raster)e.raster.rasterInfo||(yield e.raster.open()),"Function"===e.raster.datasetFormat?(i=!0,e._primaryRasters=e.raster.primaryRasters.rasters):e._primaryRasters=[e.raster],e.url=e.raster.url;else{const{rasterFunction:n}=e,a=[e.url];n&&(0,Oe.G8)(n.toJSON(),a);const s=yield Promise.all(a.map(l=>or.open({url:l,sourceJSON:e.sourceJSON,ioConfig:{sampling:"closest",...e.ioConfig,customFetchParameters:e.customParameters},signal:r}))),o=s.findIndex(l=>null==l);if(o>-1)throw new k.Z("imagery-tile-layer:open",`cannot open raster: ${a[o]}`);if(e._primaryRasters=s,n){const l={raster:e._primaryRasters[0]};e._primaryRasters.length>1&&e._primaryRasters.forEach(f=>l[f.url]=f);const c=(0,Oe.Ue)(n.functionDefinition?.toJSON()??n.toJSON(),l),u=new Ue({rasterFunction:c});try{yield u.open(),e.raster=u}catch(f){const d=Me.Z.getLogger(e);f instanceof k.Z&&d.error("imagery-tile-layer:open",f.message),d.warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),e._set("rasterFunction",null),e.raster=s[0]}}else e.raster=s[0]}const t=e.raster.rasterInfo;if(!t)throw new k.Z("imagery-tile-layer:load","cannot load resources on "+e.url);if(e._set("rasterInfo",i?t:e._primaryRasters[0].rasterInfo),e._set("spatialReference",t.spatialReference),e.sourceJSON=e.sourceJSON||e.raster.sourceJSON,null!=e.sourceJSON){const n="Map"===e.raster.tileType&&null!=e.sourceJSON.minLOD&&null!=e.sourceJSON.maxLOD?e.sourceJSON:{...e.sourceJSON,minScale:0,maxScale:0};e.read(n,{origin:"service"})}else e.read({tileInfo:e.rasterInfo.storageInfo.tileInfo.toJSON()},{origin:"service"});e.title||(e.title=e.raster.datasetName),"Map"===e.raster.tileType&&(e.popupEnabled=!1),e._configDefaultSettings(),e.addHandles((0,yt.YP)(()=>e.customParameters,n=>{e.raster&&(e.raster.ioConfig.customFetchParameters=n)}))})()}};(0,b._)([(0,R.Cb)({clonable:!1})],L.prototype,"_primaryRasters",void 0),(0,b._)([(0,R.Cb)({type:[Pe.z8],json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==this.bandIds?.join(",")}}}}})],L.prototype,"bandIds",void 0),(0,b._)([(0,R.Cb)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,xt.J)(Gt.cl)],L.prototype,"interpolation",void 0),(0,b._)([(0,R.Cb)(ze.rn)],L.prototype,"legendEnabled",void 0),(0,b._)([(0,R.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],L.prototype,"isReference",void 0),(0,b._)([(0,R.Cb)({type:["show","hide"]})],L.prototype,"listMode",void 0),(0,b._)([(0,R.Cb)({json:{read:!0,write:!0}})],L.prototype,"blendMode",void 0),(0,b._)([(0,R.Cb)()],L.prototype,"sourceJSON",void 0),(0,b._)([(0,R.Cb)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],L.prototype,"version",void 0),(0,b._)([(0,R.Cb)({readOnly:!0,json:{read:!1}})],L.prototype,"type",void 0),(0,b._)([(0,R.Cb)({type:["ArcGISTiledImageServiceLayer"]})],L.prototype,"operationalLayerType",void 0),(0,b._)([(0,R.Cb)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(r,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(r,e,i){e[i]=!r}}}})],L.prototype,"popupEnabled",void 0),(0,b._)([(0,R.Cb)({type:mt.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],L.prototype,"popupTemplate",void 0),(0,b._)([(0,R.Cb)({readOnly:!0})],L.prototype,"defaultPopupTemplate",null),(0,b._)([(0,R.Cb)({readOnly:!0,type:[xe.Z]})],L.prototype,"fields",void 0),(0,b._)([(0,R.Cb)({readOnly:!0,type:[xe.Z]})],L.prototype,"rasterFields",null),L=(0,b._)([(0,q.j)("esri.layers.ImageryTileLayer")],L);const cr=L}}]);