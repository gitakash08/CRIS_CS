"use strict";(self.webpackChunkCRIS=self.webpackChunkCRIS||[]).push([[403],{68171:(f,T,t)=>{t.d(T,{DE:()=>v,EQ:()=>y,Yc:()=>r,co:()=>h,nY:()=>_,pQ:()=>O});var e=t(51494);function v(c,n){if(null==c)return null;const l={},p=new RegExp(`^${n}`,"i");for(const m of Object.keys(c))if(p.test(m)){const u=m.substring(n.length);l[e.Ul.fromJSON(u)]=c[m]}return l}function _(c,n,l){if(null!=c){n.attributes||(n.attributes={});for(const p in c){const m=e.Ul.toJSON(p);n.attributes[`${l}${m}`]=c[p]}}}function y(c){const n={};for(const l of Object.keys(c))n[e.Ul.fromJSON(l)]=c[l];return n}function h(c){const n={};for(const l of Object.keys(c))n[e.Ul.toJSON(l)]=c[l];return n}function O(c,n){return null==c||null==n?null:Math.round((c-n)/6e4)}function r(c){const n=c.toJSON(),l=n;return l.accumulateAttributeNames&&=n.accumulateAttributeNames?.join(),l.attributeParameterValues&&=JSON.stringify(n.attributeParameterValues),l.barriers&&=JSON.stringify(n.barriers),l.outSR&&=n.outSR?.wkid,l.overrides&&=JSON.stringify(n.overrides),l.polygonBarriers&&=JSON.stringify(n.polygonBarriers),l.polylineBarriers&&=JSON.stringify(n.polylineBarriers),l.restrictionAttributeNames&&=n.restrictionAttributeNames?.join(),l.stops&&=JSON.stringify(n.stops),l.travelMode&&=JSON.stringify(n.travelMode),l}},99683:(f,T,t)=>{t.d(T,{Z:()=>a});var m,e=t(17626),v=t(88879),_=t(73281),y=t(20383),h=t(79608),O=t(86810),r=t(77712),n=(t(90912),t(85931),t(8314),t(76898)),l=t(55214),p=t(51494);let u=m=class extends((0,h.J)(O.wq)){constructor(o){super(o),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null,this.type="direction-line"}static fromGraphic(o){return new m({directionLineType:p.td.fromJSON(o.attributes.DirectionLineType),directionPointId:o.attributes.DirectionPointID,distance:o.attributes.Meters,duration:o.attributes.Minutes,fromLevel:o.attributes.FromLevel??null,geometry:o.geometry,objectId:o.attributes.ObjectID??o.attributes.__OBJECTID,popupTemplate:o.popupTemplate,symbol:o.symbol,toLevel:o.attributes.ToLevel??null})}toGraphic(){const o={ObjectID:this.objectId,DirectionLineType:null!=this.directionLineType?p.td.toJSON(this.directionLineType):null,DirectionPointID:this.directionPointId,Meters:this.distance,Minutes:this.duration};return null!=this.fromLevel&&(o.FromLevel=this.fromLevel),null!=this.toLevel&&(o.ToLevel=this.toLevel),new v.Z({geometry:this.geometry,attributes:o,symbol:this.symbol,popupTemplate:this.popupTemplate})}};u.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionsLineType",codedValues:[{name:"Unknown",code:0},{name:"Segment",code:1},{name:"Maneuver Segment",code:2},{name:"Restriction violation",code:3},{name:"Scale cost barrier crossing",code:4},{name:"Heavy Traffic",code:5},{name:"Slow Traffic",code:6},{name:"Moderate Traffic",code:7}]}},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"FromLevel",alias:"Start from 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"Meters",alias:"Length in Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"Minutes",alias:"Duration in Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"ToLevel",alias:"End at 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1}],u.popupInfo={title:"Direction Lines",fieldInfos:[{fieldName:"DirectionLineType",label:"Line Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Meters",label:"Length in Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Minutes",label:"Duration in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DirectionPointID",label:"Direction Point ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"FromLevel",label:"Start from 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ToLevel",label:"End at 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,e._)([(0,r.Cb)({type:p.td.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:p.td.read}}})],u.prototype,"directionLineType",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.DirectionPointID"}}})],u.prototype,"directionPointId",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.Meters"}}})],u.prototype,"distance",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.Minutes"}}})],u.prototype,"duration",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.FromLevel"}}})],u.prototype,"fromLevel",void 0),(0,e._)([(0,r.Cb)({type:l.Z})],u.prototype,"geometry",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.ObjectID"}}})],u.prototype,"objectId",void 0),(0,e._)([(0,r.Cb)({type:_.Z})],u.prototype,"popupTemplate",void 0),(0,e._)([(0,r.Cb)({types:y.LB})],u.prototype,"symbol",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.ToLevel"}}})],u.prototype,"toLevel",void 0),(0,e._)([(0,r.Cb)({readOnly:!0,json:{read:!1}})],u.prototype,"type",void 0),u=m=(0,e._)([(0,n.j)("esri.rest.support.DirectionLine")],u);const a=u},58924:(f,T,t)=>{t.d(T,{Z:()=>o});var u,e=t(17626),v=t(88879),_=t(73281),y=t(20383),h=t(79608),O=t(86810),r=t(77712),n=(t(90912),t(85931),t(8314),t(68653)),l=t(76898),p=t(72642),m=t(51494);let a=u=class extends((0,h.J)(O.wq)){constructor(i){super(i),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.type="direction-point",this.voiceInstruction=null}readArrivalTime(i,d){return null!=d.attributes.ArrivalTime?new Date(d.attributes.ArrivalTime):null}static fromGraphic(i){return new u({alternateName:i.attributes.AlternateName??null,arrivalTime:null!=i.attributes.ArrivalTime?new Date(i.attributes.ArrivalTime):null,arrivalTimeOffset:i.attributes.ArrivalUTCOffset??null,azimuth:i.attributes.Azimuth??null,branchName:i.attributes.BranchName??null,directionPointType:m.cW.fromJSON(i.attributes.DirectionPointType),displayText:i.attributes.DisplayText??null,exitName:i.attributes.ExitName??null,geometry:i.geometry,intersectingName:i.attributes.IntersectingName??null,level:i.attributes.Level??null,name:i.attributes.Name??null,objectId:i.attributes.ObjectID??i.attributes.__OBJECTID,popupTemplate:i.popupTemplate,sequence:i.attributes.Sequence,shortVoiceInstruction:i.attributes.ShortVoiceInstruction??null,stopId:i.attributes.StopID??null,symbol:i.symbol,towardName:i.attributes.TowardName??null,voiceInstruction:i.attributes.VoiceInstruction??null})}toGraphic(){const i={ObjectID:this.objectId,DirectionPointType:null!=this.directionPointType?m.cW.toJSON(this.directionPointType):null,Sequence:this.sequence,StopID:this.stopId};return null!=this.alternateName&&(i.AlternateName=this.alternateName),null!=this.arrivalTime&&(i.ArrivalTime=this.arrivalTime.getTime()),null!=this.arrivalTimeOffset&&(i.ArrivalUTCOffset=this.arrivalTimeOffset),null!=this.azimuth&&(i.Azimuth=this.azimuth),null!=this.branchName&&(i.BranchName=this.branchName),null!=this.displayText&&(i.DisplayText=this.displayText),null!=this.exitName&&(i.ExitName=this.exitName),null!=this.intersectingName&&(i.IntersectingName=this.intersectingName),null!=this.level&&(i.Level=this.level),null!=this.name&&(i.Name=this.name),null!=this.shortVoiceInstruction&&(i.ShortVoiceInstruction=this.shortVoiceInstruction),null!=this.towardName&&(i.TowardName=this.towardName),null!=this.voiceInstruction&&(i.VoiceInstruction=this.voiceInstruction),new v.Z({geometry:this.geometry,attributes:i,symbol:this.symbol,popupTemplate:this.popupTemplate})}};a.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AlternateName",alias:"Alternative Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ArrivalTime",alias:"Maneuver Starts at",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"BranchName",alias:"Signpost Branch Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"DirectionPointType",alias:"Directions Item Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionPointType",codedValues:[{name:"Unknown",code:0},{name:"",code:1},{name:"Arrive at stop",code:50},{name:"Depart at stop",code:51},{name:"Go straight",code:52},{name:"Take ferry",code:100},{name:"Take off ferry",code:101},{name:"Keep center at fork",code:102},{name:"Take roundabout",code:103},{name:"Make U-Turn",code:104},{name:"Pass the door",code:150},{name:"Take stairs",code:151},{name:"",code:152},{name:"Take escalator",code:153},{name:"Take pedestrian ramp",code:154},{name:"Keep left at fork",code:200},{name:"Ramp left",code:201},{name:"Take left-handed roundabout",code:202},{name:"Make left-handed U-Turn",code:203},{name:"Bear left",code:204},{name:"Turn left",code:205},{name:"Make sharp left",code:206},{name:"Turn left, followed by turn left",code:207},{name:"Turn left, followed by turn right",code:208},{name:"Keep right at fork",code:300},{name:"Ramp right",code:301},{name:"Take right-handed roundabout",code:302},{name:"Make right-handed U-Turn",code:303},{name:"Bear right",code:304},{name:"Turn right",code:305},{name:"Make sharp right",code:306},{name:"Turn right, followed by turn left",code:307},{name:"Turn right, followed by turn right",code:308},{name:"Indicates up direction of elevator",code:400},{name:"Indicates up direction of escalator",code:401},{name:"Take up-stairs",code:402},{name:"Indicates down direction of elevator",code:500},{name:"Indicates down direction of escalator",code:501},{name:"Take down-stairs",code:502},{name:"General event",code:1e3},{name:"Landmark",code:1001},{name:"Time zone change",code:1002},{name:"Heavy traffic segment",code:1003},{name:"Scale cost barrier crossing",code:1004},{name:"Administrative Border crossing",code:1005},{name:"Restriction violation",code:1006}]}},{name:"DisplayText",alias:"Text to Display",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ExitName",alias:"Highway Exit Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"IntersectingName",alias:"Intersecting Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Level",alias:"3D Logical Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Name",alias:"Primary Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ShortVoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TowardName",alias:"Signpost Toward Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"VoiceInstruction",alias:"Voice Full Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null}],a.popupInfo={title:"{DisplayText}",fieldInfos:[{fieldName:"DirectionPointType",label:"Directions Item Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"DisplayText",label:"Text to Display",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"StopID",label:"Stop ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Maneuver Starts at",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Azimuth",label:"Azimuth",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Name",label:"Primary Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AlternateName",label:"Alternative Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ExitName",label:"Highway Exit Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"IntersectingName",label:"Intersecting Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BranchName",label:"Signpost Branch Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TowardName",label:"Signpost Toward Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ShortVoiceInstruction",label:"Voice Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"VoiceInstruction",label:"Voice Full Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,e._)([(0,r.Cb)()],a.prototype,"alternateName",void 0),(0,e._)([(0,r.Cb)()],a.prototype,"arrivalTime",void 0),(0,e._)([(0,n.r)("arrivalTime",["attributes.ArrivalTime"])],a.prototype,"readArrivalTime",null),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],a.prototype,"arrivalTimeOffset",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.Azimuth"}}})],a.prototype,"azimuth",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.BranchName"}}})],a.prototype,"branchName",void 0),(0,e._)([(0,r.Cb)({type:m.cW.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:m.cW.read}}})],a.prototype,"directionPointType",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.DisplayText"}}})],a.prototype,"displayText",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.ExitName"}}})],a.prototype,"exitName",void 0),(0,e._)([(0,r.Cb)({type:p.Z})],a.prototype,"geometry",void 0),(0,e._)([(0,r.Cb)()],a.prototype,"intersectingName",void 0),(0,e._)([(0,r.Cb)()],a.prototype,"level",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.Name"}}})],a.prototype,"name",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.ObjectID"}}})],a.prototype,"objectId",void 0),(0,e._)([(0,r.Cb)({type:_.Z})],a.prototype,"popupTemplate",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.Sequence"}}})],a.prototype,"sequence",void 0),(0,e._)([(0,r.Cb)()],a.prototype,"shortVoiceInstruction",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.StopID"}}})],a.prototype,"stopId",void 0),(0,e._)([(0,r.Cb)({types:y.LB})],a.prototype,"symbol",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.TowardName"}}})],a.prototype,"towardName",void 0),(0,e._)([(0,r.Cb)({readOnly:!0,json:{read:!1}})],a.prototype,"type",void 0),(0,e._)([(0,r.Cb)()],a.prototype,"voiceInstruction",void 0),a=u=(0,e._)([(0,l.j)("esri.rest.support.DirectionPoint")],a);const o=a},53753:(f,T,t)=>{t.d(T,{Z:()=>d});var o,e=t(17626),v=t(88879),_=t(73281),y=t(20383),h=t(79608),O=t(86810),r=t(77712),n=(t(90912),t(85931),t(8314),t(68653)),l=t(76898),p=t(99433),m=t(72642),u=t(68171),a=t(51494);let i=o=class extends((0,h.J)(O.wq)){constructor(s){super(s),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier"}readCosts(s,b){return(0,u.DE)(b.attributes,"Attr_")}writeCosts(s,b){(0,u.nY)(s,b,"Attr_")}static fromGraphic(s){return new o({addedCost:s.attributes.AddedCost??null,barrierType:null!=s.attributes.BarrierType?a.oi.fromJSON(s.attributes.BarrierType):null,costs:null!=s.attributes.Costs?(0,u.EQ)(JSON.parse(s.attributes.Costs)):null,curbApproach:null!=s.attributes.CurbApproach?a.W7.fromJSON(s.attributes.CurbApproach):null,fullEdge:null!=s.attributes.FullEdge?a.Dd.fromJSON(s.attributes.FullEdge):null,geometry:s.geometry,name:s.attributes.Name??null,objectId:s.attributes.ObjectID??s.attributes.__OBJECTID,popupTemplate:s.popupTemplate,status:null!=s.attributes.Status?a.SS.fromJSON(s.attributes.Status):null,symbol:s.symbol})}toGraphic(){const s={ObjectID:this.objectId,AddedCost:this.addedCost,BarrierType:null!=this.barrierType?a.oi.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify((0,u.co)(this.costs)):null,CurbApproach:null!=this.curbApproach?a.W7.toJSON(this.curbApproach):null,FullEdge:null!=this.fullEdge?a.Dd.toJSON(this.fullEdge):null,Name:this.name,Status:null!=this.status?a.SS.toJSON(this.status):null};return new v.Z({geometry:this.geometry,attributes:s,symbol:this.symbol,popupTemplate:this.popupTemplate})}};i.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAIntYesNo",codedValues:[{name:"No",code:0},{name:"Yes",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}}],i.popupInfo={title:"Point Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AddedCost",label:"Added Cost",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,e._)([(0,r.Cb)()],i.prototype,"addedCost",void 0),(0,e._)([(0,r.Cb)({type:a.oi.apiValues,json:{name:"attributes.BarrierType",read:{reader:a.oi.read},write:{writer:a.oi.write}}})],i.prototype,"barrierType",void 0),(0,e._)([(0,r.Cb)()],i.prototype,"costs",void 0),(0,e._)([(0,n.r)("costs",["attributes"])],i.prototype,"readCosts",null),(0,e._)([(0,p.c)("costs")],i.prototype,"writeCosts",null),(0,e._)([(0,r.Cb)({constructOnly:!0,type:a.W7.apiValues,json:{read:{source:"attributes.CurbApproach",reader:a.W7.read}}})],i.prototype,"curbApproach",void 0),(0,e._)([(0,r.Cb)({type:a.Dd.apiValues,json:{name:"attributes.FullEdge",read:{reader:a.Dd.read},write:{writer:a.Dd.write}}})],i.prototype,"fullEdge",void 0),(0,e._)([(0,r.Cb)({type:m.Z,json:{write:!0}})],i.prototype,"geometry",void 0),(0,e._)([(0,r.Cb)({json:{name:"attributes.Name"}})],i.prototype,"name",void 0),(0,e._)([(0,r.Cb)({json:{name:"attributes.ObjectID"}})],i.prototype,"objectId",void 0),(0,e._)([(0,r.Cb)({type:_.Z})],i.prototype,"popupTemplate",void 0),(0,e._)([(0,r.Cb)({type:a.BW.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:a.BW.read}}})],i.prototype,"sideOfEdge",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.SourceID"}}})],i.prototype,"sourceId",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.SourceOID"}}})],i.prototype,"sourceOid",void 0),(0,e._)([(0,r.Cb)({type:a.SS.apiValues,json:{read:{source:"attributes.Status",reader:a.SS.read}}})],i.prototype,"status",void 0),(0,e._)([(0,r.Cb)({types:y.LB})],i.prototype,"symbol",void 0),(0,e._)([(0,r.Cb)({readOnly:!0,json:{read:!1}})],i.prototype,"type",void 0),i=o=(0,e._)([(0,l.j)("esri.rest.support.PointBarrier")],i);const d=i},719:(f,T,t)=>{t.d(T,{Z:()=>d});var o,e=t(17626),v=t(88879),_=t(73281),y=t(20383),h=t(79608),O=t(86810),r=t(77712),n=(t(90912),t(85931),t(8314),t(68653)),l=t(76898),p=t(99433),m=t(37118),u=t(68171),a=t(51494);let i=o=class extends((0,h.J)(O.wq)){constructor(s){super(s),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polygon-barrier"}readCosts(s,b){return(0,u.DE)(b.attributes,"Attr_")}writeCosts(s,b){(0,u.nY)(s,b,"Attr_")}static fromGraphic(s){return new o({barrierType:null!=s.attributes.BarrierType?a.oi.fromJSON(s.attributes.BarrierType):null,costs:null!=s.attributes.Costs?(0,u.EQ)(JSON.parse(s.attributes.Costs)):null,geometry:s.geometry,name:s.attributes.Name??null,objectId:s.attributes.ObjectID??s.attributes.__OBJECTID,popupTemplate:s.popupTemplate,scaleFactor:s.attributes.ScaleFactor??null,symbol:s.symbol})}toGraphic(){const s={ObjectID:this.objectId,BarrierType:null!=this.barrierType?a.oi.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify((0,u.co)(this.costs)):null,Name:this.name??null,ScaleFactor:this.scaleFactor??null};return new v.Z({geometry:this.geometry,attributes:s,symbol:this.symbol,popupTemplate:this.popupTemplate})}};i.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],i.popupInfo={title:"Polygon Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,e._)([(0,r.Cb)({type:a.oi.apiValues,json:{name:"attributes.BarrierType",read:{reader:a.oi.read},write:{writer:a.oi.write}}})],i.prototype,"barrierType",void 0),(0,e._)([(0,r.Cb)()],i.prototype,"costs",void 0),(0,e._)([(0,n.r)("costs",["attributes"])],i.prototype,"readCosts",null),(0,e._)([(0,p.c)("costs")],i.prototype,"writeCosts",null),(0,e._)([(0,r.Cb)({type:m.Z,json:{write:!0}})],i.prototype,"geometry",void 0),(0,e._)([(0,r.Cb)({json:{name:"attributes.Name"}})],i.prototype,"name",void 0),(0,e._)([(0,r.Cb)({json:{name:"attributes.ObjectID"}})],i.prototype,"objectId",void 0),(0,e._)([(0,r.Cb)({type:_.Z})],i.prototype,"popupTemplate",void 0),(0,e._)([(0,r.Cb)()],i.prototype,"scaleFactor",void 0),(0,e._)([(0,r.Cb)({types:y.LB})],i.prototype,"symbol",void 0),(0,e._)([(0,r.Cb)({readOnly:!0,json:{read:!1}})],i.prototype,"type",void 0),i=o=(0,e._)([(0,l.j)("esri.rest.support.PolygonBarrier")],i);const d=i},17718:(f,T,t)=>{t.d(T,{Z:()=>i});var a,e=t(17626),v=t(88879),_=t(73281),y=t(20383),h=t(79608),O=t(86810),r=t(77712),n=(t(90912),t(85931),t(8314),t(68653)),l=t(76898),p=t(55214),m=t(68171),u=t(51494);let o=a=class extends((0,h.J)(O.wq)){constructor(d){super(d),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polyline-barrier"}readCosts(d,s){return(0,m.DE)(s.attributes,"Attr_")}static fromGraphic(d){return new a({barrierType:null!=d.attributes.BarrierType?u.oi.fromJSON(d.attributes.BarrierType):null,costs:null!=d.attributes.Costs?(0,m.EQ)(JSON.parse(d.attributes.Costs)):null,geometry:d.geometry,name:d.attributes.Name??null,objectId:d.attributes.ObjectID??d.attributes.__OBJECTID,popupTemplate:d.popupTemplate,scaleFactor:d.attributes.ScaleFactor??null,symbol:d.symbol})}toGraphic(){const d={ObjectID:this.objectId,BarrierType:null!=this.barrierType?u.oi.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify((0,m.co)(this.costs)):null,Name:this.name,ScaleFactor:this.scaleFactor};return new v.Z({geometry:this.geometry,attributes:d,symbol:this.symbol,popupTemplate:this.popupTemplate})}};o.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],o.popupInfo={title:"Line Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,e._)([(0,r.Cb)({type:u.oi.apiValues,json:{read:{source:"attributes.BarrierType",reader:u.oi.read}}})],o.prototype,"barrierType",void 0),(0,e._)([(0,r.Cb)()],o.prototype,"costs",void 0),(0,e._)([(0,n.r)("costs",["attributes"])],o.prototype,"readCosts",null),(0,e._)([(0,r.Cb)({type:p.Z,json:{write:!0}})],o.prototype,"geometry",void 0),(0,e._)([(0,r.Cb)({json:{name:"attributes.Name"}})],o.prototype,"name",void 0),(0,e._)([(0,r.Cb)({json:{name:"attributes.ObjectID"}})],o.prototype,"objectId",void 0),(0,e._)([(0,r.Cb)({type:_.Z})],o.prototype,"popupTemplate",void 0),(0,e._)([(0,r.Cb)()],o.prototype,"scaleFactor",void 0),(0,e._)([(0,r.Cb)({types:y.LB})],o.prototype,"symbol",void 0),(0,e._)([(0,r.Cb)({readOnly:!0,json:{read:!1}})],o.prototype,"type",void 0),o=a=(0,e._)([(0,l.j)("esri.rest.support.PolylineBarrier")],o);const i=o},29739:(f,T,t)=>{t.d(T,{Z:()=>i});var a,e=t(17626),v=t(88879),_=t(73281),y=t(20383),h=t(79608),O=t(86810),r=t(77712),n=(t(90912),t(85931),t(8314),t(68653)),l=t(76898),p=t(55214),m=t(68171),u=t(47521);let o=a=class extends((0,h.J)(O.wq)){constructor(d){super(d),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.type="route-info",this.version="1.0.0"}readEndTime(d,s){return null!=s.attributes.EndTimeUTC?new Date(s.attributes.EndTimeUTC):null}readEndTimeOffset(d,s){return(0,m.pQ)(s.attributes.EndTime,s.attributes.EndTimeUTC)}readStartTime(d,s){return null!=s.attributes.StartTimeUTC?new Date(s.attributes.StartTimeUTC):null}readStartTimeOffset(d,s){return(0,m.pQ)(s.attributes.StartTime,s.attributes.StartTimeUTC)}readTotalCosts(d,s){return(0,m.DE)(s.attributes,"Total_")}readTotalViolations(d,s){return(0,m.DE)(s.attributes,"TotalViolation_")}readTotalWait(d,s){return(0,m.DE)(s.attributes,"TotalWait_")}static fromGraphic(d){return new a({analysisSettings:null!=d.attributes.AnalysisSettings?u.Z.fromJSON(JSON.parse(d.attributes.AnalysisSettings)):null,endTime:null!=d.attributes.EndTime?new Date(d.attributes.EndTime):null,endTimeOffset:d.attributes.EndUTCOffset??null,geometry:d.geometry,messages:null!=d.attributes.Messages?JSON.parse(d.attributes.Messages):null,name:d.attributes.RouteName,objectId:d.attributes.ObjectID??d.attributes.__OBJECTID,popupTemplate:d.popupTemplate,startTime:null!=d.attributes.StartTime?new Date(d.attributes.StartTime):null,startTimeOffset:d.attributes.StartUTCOffset??null,symbol:d.symbol,totalCosts:null!=d.attributes.TotalCosts?(0,m.EQ)(JSON.parse(d.attributes.TotalCosts)):null,totalDistance:d.attributes.TotalMeters??null,totalDuration:d.attributes.TotalMinutes??null,totalLateDuration:d.attributes.TotalLateMinutes??null,totalWaitDuration:d.attributes.TotalWaitMinutes??null,version:d.attributes.Version})}toGraphic(){const d={ObjectID:this.objectId,AnalysisSettings:null!=this.analysisSettings?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:null!=this.endTime?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:null!=this.messages?JSON.stringify(this.messages):null,RouteName:this.name,StartTime:null!=this.startTime?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:null!=this.totalCosts?JSON.stringify((0,m.co)(this.totalCosts)):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:this.version};return new v.Z({geometry:this.geometry,attributes:d,symbol:this.symbol,popupTemplate:this.popupTemplate})}};o.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"EndUTCOffset",alias:"End Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Messages",alias:"Analysis Messages",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:1024,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"StartUTCOffset",alias:"Start Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Version",alias:"Version",type:"esriFieldTypeString",length:16,editable:!0,nullable:!0,visible:!0,domain:null}],o.popupInfo={title:"Route Details",fieldInfos:[{fieldName:"RouteName",label:"Route Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TotalMinutes",label:"Total Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalMeters",label:"Total Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalLateMinutes",label:"Total Late Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalWaitMinutes",label:"Total Wait Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalCosts",label:"Total Costs",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"StartTime",label:"Start Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"StartUTCOffset",label:"Start Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"EndTime",label:"End Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"EndUTCOffset",label:"End Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Messages",label:"Analysis Messages",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"AnalysisSettings",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"Version",label:"Version",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,e._)([(0,r.Cb)()],o.prototype,"analysisSettings",void 0),(0,e._)([(0,r.Cb)()],o.prototype,"endTime",void 0),(0,e._)([(0,n.r)("endTime",["attributes.EndTimeUTC"])],o.prototype,"readEndTime",null),(0,e._)([(0,r.Cb)()],o.prototype,"endTimeOffset",void 0),(0,e._)([(0,n.r)("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],o.prototype,"readEndTimeOffset",null),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.FirstStopID"}}})],o.prototype,"firstStopId",void 0),(0,e._)([(0,r.Cb)({type:p.Z})],o.prototype,"geometry",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.LastStopID"}}})],o.prototype,"lastStopId",void 0),(0,e._)([(0,r.Cb)()],o.prototype,"messages",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.Name"}}})],o.prototype,"name",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.ObjectID"}}})],o.prototype,"objectId",void 0),(0,e._)([(0,r.Cb)({type:_.Z})],o.prototype,"popupTemplate",void 0),(0,e._)([(0,r.Cb)()],o.prototype,"startTime",void 0),(0,e._)([(0,n.r)("startTime",["attributes.StartTimeUTC"])],o.prototype,"readStartTime",null),(0,e._)([(0,r.Cb)()],o.prototype,"startTimeOffset",void 0),(0,e._)([(0,n.r)("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],o.prototype,"readStartTimeOffset",null),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.StopCount"}}})],o.prototype,"stopCount",void 0),(0,e._)([(0,r.Cb)({types:y.LB})],o.prototype,"symbol",void 0),(0,e._)([(0,r.Cb)()],o.prototype,"totalCosts",void 0),(0,e._)([(0,n.r)("totalCosts",["attributes"])],o.prototype,"readTotalCosts",null),(0,e._)([(0,r.Cb)()],o.prototype,"totalDistance",void 0),(0,e._)([(0,r.Cb)()],o.prototype,"totalDuration",void 0),(0,e._)([(0,r.Cb)()],o.prototype,"totalLateDuration",void 0),(0,e._)([(0,r.Cb)()],o.prototype,"totalViolations",void 0),(0,e._)([(0,n.r)("totalViolations",["attributes"])],o.prototype,"readTotalViolations",null),(0,e._)([(0,r.Cb)()],o.prototype,"totalWait",void 0),(0,e._)([(0,n.r)("totalWait",["attributes"])],o.prototype,"readTotalWait",null),(0,e._)([(0,r.Cb)()],o.prototype,"totalWaitDuration",void 0),(0,e._)([(0,r.Cb)({readOnly:!0,json:{read:!1}})],o.prototype,"type",void 0),(0,e._)([(0,r.Cb)()],o.prototype,"version",void 0),o=a=(0,e._)([(0,l.j)("esri.rest.support.RouteInfo")],o);const i=o},47521:(f,T,t)=>{t.d(T,{Z:()=>p});var e=t(17626),v=t(86810),_=t(77712),r=(t(90912),t(85931),t(8314),t(68653)),E=t(76898),D=t(99433),c=t(51494),n=t(67854);let l=class extends v.wq{constructor(m){super(m),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}readAccumulateAttributes(m){return null==m?null:m.map(u=>c.Ul.fromJSON(u))}writeAccumulateAttributes(m,u,a){m?.length&&(u[a]=m.map(o=>c.Ul.toJSON(o)))}};(0,e._)([(0,_.Cb)({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],l.prototype,"accumulateAttributes",void 0),(0,e._)([(0,r.r)("accumulateAttributes")],l.prototype,"readAccumulateAttributes",null),(0,e._)([(0,D.c)("accumulateAttributes")],l.prototype,"writeAccumulateAttributes",null),(0,e._)([(0,_.Cb)({type:String,json:{write:!0}})],l.prototype,"directionsLanguage",void 0),(0,e._)([(0,_.Cb)({type:Boolean,json:{write:!0}})],l.prototype,"findBestSequence",void 0),(0,e._)([(0,_.Cb)({type:Boolean,json:{write:!0}})],l.prototype,"preserveFirstStop",void 0),(0,e._)([(0,_.Cb)({type:Boolean,json:{write:!0}})],l.prototype,"preserveLastStop",void 0),(0,e._)([(0,_.Cb)({type:Boolean,json:{write:!0}})],l.prototype,"startTimeIsUTC",void 0),(0,e._)([(0,_.Cb)({type:Boolean,json:{write:!0}})],l.prototype,"timeWindowsAreUTC",void 0),(0,e._)([(0,_.Cb)({type:n.Z,json:{write:!0}})],l.prototype,"travelMode",void 0),l=(0,e._)([(0,E.j)("esri.layers.support.RouteSettings")],l);const p=l},69583:(f,T,t)=>{t.d(T,{Z:()=>d});var o,e=t(17626),v=t(88879),_=t(73281),y=t(20383),h=t(79608),O=t(86810),r=t(77712),n=(t(90912),t(85931),t(8314),t(68653)),l=t(76898),p=t(99433),m=t(72642),u=t(68171),a=t(51494);let i=o=class extends((0,h.J)(O.wq)){constructor(s){super(s),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.type="stop",this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(s,b){return(0,u.pQ)(b.attributes.ArriveTime,b.attributes.ArriveTimeUTC)}readCumulativeCosts(s,b){return(0,u.DE)(b.attributes,"Cumul_")}readDepartTimeOffset(s,b){return(0,u.pQ)(b.attributes.DepartTime,b.attributes.DepartTimeUTC)}readServiceCosts(s,b){return(0,u.DE)(b.attributes,"Attr_")}writeServiceCosts(s,b){(0,u.nY)(s,b,"Attr_")}writeTimeWindowEnd(s,b){null!=s&&(b.attributes||(b.attributes={}),b.attributes.TimeWindowEnd=s.getTime())}writeTimeWindowStart(s,b){null!=s&&(b.attributes||(b.attributes={}),b.attributes.TimeWindowStart=s.getTime())}readViolations(s,b){return(0,u.DE)(b.attributes,"Violation_")}readWait(s,b){return(0,u.DE)(b.attributes,"Wait_")}static fromGraphic(s){return new o({arriveCurbApproach:null!=s.attributes.ArrivalCurbApproach?a.W7.fromJSON(s.attributes.ArrivalCurbApproach):null,arriveTime:null!=s.attributes.ArrivalTime?new Date(s.attributes.ArrivalTime):null,arriveTimeOffset:s.attributes.ArrivalUTCOffset,cumulativeCosts:null!=s.attributes.CumulativeCosts?(0,u.EQ)(JSON.parse(s.attributes.CumulativeCosts)):null,cumulativeDistance:s.attributes.CumulativeMeters??null,cumulativeDuration:s.attributes.CumulativeMinutes??null,curbApproach:null!=s.attributes.CurbApproach?a.W7.fromJSON(s.attributes.CurbApproach):null,departCurbApproach:null!=s.attributes.DepartureCurbApproach?a.W7.fromJSON(s.attributes.DepartureCurbApproach):null,departTime:null!=s.attributes.DepartureTime?new Date(s.attributes.DepartureTime):null,departTimeOffset:s.attributes.DepartureUTCOffset??null,geometry:s.geometry,lateDuration:s.attributes.LateMinutes??null,locationType:null!=s.attributes.LocationType?a.yP.fromJSON(s.attributes.LocationType):null,name:s.attributes.Name,objectId:s.attributes.ObjectID??s.attributes.__OBJECTID,popupTemplate:s.popupTemplate,routeName:s.attributes.RouteName,sequence:s.attributes.Sequence??null,serviceCosts:null!=s.attributes.ServiceCosts?(0,u.EQ)(JSON.parse(s.attributes.ServiceCosts)):null,serviceDistance:s.attributes.ServiceMeters??null,serviceDuration:s.attributes.ServiceMinutes??null,status:null!=s.attributes.Status?a.SS.fromJSON(s.attributes.Status):null,symbol:s.symbol,timeWindowEnd:null!=s.attributes.TimeWindowEnd?new Date(s.attributes.TimeWindowEnd):null,timeWindowEndOffset:s.attributes.TimeWindowEndUTCOffset??null,timeWindowStart:null!=s.attributes.TimeWindowStart?new Date(s.attributes.TimeWindowStart):null,timeWindowStartOffset:s.attributes.TimeWindowStartUTCOffset??null,waitDuration:s.attributes.WaitMinutes??null})}toGraphic(){const s={ObjectID:this.objectId,ArrivalCurbApproach:null!=this.arriveCurbApproach?a.W7.toJSON(this.arriveCurbApproach):null,ArrivalTime:null!=this.arriveTime?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:null!=this.cumulativeCosts?JSON.stringify((0,u.co)(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:null!=this.curbApproach?a.W7.toJSON(this.curbApproach):null,DepartureCurbApproach:null!=this.departCurbApproach?a.W7.toJSON(this.departCurbApproach):null,DepartureTime:null!=this.departTime?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:null!=this.locationType?a.yP.toJSON(this.locationType):null,Name:this.name,RouteName:this.routeName,Sequence:this.sequence,ServiceCosts:null!=this.serviceCosts?JSON.stringify((0,u.co)(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:null!=this.status?a.SS.toJSON(this.status):null,TimeWindowEnd:null!=this.timeWindowEnd?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:this.timeWindowEndOffset??this.arriveTimeOffset,TimeWindowStart:null!=this.timeWindowStart?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:this.timeWindowStartOffset??this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new v.Z({geometry:this.geometry,attributes:s,symbol:this.symbol,popupTemplate:this.popupTemplate})}};i.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Arrival Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"DepartureUTCOffset",alias:"Departure Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNALocationType",codedValues:[{name:"Stop",code:0},{name:"Waypoint",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowEndUTCOffset",alias:"Time Window End: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"WaitMinutes",alias:"Minutes Early",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1}],i.popupInfo={title:"{Name}",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"RouteName",label:"Route Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Arrival Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Arrival Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureTime",label:"Departure Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"DepartureUTCOffset",label:"Departure Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CurbApproach",label:"Curb Approach",isEditable:!0,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalCurbApproach",label:"Arrival Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureCurbApproach",label:"Departure Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Status",label:"Status",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"LocationType",label:"Location Type",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowStart",label:"Time Window Start",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowStartUTCOffset",label:"Time Window Start: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowEnd",label:"Time Window End",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowEndUTCOffset",label:"Time Window End: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMinutes",label:"Service Minutes",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMeters",label:"Service Meters",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceCosts",label:"Service Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"CumulativeMinutes",label:"Cumulative Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeMeters",label:"Cumulative Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeCosts",label:"Cumulative Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"LateMinutes",label:"Minutes Late",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"WaitMinutes",label:"Minutes Early",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,e._)([(0,r.Cb)({type:a.W7.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:a.W7.read}}})],i.prototype,"arriveCurbApproach",void 0),(0,e._)([(0,r.Cb)({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],i.prototype,"arriveTime",void 0),(0,e._)([(0,r.Cb)()],i.prototype,"arriveTimeOffset",void 0),(0,e._)([(0,n.r)("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],i.prototype,"readArriveTimeOffset",null),(0,e._)([(0,r.Cb)({json:{name:"attributes.Bearing",read:!1,write:!0}})],i.prototype,"bearing",void 0),(0,e._)([(0,r.Cb)({json:{name:"attributes.BearingTol",read:!1,write:!0}})],i.prototype,"bearingTol",void 0),(0,e._)([(0,r.Cb)()],i.prototype,"cumulativeCosts",void 0),(0,e._)([(0,n.r)("cumulativeCosts",["attributes"])],i.prototype,"readCumulativeCosts",null),(0,e._)([(0,r.Cb)()],i.prototype,"cumulativeDistance",void 0),(0,e._)([(0,r.Cb)()],i.prototype,"cumulativeDuration",void 0),(0,e._)([(0,r.Cb)({type:a.W7.apiValues,json:{name:"attributes.CurbApproach",read:{reader:a.W7.read},write:{writer:a.W7.write}}})],i.prototype,"curbApproach",void 0),(0,e._)([(0,r.Cb)({type:a.W7.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:a.W7.read}}})],i.prototype,"departCurbApproach",void 0),(0,e._)([(0,r.Cb)({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],i.prototype,"departTime",void 0),(0,e._)([(0,r.Cb)()],i.prototype,"departTimeOffset",void 0),(0,e._)([(0,n.r)("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],i.prototype,"readDepartTimeOffset",null),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],i.prototype,"distanceToNetworkInMeters",void 0),(0,e._)([(0,r.Cb)({type:m.Z,json:{write:!0}})],i.prototype,"geometry",void 0),(0,e._)([(0,r.Cb)()],i.prototype,"lateDuration",void 0),(0,e._)([(0,r.Cb)({type:a.yP.apiValues,json:{name:"attributes.LocationType",read:{reader:a.yP.read},write:{writer:a.yP.write}}})],i.prototype,"locationType",void 0),(0,e._)([(0,r.Cb)({json:{name:"attributes.Name"}})],i.prototype,"name",void 0),(0,e._)([(0,r.Cb)({json:{name:"attributes.NavLatency",read:!1,write:!0}})],i.prototype,"navLatency",void 0),(0,e._)([(0,r.Cb)({json:{name:"attributes.ObjectID"}})],i.prototype,"objectId",void 0),(0,e._)([(0,r.Cb)({type:_.Z})],i.prototype,"popupTemplate",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.PosAlong"}}})],i.prototype,"posAlong",void 0),(0,e._)([(0,r.Cb)({json:{name:"attributes.RouteName"}})],i.prototype,"routeName",void 0),(0,e._)([(0,r.Cb)()],i.prototype,"serviceCosts",void 0),(0,e._)([(0,n.r)("serviceCosts",["attributes"])],i.prototype,"readServiceCosts",null),(0,e._)([(0,p.c)("serviceCosts")],i.prototype,"writeServiceCosts",null),(0,e._)([(0,r.Cb)()],i.prototype,"serviceDistance",void 0),(0,e._)([(0,r.Cb)()],i.prototype,"serviceDuration",void 0),(0,e._)([(0,r.Cb)({json:{name:"attributes.Sequence"}})],i.prototype,"sequence",void 0),(0,e._)([(0,r.Cb)({type:a.BW.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:a.BW.read}}})],i.prototype,"sideOfEdge",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.SnapX"}}})],i.prototype,"snapX",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.SnapY"}}})],i.prototype,"snapY",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.SnapZ"}}})],i.prototype,"snapZ",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.SourceID"}}})],i.prototype,"sourceId",void 0),(0,e._)([(0,r.Cb)({json:{read:{source:"attributes.SourceOID"}}})],i.prototype,"sourceOid",void 0),(0,e._)([(0,r.Cb)({type:a.SS.apiValues,json:{read:{source:"attributes.Status",reader:a.SS.read}}})],i.prototype,"status",void 0),(0,e._)([(0,r.Cb)({types:y.LB})],i.prototype,"symbol",void 0),(0,e._)([(0,r.Cb)({type:Date,json:{name:"attributes.TimeWindowEnd"}})],i.prototype,"timeWindowEnd",void 0),(0,e._)([(0,p.c)("timeWindowEnd")],i.prototype,"writeTimeWindowEnd",null),(0,e._)([(0,r.Cb)()],i.prototype,"timeWindowEndOffset",void 0),(0,e._)([(0,r.Cb)({type:Date,json:{name:"attributes.TimeWindowStart"}})],i.prototype,"timeWindowStart",void 0),(0,e._)([(0,p.c)("timeWindowStart")],i.prototype,"writeTimeWindowStart",null),(0,e._)([(0,r.Cb)()],i.prototype,"timeWindowStartOffset",void 0),(0,e._)([(0,r.Cb)({readOnly:!0,json:{read:!1}})],i.prototype,"type",void 0),(0,e._)([(0,r.Cb)()],i.prototype,"violations",void 0),(0,e._)([(0,n.r)("violations",["attributes"])],i.prototype,"readViolations",null),(0,e._)([(0,r.Cb)()],i.prototype,"waitDuration",void 0),(0,e._)([(0,r.Cb)()],i.prototype,"wait",void 0),(0,e._)([(0,n.r)("wait",["attributes"])],i.prototype,"readWait",null),i=o=(0,e._)([(0,l.j)("esri.rest.support.Stop")],i);const d=i},67854:(f,T,t)=>{t.d(T,{Z:()=>m});var e=t(17626),v=t(79608),_=t(86810),y=t(77712),E=(t(90912),t(85931),t(8314),t(55342)),D=t(68653),c=t(76898),n=t(99433),l=t(51494);let p=class extends((0,v.J)(_.wq)){constructor(u){super(u),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}readId(u,a){return a.id??a.itemId??null}readRestrictionAttributes(u,a){const{restrictionAttributeNames:o}=a;return null==o?null:o.map(i=>l.kL.fromJSON(i))}writeRestrictionAttributes(u,a,o){null!=u&&(a[o]=u.map(i=>l.kL.toJSON(i)))}};(0,e._)([(0,y.Cb)({type:[Object],json:{write:!0}})],p.prototype,"attributeParameterValues",void 0),(0,e._)([(0,y.Cb)({type:String,json:{write:!0}})],p.prototype,"description",void 0),(0,e._)([(0,E.J)(l.D$,{ignoreUnknown:!1})],p.prototype,"distanceAttributeName",void 0),(0,e._)([(0,y.Cb)({type:String,json:{write:!0}})],p.prototype,"id",void 0),(0,e._)([(0,D.r)("id",["id","itemId"])],p.prototype,"readId",null),(0,e._)([(0,E.J)(l.Ul,{ignoreUnknown:!1})],p.prototype,"impedanceAttributeName",void 0),(0,e._)([(0,y.Cb)({type:String,json:{write:!0}})],p.prototype,"name",void 0),(0,e._)([(0,y.Cb)({type:[String],json:{write:!0}})],p.prototype,"restrictionAttributeNames",void 0),(0,e._)([(0,D.r)("restrictionAttributeNames")],p.prototype,"readRestrictionAttributes",null),(0,e._)([(0,n.c)("restrictionAttributeNames")],p.prototype,"writeRestrictionAttributes",null),(0,e._)([(0,y.Cb)({type:Number,json:{write:{allowNull:!0}}})],p.prototype,"simplificationTolerance",void 0),(0,e._)([(0,E.J)(l.q$)],p.prototype,"simplificationToleranceUnits",void 0),(0,e._)([(0,E.J)(l.ZI,{ignoreUnknown:!1})],p.prototype,"timeAttributeName",void 0),(0,e._)([(0,E.J)(l.DJ)],p.prototype,"type",void 0),(0,e._)([(0,y.Cb)({type:Boolean,json:{write:!0}})],p.prototype,"useHierarchy",void 0),(0,e._)([(0,E.J)(l.ip)],p.prototype,"uturnAtJunctions",void 0),p=(0,e._)([(0,c.j)("esri.rest.support.TravelMode")],p);const m=p},51494:(f,T,t)=>{t.d(T,{$7:()=>O,BW:()=>a,D$:()=>C,DJ:()=>l,Dd:()=>i,E2:()=>I,GX:()=>_,KA:()=>N,Ks:()=>P,S7:()=>M,SS:()=>u,Ul:()=>S,W7:()=>p,WP:()=>b,ZI:()=>g,cW:()=>d,dg:()=>h,ip:()=>D,kL:()=>A,no:()=>r,oi:()=>o,q$:()=>v,td:()=>s,yP:()=>m});var e=t(2076);const v=(0,e.w)()({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"}),_=(0,e.w)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),h=((0,e.w)()({esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds"}),(0,e.w)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"})),O=(0,e.w)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),r=(0,e.w)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),D=((0,e.w)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),(0,e.w)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"})),l=((0,e.w)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),(0,e.w)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),(0,e.w)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"})),p=(0,e.w)()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),m=(0,e.w)()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),u=(0,e.w)()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),a=(0,e.w)()({1:"right",2:"left"},{useNumericKeys:!0}),o=(0,e.w)()({0:"restriction",1:"scaled-cost",2:"added-cost"},{useNumericKeys:!0}),i=(0,e.w)()({0:"permit",1:"restrict"},{useNumericKeys:!0}),d=(0,e.w)()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation"},{useNumericKeys:!0}),s=(0,e.w)()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),b=(0,e.w)()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),C=(0,e.w)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),g=(0,e.w)()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),S=(0,e.w)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),A=(0,e.w)()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),M=(0,e.w)()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),N=(0,e.w)()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),I=(0,e.w)()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),P=(0,e.w)()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"})}}]);