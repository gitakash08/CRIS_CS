"use strict";(self.webpackChunkCRIS=self.webpackChunkCRIS||[]).push([[3327],{3327:(B,y,s)=>{s.r(y),s.d(y,{default:()=>H});var v=s(15861),l=s(17626),m=s(84792),T=s(26584),V=s(62208),C=s(99959),p=s(10699),D=s(21726),n=s(77712),L=(s(90912),s(85931)),g=(s(8314),s(68653)),b=s(76898),I=s(79334),M=s(44917),O=s(5143),x=s(65088),N=s(49286),j=s(6647),E=s(13812);class U{constructor(e,t,i,o){this._hasNoDataValues=null,this._minValue=null,this._maxValue=null,"pixelData"in e?(this.values=e.pixelData,this.width=e.width,this.height=e.height,this.noDataValue=e.noDataValue):(this.values=e,this.width=t,this.height=i,this.noDataValue=o)}get hasNoDataValues(){return null==this._hasNoDataValues&&(this._hasNoDataValues=this.values.includes(this.noDataValue)),this._hasNoDataValues}get minValue(){return this._ensureBounds(),this._minValue}get maxValue(){return this._ensureBounds(),this._maxValue}_ensureBounds(){if(null!=this._minValue)return;const{noDataValue:e,values:t}=this;let i=1/0,o=-1/0,d=!0;for(const h of t)h===e?this._hasNoDataValues=!0:(i=h<i?h:i,o=h>o?h:o,d=!1);d?(this._minValue=0,this._maxValue=0):(this._minValue=i,this._maxValue=o>-3e38?o:0)}}var A=s(54024),P=s(63290),Z=s(97347);class w{constructor(e,t,i,o,d={}){this._mainMethod=t,this._transferLists=i,this._listeners=[],this._promise=(0,Z.bA)(e,{...d,schedule:o}).then(h=>{if(void 0===this._thread){this._thread=h,this._promise=null,d.hasInitialize&&this.broadcast({},"initialize");for(const c of this._listeners)this._connectListener(c)}else h.close()}),this._promise.catch(h=>P.Z.getLogger("esri.core.workers.WorkerHandle").error(`Failed to initialize ${e} worker: ${h}`))}on(e,t){const i={removed:!1,eventName:e,callback:t,threadHandle:null};return this._listeners.push(i),this._connectListener(i),(0,A.kB)(()=>{i.removed=!0,(0,L.Od)(this._listeners,i),this._thread&&null!=i.threadHandle&&i.threadHandle.remove()})}destroy(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null,this._listeners.length=0,this._transferLists={}}invoke(e,t){return this.invokeMethod(this._mainMethod,e,t)}invokeMethod(e,t,i){if(this._thread){const o=this._transferLists[e],d=o?o(t):[];return this._thread.invoke(e,t,{transferList:d,signal:i})}return this._promise?this._promise.then(()=>((0,p.k_)(i),this.invokeMethod(e,t,i))):Promise.reject(null)}broadcast(e,t){return this._thread?Promise.all(this._thread.broadcast(t,e)).then(()=>{}):this._promise?this._promise.then(()=>this.broadcast(e,t)):Promise.reject()}get promise(){return this._promise}_connectListener(e){this._thread&&this._thread.on(e.eventName,e.callback).then(t=>{e.removed||(e.threadHandle=t)})}}class f extends w{constructor(e=null){super("LercWorker","_decode",{_decode:t=>[t.buffer]},e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,t,i){return e&&0!==e.byteLength?this.invoke({buffer:e,options:t},i):Promise.resolve(null)}release(){--this.ref<=0&&(u.forEach((e,t)=>{e===this&&u.delete(t)}),this.destroy())}}const u=new Map;let a=class extends((0,O.Z)((0,x.Y)((0,N.q)((0,j.I)((0,C.R)(M.Z)))))){constructor(...r){super(...r),this.capabilities={operations:{supportsTileMap:!1}},this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=function $(r=null){let e=u.get(r);return e||(null!=r?(e=new f(t=>r.immediate.schedule(t)),u.set(r,e)):(e=new f,u.set(null,e))),++e.ref,e}()}normalizeCtorArgs(r,e){return"string"==typeof r?{url:r,...e}:r}destroy(){this._lercDecoder=(0,V.RY)(this._lercDecoder)}readCapabilities(r,e){const t=e.capabilities&&e.capabilities.split(",").map(i=>i.toLowerCase().trim());return t?{operations:{supportsTileMap:t.includes("tilemap")}}:{operations:{supportsTileMap:!1}}}readVersion(r,e){let t=e.currentVersion;return t||(t=9.3),t}load(r){const e=null!=r?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:t=>{for(let i=0;i<t.typeKeywords.length;i++)if("elevation 3d layer"===t.typeKeywords[i].toLowerCase())return!0;throw new T.Z("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},r).catch(p.r9).then(()=>this._fetchImageService(e))),Promise.resolve(this)}fetchTile(r,e,t,i){const o=null!=(i=i||{signal:null}).signal?i.signal:i.signal=(new AbortController).signal,d={responseType:"array-buffer",signal:o},h={noDataValue:i.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(r,e,t,i)).then(()=>(0,m.Z)(this.getTileUrl(r,e,t),d)).then(c=>this._lercDecoder.decode(c.data,h,o)).then(c=>new U(c))}getTileUrl(r,e,t){const o=(0,D.B7)({...this.parsedUrl.query,blankTile:!(!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile)&&null});return`${this.parsedUrl.path}/tile/${r}/${e}/${t}${o?"?"+o:""}`}queryElevation(r,e){var t=this;return(0,v.Z)(function*(){const{ElevationQuery:i}=yield s.e(4684).then(s.bind(s,14684));return(0,p.k_)(e),(new i).query(t,r,e)})()}createElevationSampler(r,e){var t=this;return(0,v.Z)(function*(){const{ElevationQuery:i}=yield s.e(4684).then(s.bind(s,14684));return(0,p.k_)(e),(new i).createSampler(t,r,e)})()}_fetchTileAvailability(r,e,t,i){return this.tilemapCache?this.tilemapCache.fetchAvailability(r,e,t,i):Promise.resolve("unknown")}_fetchImageService(r){var e=this;return(0,v.Z)(function*(){if(e.sourceJSON)return e.sourceJSON;const t={query:{f:"json",...e.parsedUrl.query},responseType:"json",signal:r},i=yield(0,m.Z)(e.parsedUrl.path,t);i.ssl&&(e.url=e.url?.replace(/^http:/i,"https:")),e.sourceJSON=i.data,e.read(i.data,{origin:"service",url:e.parsedUrl})})()}get hasOverriddenFetchTile(){return!this.fetchTile[S]}};(0,l._)([(0,n.Cb)({readOnly:!0})],a.prototype,"capabilities",void 0),(0,l._)([(0,g.r)("service","capabilities",["capabilities"])],a.prototype,"readCapabilities",null),(0,l._)([(0,n.Cb)({json:{read:{source:"copyrightText"}}})],a.prototype,"copyright",void 0),(0,l._)([(0,n.Cb)({readOnly:!0,type:I.Z})],a.prototype,"heightModelInfo",void 0),(0,l._)([(0,n.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0),(0,l._)([(0,n.Cb)({type:["show","hide"]})],a.prototype,"listMode",void 0),(0,l._)([(0,n.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],a.prototype,"minScale",void 0),(0,l._)([(0,n.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],a.prototype,"maxScale",void 0),(0,l._)([(0,n.Cb)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],a.prototype,"opacity",void 0),(0,l._)([(0,n.Cb)({type:["ArcGISTiledElevationServiceLayer"]})],a.prototype,"operationalLayerType",void 0),(0,l._)([(0,n.Cb)()],a.prototype,"sourceJSON",void 0),(0,l._)([(0,n.Cb)({json:{read:!1},value:"elevation",readOnly:!0})],a.prototype,"type",void 0),(0,l._)([(0,n.Cb)(E.HQ)],a.prototype,"url",void 0),(0,l._)([(0,n.Cb)()],a.prototype,"version",void 0),(0,l._)([(0,g.r)("version",["currentVersion"])],a.prototype,"readVersion",null),a=(0,l._)([(0,b.j)("esri.layers.ElevationLayer")],a);const S=Symbol("default-fetch-tile");a.prototype.fetchTile[S]=!0;const H=a}}]);