"use strict";(self.webpackChunkCRIS=self.webpackChunkCRIS||[]).push([[3750],{20194:(B,C,g)=>{g.d(C,{b:()=>u,l:()=>y,o:()=>E});var L,D=g(1719),d={exports:{}};void 0!==(L=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"])&&(d.exports=L);const y=(0,D.g)(d.exports);var m,b={exports:{}};void 0!==(m=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"])&&(b.exports=m);const E=(0,D.g)(b.exports);var U,l={exports:{}};void 0!==(U=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT","textureSize","texelFetch"])&&(l.exports=U);const u=(0,D.g)(l.exports)},21285:(B,C,g)=>{g.d(C,{$:()=>he});var D=g(85931),d=(g(8314),g(81653)),y=g(80738),c=g(67969);const b=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"],E={enableCache:!1};var l=g(20194),u=999,x=9999,m=0,U=1,A=2,O=3,N=4,R=5,Q=6,Z=7,Y=8,I=9,J=10,H=11,q=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function re(n){return function te(n){var t=function ee(){var n,t,r,e=0,a=0,o=u,i=[],h=[],f=1,s=0,_=0,p=!1,S=!1,T="";return function(v){return h=[],null!==v?function me(v){var w;for(e=0,r=(T+=v).length;n=T[e],e<r;){switch(w=e,o){case m:e="/"===n&&"*"===t?(i.push(n),M(i.join("")),o=u,e+1):(i.push(n),t=n,e+1);break;case U:case A:e=$();break;case O:e=be();break;case N:e="."===n||/[eE]/.test(n)?(i.push(n),o=R,t=n,e+1):"x"===n&&1===i.length&&"0"===i[0]?(o=H,i.push(n),t=n,e+1):/[^\d]/.test(n)?(M(i.join("")),o=u,e):(i.push(n),t=n,e+1);break;case H:e=/[^a-fA-F0-9]/.test(n)?(M(i.join("")),o=u,e):(i.push(n),t=n,e+1);break;case R:"f"===n&&(i.push(n),t=n,e+=1),e=/[eE]/.test(n)||"-"===n&&/[eE]/.test(t)?(i.push(n),t=n,e+1):/[^\d]/.test(n)?(M(i.join("")),o=u,e):(i.push(n),t=n,e+1);break;case x:e=Ee();break;case I:e=/[^\s]/g.test(n)?(M(i.join("")),o=u,e):(i.push(n),t=n,e+1);break;case u:i=i.length?[]:i,e="/"===t&&"*"===n?(_=a+e-1,o=m,t=n,e+1):"/"===t&&"/"===n?(_=a+e-1,o=U,t=n,e+1):"#"===n?(o=A,_=a+e,e):/\s/.test(n)?(o=I,_=a+e,e):(p=/\d/.test(n),S=/[^\w_]/.test(n),_=a+e,o=p?N:S?O:x,e)}w!==e&&("\n"===T[w]?(s=0,++f):++s)}return a+=e,T=T.slice(e),h}(v.replace?v.replace(/\r\n/g,"\n"):v):function pe(v){return i.length&&M(i.join("")),o=J,M("(eof)"),h}()};function M(v){v.length&&h.push({type:q[o],data:v,position:_,line:f,column:s})}function $(){return"\r"!==n&&"\n"!==n||"\\"===t?(i.push(n),t=n,e+1):(M(i.join("")),o=u,e)}function be(){if("."===t&&/\d/.test(n))return o=R,e;if("/"===t&&"*"===n)return o=m,e;if("/"===t&&"/"===n)return o=U,e;if("."===n&&i.length){for(;F(i););return o=R,e}if(";"===n||")"===n||"("===n){if(i.length)for(;F(i););return M(n),o=u,e+1}var v=2===i.length&&"="!==n;if(/[\w_\d\s]/.test(n)||v){for(;F(i););return o=u,e}return i.push(n),t=n,e+1}function F(v){for(var w,j,K=0;;){if(w=l.o.indexOf(v.slice(0,v.length+K).join("")),j=l.o[w],-1===w){if(K--+v.length>0)continue;j=v.slice(0,1).join("")}return M(j),_+=j.length,(i=i.slice(j.length)).length}}function Ee(){if(/[^\d\w_]/.test(n)){var v=i.join("");return o=l.l.indexOf(v)>-1?Y:l.b.indexOf(v)>-1?Z:Q,M(i.join("")),o=u,e}return i.push(n),t=n,e+1}}(),r=[];return(r=r.concat(t(n))).concat(t(null))}(n)}const V=new Set(["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"]);function oe(n,t){for(let r=t-1;r>=0;r--){const e=n[r];if("whitespace"!==e.type&&"block-comment"!==e.type){if("keyword"!==e.type)break;if("attribute"===e.data||"in"===e.data)return!0}}return!1}function k(n,t,r,e){e=e||r;for(const a of n)if("ident"===a.type&&a.data===r)return e in t?t[e]++:t[e]=0,k(n,t,e+"_"+t[e],e);return r}function G(n,t,r="afterVersion"){function e(f,s){for(let _=s;_<f.length;_++){const p=f[_];if("operator"===p.type&&";"===p.data)return _}return null}const o={data:"\n",type:"whitespace"},i=f=>f<n.length&&/[^\r\n]$/.test(n[f].data);let h=function a(f){let s=-1,_=0,p=-1;for(let S=0;S<f.length;S++){const T=f[S];if("preprocessor"===T.type&&(/\#(if|ifdef|ifndef)\s+.+/.test(T.data)?++_:/\#endif\s*.*/.test(T.data)&&--_),"afterVersion"!==r&&"afterPrecision"!==r||"preprocessor"===T.type&&T.data.startsWith("#version")&&(p=Math.max(p,S)),"afterPrecision"===r&&"keyword"===T.type&&"precision"===T.data){const M=e(f,S);if(null===M)throw new Error("precision statement not followed by any semicolons!");p=Math.max(p,M)}s<p&&0===_&&(s=S)}return s+1}(n);i(h-1)&&n.splice(h++,0,o);for(const f of t)n.splice(h++,0,f);i(h-1)&&i(h)&&n.splice(h,0,o)}function ae(n,t,r,e="lowp"){G(n,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:e},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function se(n,t,r,e,a="lowp"){G(n,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:e.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:a},{type:"whitespace",data:" "},{type:"keyword",data:r},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function le(n,t){let r,e,a=-1;for(let o=t;o<n.length;o++){const i=n[o];if("operator"===i.type&&("["===i.data&&(r=o),"]"===i.data)){e=o;break}"integer"===i.type&&(a=parseInt(i.data,10))}return r&&e&&n.splice(r,e-r+1),a}function X(n,t){if(n.startsWith("#version 300"))return n;const r=function ce(n){return E.enableCache?z.get(n):null}(n);if(null!=r)return r;const e=re(n);if("300 es"===function ie(n,t="100",r="300 es"){const e=/^\s*\#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/;for(const a of n)if("preprocessor"===a.type){const o=e.exec(a.data);if(o){const i=o[1].replaceAll(/\s\s+/g," ");if(i===r)return i;if(i===t)return a.data="#version "+r,t;throw new Error("unknown glsl version: "+i)}}return n.splice(0,0,{type:"preprocessor",data:"#version "+r},{type:"whitespace",data:"\n"}),null}(e,"100","300 es"))return n;let a=null,o=null;const i={},h={};for(let f=0;f<e.length;++f){const s=e[f];switch(s.type){case"keyword":t===c.Ho.VERTEX_SHADER&&"attribute"===s.data?s.data="in":"varying"===s.data&&(s.data=t===c.Ho.VERTEX_SHADER?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(s.data.trim())&&(s.data=s.data.replaceAll(/(2D|Cube|EXT)/g,"")),t===c.Ho.FRAGMENT_SHADER&&"gl_FragColor"===s.data&&(a||(a=k(e,i,"fragColor"),ae(e,a,"vec4")),s.data=a),t===c.Ho.FRAGMENT_SHADER&&"gl_FragData"===s.data){const _=le(e,f+1),p=k(e,i,"fragData");se(e,p,"vec4",_,"mediump"),s.data=p}else t===c.Ho.FRAGMENT_SHADER&&"gl_FragDepthEXT"===s.data&&(o||(o=k(e,i,"gl_FragDepth")),s.data=o);break;case"ident":if(b.includes(s.data)){if(t===c.Ho.VERTEX_SHADER&&oe(e,f))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");s.data in h||(h[s.data]=k(e,i,s.data)),s.data=h[s.data]}}}for(let f=e.length-1;f>=0;--f){const s=e[f];if("preprocessor"===s.type){const _=s.data.match(/\#extension\s+(.*)\:/);if(_&&_[1]&&V.has(_[1].trim())){const T=e[f+1];e.splice(f,T&&"whitespace"===T.type?2:1)}const p=s.data.match(/\#ifdef\s+(.*)/);p&&p[1]&&V.has(p[1].trim())&&(s.data="#if 1");const S=s.data.match(/\#ifndef\s+(.*)/);S&&S[1]&&V.has(S[1].trim())&&(s.data="#if 0")}}return function fe(n,t){return E.enableCache&&z.set(n,t),t}(n,function ne(n){return n.map(t=>"eof"!==t.type?t.data:"").join("")}(e))}const z=new Map;class he{constructor(t,r,e,a,o=new Map){this._context=t,this._locations=a,this._uniformBlockBindings=o,this._refCount=1,this._compiled=!1,this._linesOfCode=0,this._nameToUniformLocation=new Map,this._nameToUniform1=new Map,this._nameToUniform1v=new Map,this._nameToUniform2=new Map,this._nameToUniform3=new Map,this._nameToUniform4=new Map,this._nameToUniformMatrix3=new Map,this._nameToUniformMatrix4=new Map,t||console.error("RenderingContext isn't initialized!"),0===r.length&&console.error("Shaders source should not be empty!"),this._context.type===y.zO.WEBGL2&&(r=X(r,c.Ho.VERTEX_SHADER),e=X(e,c.Ho.FRAGMENT_SHADER)),this._vShader=W(this._context,c.Ho.VERTEX_SHADER,r),this._fShader=W(this._context,c.Ho.FRAGMENT_SHADER,e),ge.enabled&&(this._linesOfCode=r.match(/\n/g).length+e.match(/\n/g).length+2,this._context.instanceCounter.increment(c._g.LinesOfCode,this._vShader,this._linesOfCode)),this._vShader&&this._fShader||console.error("Error loading shaders!"),this._context.instanceCounter.increment(c._g.Shader,this),(0,d.CG)()&&(this.vertexShader=r,this.fragmentShader=e);const i=this._context.gl,h=i.createProgram();if(i.attachShader(h,this._vShader),i.attachShader(h,this._fShader),this._locations.forEach((f,s)=>i.bindAttribLocation(h,f,s)),i.linkProgram(h),(0,d.CG)()&&!i.getProgramParameter(h,i.LINK_STATUS)&&console.error(`Could not link shader\nvalidated: ${i.getProgramParameter(h,i.VALIDATE_STATUS)}, gl error ${i.getError()}, vertex: ${i.getShaderParameter(this._vShader,i.COMPILE_STATUS)}, fragment: ${i.getShaderParameter(this._fShader,i.COMPILE_STATUS)}, info log: ${i.getProgramInfoLog(h)}, vertex source: ${this.vertexShader}, fragment source: ${this.fragmentShader}`),this._context.type===y.zO.WEBGL2){const f=i;for(const[s,_]of this._uniformBlockBindings){const p=f.getUniformBlockIndex(h,s);p<4294967295&&f.uniformBlockBinding(h,p,_)}}this._glName=h,this._context.instanceCounter.increment(c._g.Program,this)}get glName(){return this._glName}get hasGLName(){return null!=this._glName}get compiled(){if(this._compiled)return!0;const t=this._context.gl.getExtension("KHR_parallel_shader_compile");return null==t||null==this.glName?(this._compiled=!0,!0):(this._compiled=!!this._context.gl.getProgramParameter(this.glName,t.COMPLETION_STATUS_KHR),this._compiled)}dispose(){if(--this._refCount>0)return;const t=this._context.gl,r=this._context.instanceCounter;this._nameToUniformLocation.forEach(e=>e&&r.decrement(c._g.Uniform,e)),this._nameToUniformLocation.clear(),this._vShader&&(this._linesOfCode>0&&(r.decrement(c._g.LinesOfCode,this._vShader,this._linesOfCode),this._linesOfCode=0),t.deleteShader(this._vShader),this._vShader=null,r.decrement(c._g.Shader,this)),this._fShader&&(t.deleteShader(this._fShader),this._fShader=null),this._glName&&(t.deleteProgram(this._glName),this._glName=null,r.decrement(c._g.Program,this))}ref(){++this._refCount}_getUniformLocation(t){const r=this._nameToUniformLocation.get(t);if(void 0!==r)return r;if(this.glName){const e=this._context.gl.getUniformLocation(this.glName,t);return this._nameToUniformLocation.set(t,e),e&&this._context.instanceCounter.increment(c._g.Uniform,e),e}return null}hasUniform(t){return null!=this._getUniformLocation(t)}setUniform1i(t,r){const e=this._nameToUniform1.get(t);void 0!==e&&r===e||(this._context.gl.uniform1i(this._getUniformLocation(t),r),this._nameToUniform1.set(t,r))}setUniform1iv(t,r){P(this._nameToUniform1v,t,r)&&this._context.gl.uniform1iv(this._getUniformLocation(t),r)}setUniform2iv(t,r){P(this._nameToUniform2,t,r)&&this._context.gl.uniform2iv(this._getUniformLocation(t),r)}setUniform3iv(t,r){P(this._nameToUniform3,t,r)&&this._context.gl.uniform3iv(this._getUniformLocation(t),r)}setUniform4iv(t,r){P(this._nameToUniform4,t,r)&&this._context.gl.uniform4iv(this._getUniformLocation(t),r)}setUniform1f(t,r){const e=this._nameToUniform1.get(t);void 0!==e&&r===e||(this._context.gl.uniform1f(this._getUniformLocation(t),r),this._nameToUniform1.set(t,r))}setUniform1fv(t,r){P(this._nameToUniform1v,t,r)&&this._context.gl.uniform1fv(this._getUniformLocation(t),r)}setUniform2f(t,r,e){const a=this._nameToUniform2.get(t);void 0===a?(this._context.gl.uniform2f(this._getUniformLocation(t),r,e),this._nameToUniform2.set(t,[r,e])):r===a[0]&&e===a[1]||(this._context.gl.uniform2f(this._getUniformLocation(t),r,e),a[0]=r,a[1]=e)}setUniform2fv(t,r){P(this._nameToUniform2,t,r)&&this._context.gl.uniform2fv(this._getUniformLocation(t),r)}setUniform3f(t,r,e,a){const o=this._nameToUniform3.get(t);void 0===o?(this._context.gl.uniform3f(this._getUniformLocation(t),r,e,a),this._nameToUniform3.set(t,[r,e,a])):r===o[0]&&e===o[1]&&a===o[2]||(this._context.gl.uniform3f(this._getUniformLocation(t),r,e,a),o[0]=r,o[1]=e,o[2]=a)}setUniform3fv(t,r){P(this._nameToUniform3,t,r)&&this._context.gl.uniform3fv(this._getUniformLocation(t),r)}setUniform4f(t,r,e,a,o){const i=this._nameToUniform4.get(t);void 0===i?(this._context.gl.uniform4f(this._getUniformLocation(t),r,e,a,o),this._nameToUniform4.set(t,[r,e,a,o])):void 0!==i&&r===i[0]&&e===i[1]&&a===i[2]&&o===i[3]||(this._context.gl.uniform4f(this._getUniformLocation(t),r,e,a,o),i[0]=r,i[1]=e,i[2]=a,i[3]=o)}setUniform4fv(t,r){P(this._nameToUniform4,t,r)&&this._context.gl.uniform4fv(this._getUniformLocation(t),r)}setUniformMatrix3fv(t,r,e=!1){P(this._nameToUniformMatrix3,t,r)&&this._context.gl.uniformMatrix3fv(this._getUniformLocation(t),e,r)}setUniformMatrix4fv(t,r,e=!1){P(this._nameToUniformMatrix4,t,r)&&this._context.gl.uniformMatrix4fv(this._getUniformLocation(t),e,r)}stop(){}}function W(n,t,r){const e=n.gl,a=e.createShader(t);return e.shaderSource(a,r),e.compileShader(a),(0,d.CG)()&&!e.getShaderParameter(a,e.COMPILE_STATUS)&&(console.error("Compile error in ".concat(t===c.Ho.VERTEX_SHADER?"vertex":"fragment"," shader")),console.error(e.getShaderInfoLog(a)),console.error(function _e(n){let t=2;return n.replaceAll("\n",()=>"\n"+function de(n){return n>=1e3?n.toString():("  "+n).slice(-3)}(t++)+":")}(r))),a}function P(n,t,r){const e=n.get(t);return e?(0,D.Vx)(e,r):(n.set(t,Array.from(r)),!0)}const ge={enabled:!1}},94299:(B,C,g)=>{g.d(C,{H:()=>L});var D=g(21285);function L(d,y,c=""){return new D.$(d,c+y.shaders.vertexShader,c+y.shaders.fragmentShader,y.attributes)}},7423:(B,C,g)=>{g.d(C,{B:()=>D});class D{constructor(d){this._readFile=d}resolveIncludes(d){return this._resolve(d)}_resolve(d,y=new Map){if(y.has(d))return y.get(d);const c=this._read(d);if(!c)throw new Error(`cannot find shader file ${d}`);const b=/^[^\S\n]*#include\s+<(\S+)>[^\S\n]?/gm;let E=b.exec(c);const l=[];for(;null!=E;)l.push({path:E[1],start:E.index,length:E[0].length}),E=b.exec(c);let u=0,x="";return l.forEach(m=>{x+=c.slice(u,m.start),x+=y.has(m.path)?"":this._resolve(m.path,y),u=m.start+m.length}),x+=c.slice(u),y.set(d,x),x}_read(d){return this._readFile(d)}}},49353:(B,C,g)=>{g.d(C,{U:()=>E});var D=g(63290),L=g(62208),d=g(55713),y=g(67969),c=g(26906);const b=D.Z.getLogger("esri.views.webgl.VertexArrayObject");let E=class{constructor(l,u,x,m,U=null){this._context=l,this._locations=u,this._layout=x,this._buffers=m,this._indexBuffer=U,this._glName=null,this._initialized=!1}get glName(){return this._glName}get context(){return this._context}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}get byteSize(){return Object.keys(this._buffers).reduce((l,u)=>l+this._buffers[u].byteLength,null!=this._indexBuffer?this._indexBuffer.byteLength:0)}get layout(){return this._layout}get locations(){return this._locations}get usedMemory(){return this.byteSize+(Object.keys(this._buffers).length+(this._indexBuffer?1:0))*d.ru}dispose(){if(this._context){this._context.getBoundVAO()===this&&this._context.bindVAO(null);for(const l in this._buffers)this._buffers[l]?.dispose(),delete this._buffers[l];this._indexBuffer=(0,L.M2)(this._indexBuffer),this.disposeVAOOnly()}else(this._glName||Object.getOwnPropertyNames(this._buffers).length>0)&&b.warn("Leaked WebGL VAO")}disposeVAOOnly(){this._glName&&(this._context?.capabilities?.vao.deleteVertexArray(this._glName),this._glName=null,this._context.instanceCounter.decrement(y._g.VertexArrayObject,this)),this._context=null}initialize(){if(this._initialized)return;const l=this._context.capabilities.vao;if(l){const u=l.createVertexArray();l.bindVertexArray(u),this._bindLayout(),l.bindVertexArray(null),this._glName=u,this._context.instanceCounter.increment(y._g.VertexArrayObject,this)}this._initialized=!0}bind(){this.initialize();const l=this._context.capabilities.vao;l?l.bindVertexArray(this.glName):(this._context.bindVAO(null),this._bindLayout())}_bindLayout(){const{_buffers:l,_layout:u,_indexBuffer:x}=this;l||b.error("Vertex buffer dictionary is empty!");const m=this._context.gl;for(const U in l){const A=l[U];A||b.error("Vertex buffer is uninitialized!");const O=u[U];O||b.error("Vertex element descriptor is empty!"),(0,c.XP)(this._context,this._locations,A,O)}null!=x&&(this._context.capabilities.vao?m.bindBuffer(m.ELEMENT_ARRAY_BUFFER,x.glName):this._context.bindBuffer(x))}unbind(){this.initialize();const l=this._context.capabilities.vao;l?l.bindVertexArray(null):this._unbindLayout()}_unbindLayout(){const{_buffers:l,_layout:u}=this;l||b.error("Vertex buffer dictionary is empty!");for(const x in l){const m=l[x];m||b.error("Vertex buffer is uninitialized!"),(0,c.UF)(this._context,this._locations,m,u[x])}null!=this._indexBuffer&&this._context.unbindBuffer(this._indexBuffer.bufferType)}}}}]);