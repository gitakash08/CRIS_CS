"use strict";(self.webpackChunkCRIS=self.webpackChunkCRIS||[]).push([[2328,7010],{62328:(qe,ue,p)=>{p.r(ue),p.d(ue,{default:()=>si});var m=p(15861),s=p(17626),z=p(73281),pe=p(79608),C=p(26584),we=p(99959),P=p(10699),l=p(77712),O=p(90912),g=(p(85931),p(8314),p(76898)),D=p(99433),M=p(44917),N=p(29132),me=p(88879),de=p(90885),F=p(84792),te=p(55538),W=p(58817),x=p(63290),ke=p(32917),$=p(21726),U=p(68653),et=p(37053),_e=p(13812),Bt=p(25982),K=p(86810),I=p(85436),Ht=p(67313);const Qt={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var Fe=p(70208),Wt=p(65468),$t=p(68598);const Kt=new Set(["u1","u2","u4","u8","s8","u16","s16"]),Xt={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},Yt=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function Tt(n){return Yt.has(n.type)}function tt(n,r){if(!n||!r)return(0,W.d9)(n||r);const o=(0,W.d9)(n);if(o.functionDefinition&&r.rasterFunctionDefinition){const e=r.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),jt(o.functionDefinition.arguments,r),o.rasterFunctionDefinition=o.functionDefinition.toJSON()}else"none"!==r.functionName?.toLowerCase()&&(Ot(o.functionArguments).Raster=r);return o}function jt(n,r){for(const o in n)"raster"===o.toLowerCase()&&("RasterFunctionVariable"===n[o].type?(n[o]=r.rasterFunctionDefinition,n[o].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===n[o].type&&jt(n[o].arguments,r))}function se(n){const r=(0,W.d9)(Qt[n.functionName+"Function"]),o=n.functionArguments;for(const e in o)"raster"===e.toLowerCase()?(r.arguments[e]=se(o[e]),r.arguments[e].type="RasterFunctionTemplate"):"colormap"===e.toLowerCase()?(r.arguments[e].value=or(o[e]),r.arguments.ColorSchemeType.value=0):r.arguments[e].value=o[e];return r}function Ot(n){const r=n?.Raster??n?.raster;return r&&"esri.layers.support.RasterFunction"===r.declaredClass?Ot(r.functionArguments):n}const Ne={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function Ee(n,r){const o=Kt.has(r)?(0,Ht.r)(r):null;return o&&n.push([Math.floor(o[0]-1),0,0,0],[Math.ceil(o[1]+1),0,0,0]),n}function Nt(n){if(null==n)return;const{fields:r}=n;return r?.find(e=>e?.name&&"value"===e.name.toLowerCase())?.name}function sr(n){const r=[];return n?.forEach(o=>{const e=o;if(Array.isArray(e))r.push(e);else{if(null==e.min||null==e.max)return;r.push([e.min,e.max,e.avg||0,e.stddev||0])}}),r}function or(n){const r=[],o=[];return n.forEach(e=>{r.push(e[0]),o.push((0,Fe.oI)([...e.slice(1),255]))}),{type:"RasterColormap",values:r,colors:o}}var q=p(20145),B=p(2939);let _=class extends K.wq{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(n,r,o){this.layer.version<10.3||(r[o]=n)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(n,r,o){this.format&&this.format.toLowerCase().includes("jpg")&&null!=n&&(r[o]=n)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(n,r,o){"lerc"===this.format&&null!=n&&(r[o]=n)}get format(){return"vector-field"===this.layer.renderer?.type?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}writeLercVersion(n,r,o){"lerc"===this.format&&this.layer.version>=10.5&&(r[o]=n)}get version(){const n=this.layer;return n.commitProperty("bandIds"),n.commitProperty("format"),n.commitProperty("compressionQuality"),n.commitProperty("compressionTolerance"),n.commitProperty("interpolation"),n.commitProperty("noData"),n.commitProperty("noDataInterpretation"),n.commitProperty("mosaicRule"),n.commitProperty("rasterFunction"),n.commitProperty("adjustAspectRatio"),n.commitProperty("pixelFilter"),n.commitProperty("definitionExpression"),n.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(n){this._set("version",n)}get mosaicRule(){const n=this.layer;let r=n.mosaicRule;const o=n.definitionExpression;return r?o&&o!==r.where&&(r=r.clone(),r.where=o):o&&(r=new q.Z({where:o})),r}get rasterFunction(){const n=this.layer;let{rasterFunction:r}=n;const o=n.pixelFilter,e=!n.format||n.format.includes("jpg")||n.format.includes("png");r=this._addResampleRasterFunction(r);const t=n.multidimensionalSubset?.areaOfInterest;return t&&(r=this._addClipFunction(r,t)),e&&!o&&"vector-field"!==n.renderer?.type&&(r=this.combineRendererWithRenderingRule(r)),r}combineRendererWithRenderingRule(n){const r=this.layer,{rasterInfo:o,renderer:e}=r;return n=n||r.rasterFunction,e&&Tt(e)?tt(function qt(n,r){switch(r=r||{},n.type){case"raster-stretch":return function tr(n,r){const o=r.convertToRFT,e=new I.Z;e.functionName="Stretch";const t=Ne[Wt.v.toJSON(n.stretchType)],i="u8",a={StretchType:t,Statistics:sr(n.statistics??[]),DRA:n.dynamicRangeAdjustment,UseGamma:n.useGamma,Gamma:n.gamma,ComputeGamma:n.computeGamma};if(null!=n.outputMin&&(a.Min=n.outputMin),null!=n.outputMax&&(a.Max=n.outputMax),t===Ne.standardDeviation?(a.NumberOfStandardDeviations=n.numberOfStandardDeviations,e.outputPixelType=i):t===Ne.percentClip?(a.MinPercent=n.minPercent,a.MaxPercent=n.maxPercent,e.outputPixelType=i):t===Ne.minMax?e.outputPixelType=i:t===Ne.sigmoid&&(a.SigmoidStrengthLevel=n.sigmoidStrengthLevel),e.functionArguments=a,e.variableName="Raster",n.colorRamp){const u=n.colorRamp,c=new I.Z;if(o)c.functionArguments={ColorRamp:(0,Fe.pM)(u)};else{const y=(0,Fe.Uh)(u,!0);if(y)c.functionArguments={colorRampName:y};else if(!r.convertColorRampToColormap||"algorithmic"!==u.type&&"multipart"!==u.type){const d=n.colorRamp.toJSON();"algorithmic"===d.type?d.algorithm=d.algorithm||"esriCIELabAlgorithm":"multipart"===d.type&&d.colorRamps?.length&&d.colorRamps.forEach(h=>h.algorithm=h.algorithm||"esriCIELabAlgorithm"),c.functionArguments={colorRamp:d}}else c.functionArguments={Colormap:(0,Fe.Jw)(u)}}return c.variableName="Raster",c.functionName="Colormap",c.functionArguments.Raster=e,o?new I.Z({rasterFunctionDefinition:se(c)}):c}return o?new I.Z({rasterFunctionDefinition:se(e)}):e}(n,r);case"class-breaks":return function rr(n,r){const o=[],e=[],t=[],i=[],{pixelType:u,rasterAttributeTable:c}=r,y=null==c?null:c.features,d=Nt(c);if(d&&y&&Array.isArray(y)&&n.classBreakInfos){n.classBreakInfos.forEach((f,w)=>{const E=f.symbol?.color;let Z;E?.a&&null!=f.minValue&&null!=f.maxValue&&y.forEach(J=>{null!=f.minValue&&null!=f.maxValue&&(Z=J.attributes[n.field],(Z>=f.minValue&&Z<f.maxValue||w===n.classBreakInfos.length-1&&Z>=f.minValue)&&i.push([J.attributes[d],E.r,E.g,E.b]))})});const S=u?Ee(i,u):i,R=new I.Z;return R.functionName="Colormap",R.functionArguments={},R.functionArguments.Colormap=S,R.variableName="Raster",r.convertToRFT?new I.Z({rasterFunctionDefinition:se(R)}):R}n.classBreakInfos.forEach((S,R)=>{if(null==S.minValue||null==S.maxValue)return;const f=S.symbol&&S.symbol.color;f?.a?(o.push(0===R?S.minValue:S.minValue+1e-4,S.maxValue+1e-4),e.push(R),i.push([R,f.r,f.g,f.b])):t.push(S.minValue,S.maxValue)});const h=u?Ee(i,u):i,b=new I.Z;b.functionName="Remap",b.functionArguments={InputRanges:o,OutputValues:e,NoDataRanges:t},b.variableName="Raster";const v=new I.Z;return v.functionName="Colormap",v.functionArguments={Colormap:h,Raster:b},r.convertToRFT?new I.Z({rasterFunctionDefinition:se(v)}):v}(n,r);case"unique-value":return function ir(n,r){const o=[],{pixelType:e,rasterAttributeTable:t}=r,i=null==t?null:t.features,a=Nt(t),u=n.defaultSymbol?.color?.toRgb(),c=n.uniqueValueInfos;if(c)if(i){if(a){const h=new Map;c.forEach(v=>{const S=v.value,R=v.symbol?.color;null!=S&&R?.a&&h.set(String(S),R.toRgb())});const b=n.field;i.forEach(({attributes:v})=>{const S=String(v[b]),R=v[a],f=h.get(S);f?o.push([R,...f]):u&&o.push([R,...u])})}}else for(let h=0;h<c.length;h++){const b=c[h],v=b.symbol?.color,S=+b.value;if(v?.a){if(isNaN(S))return null;o.push([S,v.r,v.g,v.b])}}const y=e?Ee(o,e):o,d=new I.Z;return d.functionName="Colormap",d.functionArguments={},d.functionArguments.Colormap=y,d.variableName="Raster",r.convertToRFT?new I.Z({rasterFunctionDefinition:se(d)}):d}(n,r);case"raster-colormap":return function nr(n,r){const o=n.extractColormap();if(!o||0===o.length)return null;const{pixelType:e}=r,t=e?Ee(o,e):o,i=new I.Z;return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=t,r.convertToRFT?new I.Z({rasterFunctionDefinition:se(i)}):i}(n,r);case"vector-field":return function kt(n,r){const o=new I.Z;o.functionName="VectorFieldRenderer";const{dataType:e,bandNames:t}=r,i="vector-uv"===e;let a,u;if(t&&2===t.length){const v=t.map(S=>S.toLowerCase());a=v.indexOf("magnitude"),u=v.indexOf("direction")}-1!==a&&null!==a||(a=0,u=1);const c="arithmetic"===n.rotationType?1:2,y="flow-from"===n.flowRepresentation?0:1,d=n.visualVariables?n.visualVariables.find(v=>"Magnitude"===v.field):new $t.Z,h={magnitudeBandID:a,directionBandID:u,isUVComponents:i,referenceSystem:c,massFlowAngleRepresentation:y,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:Xt[n.style.toLowerCase().replace("-","_")],minimumMagnitude:d.minDataValue,maximumMagnitude:d.maxDataValue,minimumSymbolSize:d.minSize,maximumSymbolSize:d.maxSize};o.functionArguments=h;const b=se(o);return r.convertToRFT?I.Z.fromJSON({rasterFunctionDefinition:b}):o}(n,r);case"raster-shaded-relief":return function er(n,r){const o=r.convertToRFT;if("elevation"!==r.dataType&&("generic"!==r.dataType||1!==r.bandCount||"s16"!==r.pixelType&&"s32"!==r.pixelType&&"f32"!==r.pixelType&&"f64"!==r.pixelType))return new I.Z;const e=new I.Z;e.functionName="Hillshade";const t="traditional"===n.hillshadeType?0:1,i="none"===n.scalingType?1:3,a={HillshadeType:t,SlopeType:i,ZFactor:n.zFactor};return 0===t&&(a.Azimuth=n.azimuth,a.Altitude=n.altitude),3===i&&(a.PSPower=n.pixelSizePower,a.PSZFactor=n.pixelSizeFactor),e.functionArguments=a,e.variableName="Raster",n.colorRamp&&(e.functionName="ShadedRelief",o?a.ColorRamp=(0,Fe.pM)(n.colorRamp):a.Colormap=(0,Fe.Jw)(n.colorRamp)),o?new I.Z({rasterFunctionDefinition:se(e)}):e}(n,r);case"flow":throw new Error("Unsupported rendering rule.")}}(e,{rasterAttributeTable:o.attributeTable,pixelType:o.pixelType,dataType:o.dataType,bandNames:o.bandInfos.map(({name:t})=>t),convertColorRampToColormap:r.version<10.6,convertToRFT:!!n?.rasterFunctionDefinition,bandCount:o.bandCount}),n):n}_addResampleRasterFunction(n){if("vector-field"!==this.layer.renderer?.type||"Resample"===n?.functionName)return n;let e=new I.Z({functionName:"Resample",functionArguments:{ResamplingType:"esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,InputCellSize:this.layer.serviceRasterInfo.pixelSize}});return e=n?.rasterFunctionDefinition?new I.Z({rasterFunctionDefinition:se(e)}):e,tt(e,n)}_addClipFunction(n,r){return tt(new I.Z({functionName:"Clip",functionArguments:{ClippingGeometry:r.toJSON(),ClippingType:1}}),n)}};(0,s._)([(0,l.Cb)()],_.prototype,"layer",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],_.prototype,"adjustAspectRatio",null),(0,s._)([(0,D.c)("adjustAspectRatio")],_.prototype,"writeAdjustAspectRatio",null),(0,s._)([(0,l.Cb)({json:{write:!0}})],_.prototype,"bandIds",null),(0,s._)([(0,l.Cb)({json:{write:!0}})],_.prototype,"compression",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],_.prototype,"compressionQuality",null),(0,s._)([(0,D.c)("compressionQuality")],_.prototype,"writeCompressionQuality",null),(0,s._)([(0,l.Cb)({json:{write:!0}})],_.prototype,"compressionTolerance",null),(0,s._)([(0,D.c)("compressionTolerance")],_.prototype,"writeCompressionTolerance",null),(0,s._)([(0,l.Cb)({json:{write:!0}})],_.prototype,"format",null),(0,s._)([(0,l.Cb)({type:String,json:{read:{reader:B.cl.read},write:{writer:B.cl.write}}})],_.prototype,"interpolation",null),(0,s._)([(0,l.Cb)({json:{write:!0}})],_.prototype,"noData",null),(0,s._)([(0,l.Cb)({type:String,json:{read:{reader:B.kQ.read},write:{writer:B.kQ.write}}})],_.prototype,"noDataInterpretation",null),(0,s._)([(0,l.Cb)({json:{write:!0}})],_.prototype,"pixelType",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],_.prototype,"lercVersion",void 0),(0,s._)([(0,D.c)("lercVersion")],_.prototype,"writeLercVersion",null),(0,s._)([(0,l.Cb)({type:Number})],_.prototype,"version",null),(0,s._)([(0,l.Cb)({json:{write:!0}})],_.prototype,"mosaicRule",null),(0,s._)([(0,l.Cb)({json:{write:!0,name:"renderingRule"}})],_.prototype,"rasterFunction",null),_=(0,s._)([(0,g.j)("esri.layers.mixins.ExportImageServiceParameters")],_);var Se=p(36255),ar=p(60466),At=p(12585),lr=p(11354),rt=p(85073),Zt=p(84727),ur=p(9548),Ae=p(79781),it=p(8614),pr=p(30994),Je=p(8341),cr=p(99033),Le=p(93555),V=p(2618),Ce=p(65234);let Pe=class extends K.wq{constructor(n){super(n),this.north=null,this.up=null,this.spatialReference=null}};(0,s._)([(0,l.Cb)({type:Number,json:{write:!0}})],Pe.prototype,"north",void 0),(0,s._)([(0,l.Cb)({type:Number,json:{write:!0}})],Pe.prototype,"up",void 0),(0,s._)([(0,l.Cb)({type:Ce.Z,json:{write:!0}})],Pe.prototype,"spatialReference",void 0),Pe=(0,s._)([(0,g.j)("esri.rest.support.ImageAngleResult")],Pe);const mr=Pe;var H=p(16730);let ve=class extends K.wq{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};(0,s._)([(0,l.Cb)({type:Number,json:{read:!0,write:!0}})],ve.prototype,"value",void 0),(0,s._)([(0,l.Cb)({type:String,json:{read:!0,write:!0}})],ve.prototype,"displayValue",void 0),(0,s._)([(0,l.Cb)({type:Number,json:{read:!0,write:!0}})],ve.prototype,"uncertainty",void 0),ve=(0,s._)([(0,g.j)("esri.rest.support.ImageMeasureResultValue")],ve);let De=class extends ve{constructor(){super(...arguments),this.unit=null}};(0,s._)([(0,l.Cb)({type:String,json:{read:H.Jo.read,write:H.Jo.write}})],De.prototype,"unit",void 0),De=(0,s._)([(0,g.j)("esri.rest.support.ImageMeasureResultLengthValue")],De);let Ue=class extends ve{constructor(){super(...arguments),this.unit=null}};(0,s._)([(0,l.Cb)({type:String,json:{read:H.gV.read,write:H.gV.write}})],Ue.prototype,"unit",void 0),Ue=(0,s._)([(0,g.j)("esri.rest.support.ImageMeasureResultAreaValue")],Ue);let Ze=class extends ve{constructor(){super(...arguments),this.unit=null}};(0,s._)([(0,l.Cb)({type:String,json:{read:H.CN.read,write:H.CN.write}})],Ze.prototype,"unit",void 0),Ze=(0,s._)([(0,g.j)("esri.rest.support.ImageMeasureResultAngleValue")],Ze);let be=class extends K.wq{constructor(){super(...arguments),this.name=null,this.sensorName=null}};(0,s._)([(0,l.Cb)({type:String,json:{read:!0,write:!0}})],be.prototype,"name",void 0),(0,s._)([(0,l.Cb)({type:String,json:{read:!0,write:!0}})],be.prototype,"sensorName",void 0),be=(0,s._)([(0,g.j)("esri.rest.support.BaseImageMeasureResult")],be);let Me=class extends be{constructor(){super(...arguments),this.area=null,this.perimeter=null}};(0,s._)([(0,l.Cb)({type:Ue,json:{read:!0,write:!0}})],Me.prototype,"area",void 0),(0,s._)([(0,l.Cb)({type:De,json:{read:!0,write:!0}})],Me.prototype,"perimeter",void 0),Me=(0,s._)([(0,g.j)("esri.rest.support.ImageAreaResult")],Me);const dr=Me;let Te=class extends be{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};(0,s._)([(0,l.Cb)({type:De,json:{read:!0,write:!0}})],Te.prototype,"distance",void 0),(0,s._)([(0,l.Cb)({type:Ze,json:{read:!0,write:!0}})],Te.prototype,"azimuthAngle",void 0),(0,s._)([(0,l.Cb)({type:Ze,json:{read:!0,write:!0}})],Te.prototype,"elevationAngle",void 0),Te=(0,s._)([(0,g.j)("esri.rest.support.ImageDistanceResult")],Te);const yr=Te;let ze=class extends be{constructor(){super(...arguments),this.height=null}};(0,s._)([(0,l.Cb)({type:De,json:{read:!0,write:!0}})],ze.prototype,"height",void 0),ze=(0,s._)([(0,g.j)("esri.rest.support.ImageHeightResult")],ze);const hr=ze;var X=p(72642),Mt=p(17253);let re=class extends K.wq{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,s._)([(0,l.Cb)({json:{write:!0}})],re.prototype,"catalogItemVisibilities",void 0),(0,s._)([(0,l.Cb)({type:Mt.Z,json:{write:!0}})],re.prototype,"catalogItems",void 0),(0,s._)([(0,l.Cb)({type:X.Z,json:{write:!0}})],re.prototype,"location",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],re.prototype,"name",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],re.prototype,"objectId",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],re.prototype,"processedValues",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],re.prototype,"properties",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],re.prototype,"value",void 0),re=(0,s._)([(0,g.j)("esri.rest.support.ImageIdentifyResult")],re);const gr=re;let Ge=class extends K.wq{constructor(){super(...arguments),this.geometries=null}};(0,s._)([(0,l.Cb)({json:{write:!0}})],Ge.prototype,"geometries",void 0),Ge=(0,s._)([(0,g.j)("esri.rest.support.ImagePixelLocationResult")],Ge);const fr=Ge;let Be=class extends be{constructor(){super(...arguments),this.point=null}};(0,s._)([(0,l.Cb)({type:X.Z,json:{name:"point.value",read:!0,write:!0}})],Be.prototype,"point",void 0),Be=(0,s._)([(0,g.j)("esri.rest.support.ImagePointResult")],Be);const vr=Be;let ye=class extends K.wq{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};(0,s._)([(0,l.Cb)({json:{write:!0}})],ye.prototype,"attributes",void 0),(0,s._)([(0,l.Cb)({type:X.Z,json:{write:!0}})],ye.prototype,"location",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],ye.prototype,"locationId",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],ye.prototype,"rasterId",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],ye.prototype,"resolution",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],ye.prototype,"pixelValue",void 0),ye=(0,s._)([(0,g.j)("esri.rest.support.ImageSample")],ye);const br=ye;let He=class extends K.wq{constructor(){super(...arguments),this.samples=null}};(0,s._)([(0,l.Cb)({type:[br],json:{write:!0}})],He.prototype,"samples",void 0),He=(0,s._)([(0,g.j)("esri.rest.support.ImageSampleResult")],He);const Rr=He;function Vt(n){const r=n?.time;if(r&&(null!=r.start||null!=r.end)){const o=[];null!=r.start&&o.push(r.start),null==r.end||o.includes(r.end)||o.push(r.end),n.time=o.join(",")}}function _t(n,r,o){return nt.apply(this,arguments)}function nt(){return(nt=(0,m.Z)(function*(n,r,o){const e=(0,V.en)(n),t=r.geometry?[r.geometry]:[],i=yield(0,Le.aX)(t),a=r.toJSON();Vt(a);const u=i?.[0];null!=u&&(a.geometry=u.toJSON());const c=(0,V.cv)({...e.query,f:"json",...a});return(0,V.lA)(c,o)})).apply(this,arguments)}function st(){return(st=(0,m.Z)(function*(n,r,o){const e=r.toJSON();null!=e.angleName&&(e.angleName=e.angleName.join(",")),r?.point?.spatialReference?.imageCoordinateSystem&&(e.point.spatialReference=We(r.point.spatialReference)),r?.spatialReference?.imageCoordinateSystem&&(e.spatialReference=Lt(r.spatialReference));const t=(0,V.en)(n),i=(0,V.cv)({...t.query,f:"json",...e}),a=(0,V.lA)(i,o),{data:u}=yield(0,F.Z)(`${t.path}/computeAngles`,a);return u.spatialReference=u.spatialReference?null!=u.spatialReference.geodataXform?new Ce.Z({wkid:0,imageCoordinateSystem:u.spatialReference}):Ce.Z.fromJSON(u.spatialReference):null,"NaN"===u.north&&(u.north=null),"NaN"===u.up&&(u.up=null),new mr(u)})).apply(this,arguments)}function ot(){return(ot=(0,m.Z)(function*(n,r,o){const e=r.toJSON(),{geometries:t}=r;if(t)for(let y=0;y<t.length;y++)t[y].spatialReference?.imageCoordinateSystem&&(e.geometries.geometries[y].spatialReference=We(t[y].spatialReference));const i=(0,V.en)(n),a=(0,V.cv)({...i.query,f:"json",...e}),u=(0,V.lA)(a,o),{data:c}=yield(0,F.Z)(`${i.path}/computePixelLocation`,u);return fr.fromJSON(c)})).apply(this,arguments)}function at(){return(at=(0,m.Z)(function*(n,r,o){const e=yield _t(n,r,o),t=(0,V.en)(n),{data:i}=yield(0,F.Z)(`${t.path}/computeStatisticsHistograms`,e),{statistics:a}=i;return a?.length&&a.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:a,histograms:i.histograms}})).apply(this,arguments)}function lt(){return(lt=(0,m.Z)(function*(n,r,o){const e=yield _t(n,r,o),t=(0,V.en)(n),{data:i}=yield(0,F.Z)(`${t.path}/computeHistograms`,e);return{histograms:i.histograms}})).apply(this,arguments)}function ut(){return(ut=(0,m.Z)(function*(n,r,o){const e=r.toJSON();Vt(e),e.outFields?.length&&(e.outFields=e.outFields.join(","));const i=(yield(0,Le.aX)(r.geometry))?.[0];null!=i&&(e.geometry=i.toJSON());const a=(0,V.en)(n),u=(0,V.cv)({...a.query,f:"json",...e}),c=(0,V.lA)(u,o),{data:y}=yield(0,F.Z)(`${a.path}/getSamples`,c),d=y?.samples?.map(h=>{const b="NaN"===h.value||""===h.value?null:h.value.split(" ").map(v=>Number(v));return{...h,pixelValue:b}});return Rr.fromJSON({samples:d})})).apply(this,arguments)}function Et(n,r,o){return pt.apply(this,arguments)}function pt(){return(pt=(0,m.Z)(function*(n,r,o){const e=(0,V.en)(n);return(0,Le.aX)(r.geometry?[r.geometry]:[]).then(i=>{const a=r.toJSON(),u=i?.[0];null!=u&&(a.geometry=JSON.stringify(u.toJSON()));const c=(0,V.cv)({...e.query,f:"json",...a}),y=(0,V.lA)(c,o);return(0,F.Z)(e.path+"/identify",y)}).then(i=>gr.fromJSON(i.data))})).apply(this,arguments)}function ct(){return(ct=(0,m.Z)(function*(n,r,o){const e=yield Qe(n,r,[r.fromGeometry,r.toGeometry],o);return hr.fromJSON(e)})).apply(this,arguments)}function mt(){return(mt=(0,m.Z)(function*(n,r,o){const e=yield Qe(n,r,[r.geometry],o);return dr.fromJSON(e)})).apply(this,arguments)}function dt(){return(dt=(0,m.Z)(function*(n,r,o){const e=yield Qe(n,r,[r.geometry],o);return vr.fromJSON(e)})).apply(this,arguments)}function yt(){return(yt=(0,m.Z)(function*(n,r,o){const e=yield Qe(n,r,[r.fromGeometry,r.toGeometry],o);return yr.fromJSON(e)})).apply(this,arguments)}function Qe(n,r,o,e){return ht.apply(this,arguments)}function ht(){return(ht=(0,m.Z)(function*(n,r,o,e){const t=(0,V.en)(n),i=yield(0,Le.aX)(o),a=r.toJSON();null!=i[0]&&(a.fromGeometry=JSON.stringify(Jt(i[0]))),null!=i[1]&&(a.toGeometry=JSON.stringify(Jt(i[1])));const u=(0,V.cv)({...t.query,f:"json",...a}),c=(0,V.lA)(u,e),{data:y}=yield(0,F.Z)(t.path+"/measure",c);return y})).apply(this,arguments)}function Jt(n){const r=n.toJSON();return n.spatialReference?.imageCoordinateSystem&&(r.spatialReference=We(n.spatialReference)),r}function We(n){const{imageCoordinateSystem:r}=n;if(r){const{id:o,referenceServiceName:e}=r;return null!=o?e?{icsid:o,icsns:e}:{icsid:o}:{ics:r}}return n.toJSON()}function Lt(n,r){if(!n.imageCoordinateSystem)return(0,et.B9)(n);const o=We(n),{icsid:e,icsns:t}=o;return null==e||null!=t&&!r?.toLowerCase().includes("/"+t.toLowerCase()+"/")?JSON.stringify(o):`0:${e}`}p(15283);var Rt,jr=p(2865),$e=(p(59318),p(24263),p(92383),p(82054),p(2004)),Or=(p(21674),p(72854)),gt=p(37118),ft=(p(55214),p(24192),p(96854)),Nr=(p(87183),p(67736),p(90463)),Ar=p(24865),vt=(p(67010),p(6871),p(99208)),Zr=p(27497);function bt(){return(bt=(0,m.Z)(function*(n,r,o){const e=(0,V.en)(n),t=(0,V.cv)({...e?.query,f:"json"}),i=(0,V.lA)(t,o),a=`${e?.path}/${r}/info`,u=(0,F.Z)(`${a}`,i),c=(0,F.Z)(`${a}/keyProperties`,i),y=yield Promise.allSettled([u,c]),d="fulfilled"===y[0].status?y[0].value.data:null,h="fulfilled"===y[1].status?y[1].value.data:null;let b=null;d.statistics?.length&&(b=d.statistics.map(J=>({min:J[0],max:J[1],avg:J[2],stddev:J[3]})));const v=$e.Z.fromJSON(d.extent),S=Math.ceil(v.width/d.pixelSizeX-.1),R=Math.ceil(v.height/d.pixelSizeY-.1),f=v.spatialReference,w=new X.Z({x:d.pixelSizeX,y:d.pixelSizeY,spatialReference:f}),E=d.histograms?.length?d.histograms:null,Z=new Zr.Z({origin:d.origin,blockWidth:d.blockWidth,blockHeight:d.blockHeight,firstPyramidLevel:d.firstPyramidLevel,maximumPyramidLevel:d.maxPyramidLevel});return new Zt.Z({width:S,height:R,bandCount:d.bandCount,extent:v,spatialReference:f,pixelSize:w,pixelType:d.pixelType.toLowerCase(),statistics:b,histograms:E,keyProperties:h,storageInfo:Z})})).apply(this,arguments)}let xe=Rt=class extends K.wq{constructor(n){super(n),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new Rt((0,W.d9)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};(0,s._)([(0,l.Cb)({type:[String],json:{name:"angleName",write:!0}})],xe.prototype,"angleNames",void 0),(0,s._)([(0,l.Cb)({type:X.Z,json:{write:!0}})],xe.prototype,"point",void 0),(0,s._)([(0,l.Cb)({type:Ce.Z,json:{write:!0}})],xe.prototype,"spatialReference",void 0),(0,s._)([(0,l.Cb)({type:O.z8,json:{write:!0}})],xe.prototype,"rasterId",void 0),xe=Rt=(0,s._)([(0,g.j)("esri.rest.support.ImageAngleParameters")],xe);const Vr=xe;var Re=p(91179);const k=new(p(2076).X)({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let ie=class extends K.wq{constructor(){super(...arguments),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};var St;(0,s._)([(0,l.Cb)()],ie.prototype,"type",void 0),(0,s._)([(0,l.Cb)({type:k.apiValues,json:{read:k.read,write:k.write}})],ie.prototype,"measureOperation",void 0),(0,s._)([(0,l.Cb)({type:q.Z,json:{write:!0}})],ie.prototype,"mosaicRule",void 0),(0,s._)([(0,l.Cb)({type:X.Z,json:{write:!0}})],ie.prototype,"pixelSize",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],ie.prototype,"raster",void 0),ie=(0,s._)([(0,g.j)("esri.rest.support.BaseImageMeasureParameters")],ie);let he=St=class extends ie{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(n,r,o){null!=n&&(r.geometryType=(0,Re.Ji)(n),r[o]=n.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new St((0,W.d9)({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,s._)([(0,l.Cb)({types:N.qM,json:{name:"fromGeometry",read:!0,write:!0}})],he.prototype,"geometry",void 0),(0,s._)([(0,D.c)("geometry")],he.prototype,"writeGeometry",null),(0,s._)([(0,l.Cb)({type:k.apiValues,json:{write:k.write}})],he.prototype,"measureOperation",null),(0,s._)([(0,l.Cb)({json:{read:!0}})],he.prototype,"is3D",void 0),(0,s._)([(0,l.Cb)({type:String,json:{read:H.Jo.read,write:H.Jo.write}})],he.prototype,"linearUnit",void 0),(0,s._)([(0,l.Cb)({type:String,json:{read:H.gV.read,write:H.gV.write}})],he.prototype,"areaUnit",void 0),he=St=(0,s._)([(0,g.j)("esri.rest.support.ImageAreaParameters")],he);const Er=he;var Ct;let oe=Ct=class extends ie{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(n,r,o){null!=n&&(r.geometryType=(0,Re.Ji)(n),r[o]=n.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new Ct((0,W.d9)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,s._)([(0,l.Cb)({type:X.Z,json:{read:!0,write:!0}})],oe.prototype,"fromGeometry",void 0),(0,s._)([(0,D.c)("fromGeometry")],oe.prototype,"writeFromGeometry",null),(0,s._)([(0,l.Cb)({type:X.Z,json:{read:!0,write:!0}})],oe.prototype,"toGeometry",void 0),(0,s._)([(0,l.Cb)({type:k.apiValues,json:{write:k.write}})],oe.prototype,"measureOperation",null),(0,s._)([(0,l.Cb)({json:{read:!0}})],oe.prototype,"is3D",void 0),(0,s._)([(0,l.Cb)({type:String,json:{read:H.Jo.read,write:H.Jo.write}})],oe.prototype,"linearUnit",void 0),(0,s._)([(0,l.Cb)({type:String,json:{read:H.CN.read,write:H.CN.write}})],oe.prototype,"angularUnit",void 0),oe=Ct=(0,s._)([(0,g.j)("esri.rest.support.ImageDistanceParameters")],oe);const Jr=oe;var xt;let ge=xt=class extends ie{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(n,r,o){null!=n&&(r.geometryType=(0,Re.Ji)(n),r[o]=n.toJSON())}get measureOperation(){return this.operationType}clone(){return new xt((0,W.d9)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,s._)([(0,l.Cb)({type:X.Z,json:{read:!0}})],ge.prototype,"fromGeometry",void 0),(0,s._)([(0,D.c)("fromGeometry")],ge.prototype,"writeFromGeometry",null),(0,s._)([(0,l.Cb)({type:X.Z,json:{read:!0,write:!0}})],ge.prototype,"toGeometry",void 0),(0,s._)([(0,l.Cb)({type:k.apiValues,json:{write:k.write}})],ge.prototype,"measureOperation",null),(0,s._)([(0,l.Cb)({json:{read:!0}})],ge.prototype,"operationType",void 0),(0,s._)([(0,l.Cb)({type:String,json:{read:H.Jo.read,write:H.Jo.write}})],ge.prototype,"linearUnit",void 0),ge=xt=(0,s._)([(0,g.j)("esri.rest.support.ImageHeightParameters")],ge);const Lr=ge;var wt,It=p(27599),Ut=p(97478);let A=wt=class extends K.wq{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(n,r,o){null!=n&&(r.geometryType=(0,Re.Ji)(n),r[o]=JSON.stringify(n.toJSON()))}set mosaicRule(n){let r=n;r?.mosaicMethod&&(r=q.Z.fromJSON({...r.toJSON(),mosaicMethod:r.mosaicMethod,mosaicOperation:r.mosaicOperation})),this._set("mosaicRule",r)}writeMosaicRule(n,r,o){null!=n&&(r[o]=JSON.stringify(n.toJSON()))}get renderingRule(){return(0,te.Mr)(x.Z.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._get("rasterFunction")}set renderingRule(n){(0,te.Mr)(x.Z.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",n)}get renderingRules(){return(0,te.Mr)(x.Z.getLogger(this),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._get("rasterFunctions")}set renderingRules(n){(0,te.Mr)(x.Z.getLogger(this),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._set("rasterFunctions",n)}set rasterFunction(n){let r=n;r?.rasterFunction&&(r=I.Z.fromJSON({...r.toJSON(),rasterFunction:r.rasterFunction,rasterFunctionArguments:r.rasterFunctionArguments})),this._set("rasterFunction",r)}writeRasterFunction(n,r,o){null!=n&&(r[o]=JSON.stringify(n.toJSON())),n.rasterFunctionDefinition&&(r[o]=JSON.stringify(n.rasterFunctionDefinition))}writeRasterFunctions(n,r,o){null!=n&&(r[o]=JSON.stringify(n.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(n,r,o){null!=n&&(r[o]=JSON.stringify(n))}writeTimeExtent(n,r,o){if(null!=n){const e=null!=n.start?n.start.getTime():null,t=null!=n.end?n.end.getTime():null;r[o]=null!=e?null!=t?`${e},${t}`:`${e}`:null}}clone(){return new wt((0,W.d9)({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,s._)([(0,l.Cb)({json:{write:!0}})],A.prototype,"geometry",void 0),(0,s._)([(0,D.c)("geometry")],A.prototype,"writeGeometry",null),(0,s._)([(0,l.Cb)({type:q.Z,json:{write:!0}})],A.prototype,"mosaicRule",null),(0,s._)([(0,D.c)("mosaicRule")],A.prototype,"writeMosaicRule",null),(0,s._)([(0,l.Cb)({type:I.Z})],A.prototype,"renderingRule",null),(0,s._)([(0,l.Cb)({type:[I.Z]})],A.prototype,"renderingRules",null),(0,s._)([(0,l.Cb)({type:I.Z,json:{write:!0,name:"renderingRule"}})],A.prototype,"rasterFunction",null),(0,s._)([(0,D.c)("rasterFunction")],A.prototype,"writeRasterFunction",null),(0,s._)([(0,l.Cb)({type:[I.Z],json:{write:!0,name:"renderingRules"}})],A.prototype,"rasterFunctions",void 0),(0,s._)([(0,D.c)("rasterFunctions")],A.prototype,"writeRasterFunctions",null),(0,s._)([(0,l.Cb)({type:X.Z,json:{write:!0}})],A.prototype,"pixelSize",void 0),(0,s._)([(0,D.c)("pixelSize")],A.prototype,"writePixelSize",null),(0,s._)([(0,l.Cb)({type:Boolean,json:{write:!0}})],A.prototype,"returnGeometry",void 0),(0,s._)([(0,l.Cb)({type:Boolean,json:{write:!0}})],A.prototype,"returnCatalogItems",void 0),(0,s._)([(0,l.Cb)({type:Boolean,json:{write:!0}})],A.prototype,"returnPixelValues",void 0),(0,s._)([(0,l.Cb)({type:Number,json:{write:!0}})],A.prototype,"maxItemCount",void 0),(0,s._)([(0,l.Cb)({type:Ut.Z,json:{write:{target:"time"}}})],A.prototype,"timeExtent",void 0),(0,s._)([(0,D.c)("timeExtent")],A.prototype,"writeTimeExtent",null),(0,s._)([(0,l.Cb)({json:{write:!0}})],A.prototype,"raster",void 0),(0,s._)([(0,l.Cb)({json:{write:!0}})],A.prototype,"viewId",void 0),(0,s._)([(0,l.Cb)({type:Boolean,json:{write:!0}})],A.prototype,"processAsMultidimensional",void 0),A=wt=(0,s._)([(0,g.j)("esri.rest.support.ImageIdentifyParameters")],A);const zt=A;var Ft;let je=Ft=class extends K.wq{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(n,r,o){r.geometries={geometryType:"esriGeometryPoint",geometries:n.map(e=>e.toJSON())}}clone(){return new Ft({geometries:this.geometries?.map(n=>n.clone())??[],rasterId:this.rasterId})}};(0,s._)([(0,l.Cb)({type:[X.Z],json:{write:!0}})],je.prototype,"geometries",void 0),(0,s._)([(0,D.c)("geometries")],je.prototype,"writeGeometry",null),(0,s._)([(0,l.Cb)({type:O.z8,json:{write:!0}})],je.prototype,"rasterId",void 0),je=Ft=(0,s._)([(0,g.j)("esri.rest.support.ImagePixelLocationParameters")],je);const Ur=je;var Pt;let Ie=Pt=class extends ie{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(n,r,o){null!=n&&(r.geometryType=(0,Re.Ji)(n),r[o]=n.toJSON())}get measureOperation(){const{is3D:n,geometry:r}=this;return"point"===r.type?n?"point-3D":"point":n?"centroid-3D":"centroid"}clone(){return new Pt((0,W.d9)({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,s._)([(0,l.Cb)({types:N.qM,json:{name:"fromGeometry",read:Re.im}})],Ie.prototype,"geometry",void 0),(0,s._)([(0,D.c)("geometry")],Ie.prototype,"writeGeometry",null),(0,s._)([(0,l.Cb)({type:k.apiValues,json:{read:k.read,write:k.write}})],Ie.prototype,"measureOperation",null),(0,s._)([(0,l.Cb)({json:{read:!0}})],Ie.prototype,"is3D",void 0),Ie=Pt=(0,s._)([(0,g.j)("esri.rest.support.ImagePointParameters")],Ie);const zr=Ie;var Dt;let Q=Dt=class extends K.wq{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(n,r,o){null!=n&&(r.geometryType=(0,Re.Ji)(n),r[o]=n.toJSON())}set locations(n){if(n?.length){const r=new Or.Z({spatialReference:n[0].spatialReference});r.points=n.map(o=>[o.x,o.y]),this._set("locations",n),this.geometry=r}}clone(){return new Dt((0,W.d9)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};(0,s._)([(0,l.Cb)({types:N.qM,json:{read:Re.im}})],Q.prototype,"geometry",void 0),(0,s._)([(0,D.c)("geometry")],Q.prototype,"writeGeometry",null),(0,s._)([(0,l.Cb)()],Q.prototype,"locations",null),(0,s._)([(0,l.Cb)({type:String,json:{type:B.cl.jsonValues,read:B.cl.read,write:B.cl.write}})],Q.prototype,"interpolation",void 0),(0,s._)([(0,l.Cb)({type:q.Z,json:{write:!0}})],Q.prototype,"mosaicRule",void 0),(0,s._)([(0,l.Cb)({type:[String],json:{write:!0}})],Q.prototype,"outFields",void 0),(0,s._)([(0,l.Cb)({type:X.Z,json:{write:!0}})],Q.prototype,"pixelSize",void 0),(0,s._)([(0,l.Cb)({type:String,json:{write:!0}})],Q.prototype,"raster",void 0),(0,s._)([(0,l.Cb)({type:Boolean,json:{write:!0}})],Q.prototype,"returnFirstValueOnly",void 0),(0,s._)([(0,l.Cb)({type:Number,json:{write:!0}})],Q.prototype,"sampleDistance",void 0),(0,s._)([(0,l.Cb)({type:Number,json:{write:!0}})],Q.prototype,"sampleCount",void 0),(0,s._)([(0,l.Cb)({type:Number,json:{write:!0}})],Q.prototype,"sliceId",void 0),(0,s._)([(0,l.Cb)({type:Ut.Z,json:{read:{source:"time"},write:{target:"time"}}})],Q.prototype,"timeExtent",void 0),Q=Dt=(0,s._)([(0,g.j)("esri.rest.support.ImageSampleParameters")],Q);const Gr=Q;var Br=p(37084);const Hr=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),Qr=(0,l.Eg)(O.q9,{min:0,max:255}),$r=n=>{let r=class extends n{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new _({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.length<1||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(i=>"number"==typeof i))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,i){null!=e&&"lerc"!==this.format&&(t[i]=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?q.Z.fromJSON(t):null}get fieldsIndex(){return this.fields?new ar.Z(this.fields):null}set format(e){e&&Hr.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=q.Z.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const i=e||t.mosaicRule;return i?q.Z.fromJSON(i):this._isMosaicRuleSupported(t)?q.Z.fromJSON(t):null}writeMosaicRule(e,t,i){let a=this.mosaicRule;const u=this.definitionExpression;a?u&&u!==a.where&&(a=a.clone(),a.where=u):u&&(a=new q.Z({where:u})),this._isValidCustomizedMosaicRule(a)&&(t[i]=a.toJSON())}writeNoData(e,t,i){null!=e&&"number"==typeof e&&(t[i]=Qr(e))}readObjectIdField(e,t){return e||(e=t.fields.find(a=>"esriFieldTypeOID"===a.type||"oid"===a.type)?.name),e}get parsedUrl(){return(0,$.mN)(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,i){const a=t?.layerDefinition?.drawingInfo?.renderer,u=(0,de.ij)(a,i);return null==u?null:("vector-field"===u.type&&t.symbolTileSize&&!a.symbolTileSize&&(u.symbolTileSize=t.symbolTileSize),Tt(u)||x.Z.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),u)}writeRenderer(e,t,i){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this._rasterAttributeTableFieldPrefix,t=new Se.Z({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new Se.Z({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),a=new Se.Z({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let u=this.fields?(0,W.d9)(this.fields):[];u.push(i),this.capabilities?.operations.supportsQuery&&this.fields&&this.fields.length>0&&u.push(t),this.version>=10.4&&null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.some(y=>"none"===y.name.toLowerCase())&&u.push(a),null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.filter(y=>"none"!==y.name.toLowerCase()).forEach(y=>{u.push(new Se.Z({name:"Raster.ServicePixelValue."+y.name,alias:y.name,domain:null,editable:!1,length:50,type:"string"}))}),this._isVectorDataSet()&&(u.push(new Se.Z({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),u.push(new Se.Z({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:c}=this.rasterInfo??{};if(null!=c){const y=c.fields.filter(d=>"esriFieldTypeOID"!==d.type&&"value"!==d.name.toLowerCase()).map(d=>{const h=(0,W.d9)(d);return h.name=e+d.name,h});u=u.concat(y)}return u}get renderingRule(){return(0,te.Mr)(x.Z.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this.rasterFunction}set renderingRule(e){(0,te.Mr)(x.Z.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",e)}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=I.Z.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){const i=t.rasterFunctionInfos;return t.renderingRule||i?.length&&"None"!==i[0].name?this._isRFTJson(t.renderingRule)?I.Z.fromJSON({rasterFunctionDefinition:t.renderingRule}):I.Z.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const i=e||t.extent.spatialReference;return i?Ce.Z.fromJSON(i):null}readPixelType(e){return B.sM.fromJSON(e)||e}writePixelType(e,t,i){null!=this.serviceRasterInfo&&this.pixelType===this.serviceRasterInfo.pixelType||(t[i]=B.sM.toJSON(e))}readVersion(e,t){let i=t.currentVersion;return i||(i=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),i}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}applyRenderer(e,t){var i=this;return(0,m.Z)(function*(){let a=e;const{renderer:u,symbolizer:c,pixelFilter:y,bandIds:d}=i;if(!i._isPicture()&&u&&c&&!y){const h=JSON.stringify(i._cachedRendererJson)!==JSON.stringify(u.toJSON()),b=i._rasterJobHandler.instance;if(b){h&&(c.bind(),yield b.updateSymbolizer(c,t),i._cachedRendererJson=u.toJSON());const v=yield b.symbolize({bandIds:d,...e},t);a={extent:e.extent,pixelBlock:v}}else a={extent:e.extent,pixelBlock:c.symbolize({bandIds:d,...e})}}return a})()}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}computeAngles(e,t){var i=this;return(0,m.Z)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsComputeAngles)throw new C.Z("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=(0,O.TJ)(Vr,e).clone(),function Sr(n,r,o){return st.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}computePixelSpaceLocations(e,t){var i=this;return(0,m.Z)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsComputePixelLocation)throw new C.Z("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=(0,O.TJ)(Ur,e).clone(),function Cr(n,r,o){return ot.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}computeHistograms(e,t){var i=this;return(0,m.Z)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsComputeHistograms)throw new C.Z("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=(0,O.TJ)(It.Z,e).clone(),i._applyMosaicAndRenderingRules(e),function Ir(n,r,o){return lt.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}computeStatisticsHistograms(e,t){var i=this;return(0,m.Z)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsComputeStatisticsHistograms)throw new C.Z("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=(0,O.TJ)(It.Z,e).clone(),i._applyMosaicAndRenderingRules(e),function xr(n,r,o){return at.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}measureHeight(e,t){var i=this;return(0,m.Z)(function*(){const a=yield i._fetchCapabilities(t?.signal);if(!("base-and-top"===e.operationType?a.mensuration.supportsHeightFromBaseAndTop:"base-and-top-shadow"===e.operationType?a.mensuration.supportsHeightFromBaseAndTopShadow:a.mensuration.supportsHeightFromTopAndTopShadow))throw new C.Z("imagery-layer:measure-height","this operation is not supported on the input image service");return e=(0,O.TJ)(Lr,e).clone(),i._applyMosaicAndRenderingRules(e),function Fr(n,r,o){return ct.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}measureAreaAndPerimeter(e,t){var i=this;return(0,m.Z)(function*(){const a=yield i._fetchCapabilities(t?.signal);if(!a.mensuration.supportsAreaAndPerimeter||e.is3D&&!a.mensuration.supports3D)throw new C.Z("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=(0,O.TJ)(Er,e).clone(),i._applyMosaicAndRenderingRules(e),function Pr(n,r,o){return mt.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}measureDistanceAndAngle(e,t){var i=this;return(0,m.Z)(function*(){const a=yield i._fetchCapabilities(t?.signal);if(!a.mensuration.supportsDistanceAndAngle||e.is3D&&!a.mensuration.supports3D)throw new C.Z("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=(0,O.TJ)(Jr,e).clone(),i._applyMosaicAndRenderingRules(e),function Tr(n,r,o){return yt.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}measurePointOrCentroid(e,t){var i=this;return(0,m.Z)(function*(){const a=yield i._fetchCapabilities(t?.signal);if(!a.mensuration.supportsPointOrCentroid||e.is3D&&!a.mensuration.supports3D)throw new C.Z("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=(0,O.TJ)(zr,e).clone(),i._applyMosaicAndRenderingRules(e),function Dr(n,r,o){return dt.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}getField(e){const{fieldsIndex:t}=this;return t?.get(e)}getFieldDomain(e,t){const i=this.getField(e);return i?i.domain:null}fetchImage(e,t,i,a={}){var u=this;return(0,m.Z)(function*(){if(null==e||null==t||null==i)throw new C.Z("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(u.renderer||u.symbolizer){const b=yield u._generateRasterInfo(u.rasterFunction,{signal:a.signal});b&&(u.rasterInfo=b)}const c=u.getExportImageServiceParameters(e,t,i,a.timeExtent);if(null==c){if(a.requestAsImageElement&&u._canRequestImageElement(u.format)){const E=document.createElement("canvas");return E.width=t,E.height=i,a.returnImageBitmap?{imageBitmap:yield(0,At.g)(E,`${o(u.parsedUrl)}/exportImage`,a.signal)}:{imageOrCanvasElement:E}}const{bandIds:b,rasterInfo:v}=u,S=(b?.length||v.bandCount)??0,R=t*i,f=v.pixelType,w=[];for(let E=0;E<S;E++)w.push(rt.Z.createEmptyBand(f,R));return{pixelData:{pixelBlock:new rt.Z({width:t,height:i,pixels:w,mask:new Uint8Array(R),pixelType:f}),extent:e}}}const y=!!a.requestAsImageElement&&!u.pixelFilter;return u._requestArrayBuffer({imageServiceParameters:c,imageProps:{extent:e,width:t,height:i,format:u.format},requestAsImageElement:y,returnImageBitmap:y&&!!a.returnImageBitmap,signal:a.signal})})()}fetchKeyProperties(e){return(0,F.Z)(o(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(t=>t.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new C.Z("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,F.Z)(o(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(t=>Mt.Z.fromJSON(t.data))}getCatalogItemRasterInfo(e,t){const i={...t,query:this._getQueryParams()};return function Mr(n,r,o){return bt.apply(this,arguments)}(o(this.parsedUrl),e,i)}getCatalogItemICSInfo(e,t){var i=this;return(0,m.Z)(function*(){const{data:a}=yield(0,F.Z)(o(i.parsedUrl)+"/"+e+"/info/ics",{query:i._getQueryParams(),...t}),u=a?.ics;if(!u)return;let c=null;try{c=(yield(0,F.Z)(o(i.parsedUrl)+"/"+e+"/info",{query:i._getQueryParams(),...t})).data.extent}catch{}if(!c||!c.spatialReference)return{ics:u,icsToPixelTransform:null,icsExtent:null,northDirection:null};const y=i.version>=10.7?(0,F.Z)(o(i.parsedUrl)+"/"+e+"/info/icstopixel",{query:i._getQueryParams(),...t}).then(j=>j.data).catch(()=>({})):{},d=c.spatialReference,h={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[c]}),inSR:(0,et.B9)(d),outSR:"0:"+e},b=(0,F.Z)(o(i.parsedUrl)+"/project",{query:i._getQueryParams(h),...t}).then(j=>j.data).catch(()=>({})),S=(c.xmin+c.xmax)/2,R=(c.ymax-c.ymin)/6,f=c.ymin+R,w=[];for(let j=0;j<5;j++)w.push({x:S,y:f+R*j});const E={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:w}),inSR:(0,et.B9)(d),outSR:"0:"+e},Z=(0,F.Z)(o(i.parsedUrl)+"/project",{query:i._getQueryParams(E),...t}).then(j=>j.data).catch(()=>({})),J=yield Promise.all([y,b,Z]);let ae=J[0].ipxf;if(null==ae){const j=u.geodataXform?.xf_0;"topup"===j?.name?.toLowerCase()&&6===j?.coefficients?.length&&(ae={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:j.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const L=$e.Z.fromJSON(J[1]?.geometries?.[0]);L&&(L.spatialReference=new Ce.Z({wkid:0,imageCoordinateSystem:u}));const T=J[2].geometries?J[2].geometries.filter(j=>null!=j?.x&&null!=j.y&&"NaN"!==j.x&&"NaN"!==j.y):[],G=T.length;if(G<3)return{ics:u,icsToPixelTransform:ae,icsExtent:L,northDirection:null};let ee=0,Ve=0,Xe=0,Ye=0;for(let j=0;j<G;j++)ee+=T[j].x,Ve+=T[j].y,Xe+=T[j].x*T[j].x,Ye+=T[j].x*T[j].y;const ne=(G*Ye-ee*Ve)/(G*Xe-ee*ee);let le=0;const Oe=T[4].x>T[0].x,Gt=T[4].y>T[0].y;return ne===1/0?le=Gt?90:270:0===ne?le=Oe?0:180:ne>0?le=Oe?180*Math.atan(ne)/Math.PI:180*Math.atan(ne)/Math.PI+180:ne<0&&(le=Gt?180+180*Math.atan(ne)/Math.PI:360+180*Math.atan(ne)/Math.PI),{ics:u,icsToPixelTransform:ae,icsExtent:L,northDirection:le}})()}generateRasterInfo(e,t){var i=this;return(0,m.Z)(function*(){if(e=(0,O.TJ)(I.Z,e),i.serviceRasterInfo&&(!e||"none"===e.functionName?.toLowerCase()||i._isVectorFieldResampleFunction(e)))return i.serviceRasterInfo;const a=function Wr(n){if(!n)return null;const o=JSON.stringify(n).match(/"rasterFunction":"(.*?")/gi)?.map(e=>e.replace('"rasterFunction":"',"").replace('"',""));return o?o.join("/"):null}(e);if(!a)throw new C.Z("imagery-layer:generate-raster-info","the rendering rule is not supported");if(i._functionRasterInfos[a])return i._functionRasterInfos[a];const u={...t,query:i._getQueryParams()},c=(0,vt.Nb)(o(i.parsedUrl),e,u);i._functionRasterInfos[a]=c;try{return yield c}catch(y){throw i._functionRasterInfos[a]=null,y}})()}getExportImageServiceParameters(e,t,i,a){const u=Lt((e=e.clone().shiftCentralMeridian()).spatialReference,o(this.parsedUrl));this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const c=this.exportImageServiceParameters.toJSON(),{bandIds:y,noData:d}=c;let{renderingRule:h}=c;const b=this.rasterFunction?.rasterFunctionDefinition,v=!this.renderer||"raster-stretch"===this.renderer.type;if(y?.length&&this._hasRasterFunction(this.rasterFunction)&&!b&&v){const f={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:y}};if("Stretch"===h.rasterFunction)f.rasterFunctionArguments.Raster=h.rasterFunctionArguments.Raster,h.rasterFunctionArguments.Raster=f;else if("Colormap"===h.rasterFunction){const w=h.rasterFunctionArguments.Raster;"Stretch"===w?.rasterFunction?(f.rasterFunctionArguments.Raster=w.rasterFunctionArguments.Raster,w.rasterFunctionArguments.Raster=f):(f.rasterFunctionArguments.Raster=w,h.rasterFunctionArguments.Raster=f)}else f.rasterFunctionArguments.Raster=h,h=f;c.bandIds=void 0}else c.bandIds=y?.join(",");d instanceof Array&&d.length>0&&(c.noData=d.join(","));const S=this._processMultidimensionalIntersection(null,a,this.exportImageServiceParameters.mosaicRule);if(S.isOutSide)return null;c.mosaicRule=null!=S.mosaicRule?JSON.stringify(S.mosaicRule):null,a=S.timeExtent,c.renderingRule=this._getRenderingRuleString(I.Z.fromJSON(h));const R={};if(null!=a){const{start:f,end:w}=a.toJSON();f&&w&&f===w?R.time=""+f:null==f&&null==w||(R.time=`${f??"null"},${w??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:u,imageSR:u,size:t+","+i,...c,...R}}getSamples(e,t){var i=this;return(0,m.Z)(function*(){if(!(yield i._fetchCapabilities(t?.signal))?.operations.supportsGetSamples)throw new C.Z("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,O.TJ)(Gr,e).clone();const{raster:u}=i;return u&&null==e.raster&&(e.raster=u),function wr(n,r,o){return ut.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}identify(e,t){var i=this;return(0,m.Z)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsIdentify)throw new C.Z("imagery-layer:identify","identify operation is not supported on the input image service");e=(0,O.TJ)(zt,e).clone(),i.version<10.91&&"extent"===e.geometry?.type&&(e.geometry=gt.Z.fromExtent(e.geometry));const a=i._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||i.mosaicRule);if(a.isOutSide)throw new C.Z("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=a.timeExtent,e.mosaicRule=a.mosaicRule;const{raster:u,rasterFunction:c}=i;return c&&null==e.rasterFunction&&(e.rasterFunction=c),u&&null==e.raster&&(e.raster=u),Et(i.url,e,i._getRequestOptions(t))})()}createQuery(){const e=new ft.Z;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}queryRasters(e,t){var i=this;return(0,m.Z)(function*(){return({query:e,requestOptions:t}=yield i._prepareForQuery(e,t)),(0,jr.e)(i.url,e,t)})()}queryObjectIds(e,t){var i=this;return(0,m.Z)(function*(){return({query:e,requestOptions:t}=yield i._prepareForQuery(e,t)),(0,Ar.G)(i.url,e,t)})()}queryRasterCount(e,t){var i=this;return(0,m.Z)(function*(){return({query:e,requestOptions:t}=yield i._prepareForQuery(e,t)),(0,Nr.P)(i.url,e,t)})()}queryVisibleRasters(e,t){var i=this;return(0,m.Z)(function*(){if(!e)throw new C.Z("imagery-layer: query-visible-rasters","missing query parameter");yield i.load();const{pixelSize:a,returnDomainValues:u,returnTopmostRaster:c,showNoDataRecords:y}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let d=!1,h=null,b=null;const v="raster.servicepixelvalue",S=i._rasterFunctionNamesIndex;if(null!=e.outFields&&(d=e.outFields.some(L=>!L.toLowerCase().includes(v)),i.version>=10.4)){const L=e.outFields.filter(G=>G.toLowerCase().includes(v)&&G.length>v.length).map(G=>{const ee=G.slice(v.length+1);return[i._updateRenderingRulesFunctionName(ee,S),ee]});h=L.map(G=>new I.Z({functionName:G[0]})),b=L.map(G=>G[1]);const{rasterFunction:T}=i;0===h.length?T?.functionName?(h.push(T),b.push(T.functionName)):h=null:T?.functionName&&!h.some(G=>G.functionName===T.functionName)&&(h.push(T),b.push(T.functionName))}const R=null==e.outSpatialReference||e.outSpatialReference.equals(i.spatialReference),{multidimensionalSubset:f}=i;let w=e.timeExtent||i.timeExtent;if(f){const{isOutside:L,intersection:T}=(0,Ae.W2)(f,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:i.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(L)throw new C.Z("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");null!=T?.timeExtent&&(w=T.timeExtent)}const E=i._combineMosaicRuleWithTimeExtent(i.exportImageServiceParameters.mosaicRule,w);let Z=e.geometry;i.version<10.91&&"extent"===Z?.type&&(Z=gt.Z.fromExtent(Z));const J=i._getQueryParams({geometry:Z,timeExtent:w,mosaicRule:E,rasterFunction:i.version<10.4?i.rasterFunction:null,rasterFunctions:h,pixelSize:a,returnCatalogItems:d,returnGeometry:R,raster:i.raster,maxItemCount:c?1:null});delete J.f;const ae=new zt(J);try{yield i._generateRasterInfo(i.rasterFunction);const L=yield Et(i.url,ae,{signal:t?.signal,query:{...i.customParameters}}),T=e.outFields,G=null!=L.value&&L.value.toLowerCase().includes("nodata");if(!d||R||!L?.catalogItems?.features.length||!y&&G)return i._processVisibleRastersResponse(L,{returnDomainValues:u,templateRRFunctionNames:b,showNoDataRecords:y,templateFields:T});const ee=i.objectIdField||"ObjectId",Ve=L.catalogItems?.features??[],Xe=Ve.map(le=>le.attributes?.[ee]),Ye=new ft.Z({objectIds:Xe,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[ee]}),ne=yield i.queryRasters(Ye);return ne?.features?.length&&ne.features.forEach(le=>{Ve.forEach(Oe=>{Oe.attributes[ee]===le.attributes[ee]&&(Oe.geometry=new gt.Z(le.geometry),null!=e.outSpatialReference&&(Oe.geometry.spatialReference=e.outSpatialReference))})}),i._processVisibleRastersResponse(L,{returnDomainValues:u,templateRRFunctionNames:b,showNoDataRecords:y,templateFields:T})}catch{throw new C.Z("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}})()}fetchVariableStatisticsHistograms(e,t){var i=this;return(0,m.Z)(function*(){const a=(0,F.Z)(o(i.parsedUrl)+"/statistics",{query:i._getQueryParams({variable:e}),signal:t}).then(y=>y.data?.statistics),u=(0,F.Z)(o(i.parsedUrl)+"/histograms",{query:i._getQueryParams({variable:e}),signal:t}).then(y=>y.data?.histograms),c=yield Promise.all([a,u]);return c[0]&&c[0].forEach(y=>{y.avg=y.mean,y.stddev=y.standardDeviation}),{statistics:c[0]||null,histograms:c[1]||null}})()}createFlowMesh(e,t){var i=this;return(0,m.Z)(function*(){const a=i._rasterJobHandler.instance;return a?a.createFlowMesh(e,t):(0,Br.GE)(e.meshType,e.simulationSettings,e.flowData,null!=t.signal?t.signal:(new AbortController).signal)})()}getMultidimensionalSubsetVariables(e){return(0,Ae.jj)(this.multidimensionalSubset,e??this.serviceRasterInfo.multidimensionalInfo)}_fetchService(e){var t=this;return(0,m.Z)(function*(){yield t._fetchServiceInfo(e),t.rasterInfo||(t.rasterInfo=t.serviceRasterInfo);const i=t.sourceJSON,a=null!=t.serviceRasterInfo?Promise.resolve(t.serviceRasterInfo):(0,vt.gh)(o(t.parsedUrl),i,{signal:e,query:t._getQueryParams()}).then(y=>(t._set("serviceRasterInfo",y),t._set("multidimensionalInfo",y.multidimensionalInfo),(0,vt.n$)(y,i),y)),u=t._hasRasterFunction(t.rasterFunction)?t._generateRasterInfo(t.rasterFunction,{signal:e}):null,c=t._getRasterFunctionInfos();return Promise.all([a,u,c]).then(y=>{t._set("rasterInfo",y[1]?y[1]:y[0]),y[2]&&t._set("rasterFunctionInfos",y[2]),t.renderer&&!t._isSupportedRenderer(t.renderer)&&(t._set("renderer",null),x.Z.getLogger(t).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),t._set("renderer",t._configRenderer(t.renderer)),t.addHandles([(0,ke.YP)(()=>t.rasterFunction,h=>{(t.renderer||t.symbolizer||t.popupEnabled&&t.popupTemplate)&&t._generateRasterInfo(h).then(b=>{b&&(t.rasterInfo=b)})})]);const{serviceRasterInfo:d}=t;null!=d.multidimensionalInfo&&t._updateMultidimensionalDefinition(d)})})()}_combineMosaicRuleWithTimeExtent(e,t){const i=this.timeInfo,{multidimensionalInfo:a}=this.serviceRasterInfo;if(null==e||null==a||null==t||null==i?.startField)return e;const{startField:u}=i,c=a.variables.some(R=>R.dimensions.some(f=>f.name===u))?u:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter(R=>R.dimensionName!==c),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const y=e.multidimensionalDefinition.filter(R=>R.dimensionName===c),d=null!=t.start?t.start.getTime():null,h=null!=t.end?t.end.getTime():null,b=null==d||null==h||d===h,v=b?[d||h]:[[d,h]],S=this.version>=10.8;if(y.length)y.forEach(R=>{R.dimensionName===c&&(S?(R.dimensionName=null,R.isSlice=!1,R.values=[]):(R.isSlice=b,R.values=v))});else if(!S){const R=e.multidimensionalDefinition.filter(f=>null!=f.variableName&&null==f.dimensionName);R.length?R.forEach(f=>{f.dimensionName=c,f.isSlice=b,f.values=v}):e.multidimensionalDefinition.push(new Bt.Z({variableName:"",dimensionName:c,isSlice:b,values:v}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return null==e?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(t=>!(!t.variableName&&!t.dimensionName)),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}_prepareForQuery(e,t){var i=this;return(0,m.Z)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsQuery)throw new C.Z("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=null!=e?(0,O.TJ)(ft.Z,e):i.createQuery(),t=i._getRequestOptions(t),i.raster&&(t.query={...t.query,raster:i.raster}),{query:e,requestOptions:t}})()}_initJobHandler(){var e=this;return(0,m.Z)(function*(){if(null!=e._rasterJobHandler.connectionPromise)return e._rasterJobHandler.connectionPromise;const t=new ur.Z;e._rasterJobHandler.connectionPromise=t.initialize().then(()=>{e._rasterJobHandler.instance=t},()=>{}),yield e._rasterJobHandler.connectionPromise})()}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:i}=this;return"unique-value"===e.type&&this._hasRasterFunction(i)&&1===t?.bandCount&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&(0,Je.U0)(t).includes(e.type)}_fetchCapabilities(e){var t=this;return(0,m.Z)(function*(){return t.capabilities||(yield t._fetchServiceInfo(e)),t.capabilities})()}_fetchServiceInfo(e){var t=this;return(0,m.Z)(function*(){let i=t.sourceJSON;if(!i){const{data:a,ssl:u}=yield(0,F.Z)(o(t.parsedUrl),{query:t._getQueryParams(),signal:e});i=a,t.sourceJSON=i,u&&(t.url=t.url.replace(/^http:/i,"https:"))}if(i.capabilities?.toLowerCase().split(",").map(a=>a.trim()).indexOf("tilesonly")>-1)throw new C.Z("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");t.read(i,{origin:"service",url:t.parsedUrl})})()}_isMosaicDataset(e){return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:e.fields?.length>0}_isMosaicRuleSupported(e){return!!e&&(this._isMosaicDataset(e)||e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1))}_isVectorFieldResampleFunction(e){if(null==e)return!1;const{functionName:t,functionArguments:i}=e,a="resample"===t?.toLowerCase(),u=i?.ResampleType||i?.resampleType;return a&&(7===u||10===u)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){const t=this._isPicture(),{rasterInfo:i}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&i.bandCount>=3){const u=(0,Je.YD)(i);!u||3===i.bandCount&&0===u[0]&&1===u[1]&&2===u[2]||(this.bandIds=u)}e||(e=(0,Je.Ob)(i,{bandIds:this.bandIds,variableName:this.rasterFunction?null:this.mosaicRule?.multidimensionalDefinition?.[0].variableName}));const a=(0,Je.ol)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=a,this.symbolizer.rasterInfo=i):this.symbolizer=new cr.Z({rendererJSON:a,rasterInfo:i}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:null!=e.pixelBlock?e.pixelBlock.clone():null}}_getQueryParams(e){null!=e?.renderingRule&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:i}=this;return{raster:t,viewId:i,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,t,i){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,it.J)(e,t,i)}_getRasterFunctionInfos(e){var t=this;return(0,m.Z)(function*(){const i=t.sourceJSON.rasterFunctionInfos;return t.loaded?i:i&&t.version>=10.3?1===i.length&&"none"===i[0].name.toLowerCase()?i:(yield(0,F.Z)(o(t.parsedUrl)+"/rasterFunctionInfos",{query:t._getQueryParams(),signal:e})).data?.rasterFunctionInfos:null})()}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}_requestArrayBuffer(e){var t=this;return(0,m.Z)(function*(){const{imageProps:i,requestAsImageElement:a,returnImageBitmap:u,signal:c}=e;if(a&&t._canRequestImageElement(i.format)){const f=`${o(t.parsedUrl)}/exportImage`,{data:w}=yield(0,F.Z)(f,{responseType:u?"blob":"image",query:t._getQueryParams({f:"image",...t.refreshParameters,...e.imageServiceParameters}),signal:c});return w instanceof Blob?{imageBitmap:yield(0,At.g)(w,f,c),params:i}:{imageOrCanvasElement:w,params:i}}const y=t._initJobHandler(),d=(0,F.Z)(o(t.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:t._getQueryParams({f:"image",...e.imageServiceParameters}),signal:c}),h=(yield Promise.all([d,y]))[0].data,b=i.format||"jpgpng";let v=b;if("bsq"!==v&&"bip"!==v&&(v=(0,it.y)(h)),!v)throw new C.Z("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(h)));const S={signal:c};return{pixelData:{pixelBlock:yield"gif"===b||"bmp"===b||b.includes("png")&&("png"===v||"jpg"===v)?(0,it.J)(h,{useCanvas:!0,...i},S):t._decodePixelBlock(h,{width:i.width,height:i.height,planes:null,pixelType:null,noDataValue:null,format:b},S),extent:i.extent},params:i}})()}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch(()=>null)}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=(0,Ae.Tj)(e,{multidimensionalSubset:this.multidimensionalSubset});if(null!=t&&t.length>0){this.mosaicRule=this.mosaicRule||new q.Z;const i=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&"none"!==this.rasterFunction.functionName?.toLowerCase()&&t.forEach(a=>a.variableName=""),t=t.filter(({variableName:a,dimensionName:u})=>a&&"*"!==a||u),!i?.length&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const i=e.value,{templateRRFunctionNames:a,showNoDataRecords:u,returnDomainValues:c,templateFields:y}=t,d=e.processedValues;let h=e.catalogItems?.features,b=e.properties?.Values?.map(Z=>Z.replaceAll(/ /gi,", "))||[];const v=this.objectIdField||"ObjectId",S="string"==typeof i&&i.toLowerCase().includes("nodata"),R=[];if(i&&!h&&!S){const Z={};Z[v]=0,b=[i],h=[new me.Z(this.fullExtent,null,Z)]}if(!h)return[];let f,w,E;this._updateResponseFieldNames(h,y),S&&!u&&(h=[]);for(let Z=0;Z<h.length;Z++){if(f=h[Z],null!=i){if(w=b[Z],E=this.rasterFunction&&d&&d.length>0&&a&&a.length>0&&a.includes(this.rasterFunction.functionName)?d[a.indexOf(this.rasterFunction.functionName)]:i,"nodata"===w.toLowerCase()&&!u)continue;const ae="Raster.ServicePixelValue";f.attributes["Raster.ItemPixelValue"]=w,f.attributes[ae]=E,this._updateFeatureWithMagDirValues(f,w);const L=this.fields&&this.fields.length>0;let T=this.rasterFunction&&null!=this.serviceRasterInfo.attributeTable?L?w:i:E;this.rasterFunction||(T=L?w:i),this._updateFeatureWithRasterAttributeTableValues(f,T)}if(f.sourceLayer=f.layer=this,c&&this._updateFeatureWithDomainValues(f),a&&d&&a.length===d.length)for(let J=0;J<a.length;J++)f.attributes["Raster.ServicePixelValue."+a[J]]=d[J];R.push(h[Z])}return R}_processMultidimensionalIntersection(e,t,i){const{multidimensionalSubset:a}=this;if(!a)return{isOutSide:!1,timeExtent:t,mosaicRule:i=this._combineMosaicRuleWithTimeExtent(i,t)};if(a){const{isOutside:u,intersection:c}=(0,Ae.W2)(a,{geometry:e,timeExtent:t});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null};null!=c?.timeExtent&&(t=c.timeExtent)}if((i=this._combineMosaicRuleWithTimeExtent(i,t))?.multidimensionalDefinition){const{isOutside:u}=(0,Ae.W2)(a,{multidimensionalDefinition:i.multidimensionalDefinition});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:i}}_updateFeatureWithRasterAttributeTableValues(e,t){const i=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(null==i)return;const{features:a,fields:u}=i,c=u.map(d=>d.name).find(d=>"value"===d.toLowerCase());if(!c)return;const y=a.filter(d=>d.attributes[c]===(null!=t?parseInt(t,10):null));y&&y[0]&&u.forEach(d=>{e.attributes[this._rasterAttributeTableFieldPrefix+d.name]=y[0].attributes[d.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const i=t.split(/,\s*/).map(d=>parseFloat(d)),a=i.map(d=>[d]),u=i.map(d=>({minValue:d,maxValue:d,noDataValue:null})),c=new rt.Z({height:1,width:1,pixelType:"f32",pixels:a,statistics:u});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:c,extent:new $e.Z(0,0,0,0,this.spatialReference)});const y="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[c.pixels[0][0],c.pixels[1][0]]:(0,pr.Tg)([c.pixels[0][0],c.pixels[1][0]]);e.attributes["Raster.Magnitude"]=y[0],e.attributes["Raster.Direction"]=y[1]}_updateFeatureWithDomainValues(e){(this.fields&&this.fields.filter(i=>i.domain&&"coded-value"===i.domain.type))?.forEach(i=>{const a=e.attributes[i.name];if(null!=a){const u=i.domain.codedValues.find(c=>c.code===a);u&&(e.attributes[i.name]=u.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const i=this.fieldsIndex;null!=i&&e.forEach(a=>{if(a?.attributes)for(const u of t){const c=i.get(u)?.name;c&&c!==u&&(a.attributes[u]=a.attributes[c],delete a.attributes[c])}})}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return null!=e?.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const i=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(i)?t.get(i):e}_isRFTJson(e){return e?.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:i,rasterFunction:a}=this;a&&e instanceof It.Z&&null==e.rasterFunction&&(e.rasterFunction=a),i&&null==e.mosaicRule&&(e.mosaicRule=i),t&&null==e.raster&&(e.raster=t)}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(R=>R.trim()):["image","catalog"],{currentVersion:i,advancedQueryCapabilities:a,maxRecordCount:u}=e,c=t.includes("image"),y="esriImageServiceDataTypeElevation"===e.serviceDataType,d=!(!e.spatialReference&&!e.extent?.spatialReference),h=t.includes("edit"),b=t.includes("mensuration")&&d,v=null==e.mensurationCapabilities?[]:e.mensurationCapabilities.toLowerCase().split(",").map(R=>R.trim()),S=b&&v.includes("basic");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:c,supportsExportImage:c,supportsIdentify:c,supportsMeasure:b,supportsDownload:t.includes("download"),supportsQuery:t.includes("catalog")&&e.fields&&e.fields.length>0,supportsGetSamples:i>=10.2&&c,supportsProject:i>=10.3&&c,supportsComputeStatisticsHistograms:i>=10.4&&c,supportsQueryBoundary:i>=10.6&&c,supportsCalculateVolume:i>=10.7&&y,supportsComputePixelLocation:i>=10.7&&t.includes("catalog"),supportsComputeAngles:i>=10.91,supportsAdd:h,supportsDelete:h,supportsEditing:h,supportsUpdate:h,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:u,maxRecordCountFactor:void 0,supportsStatistics:!!a?.supportsStatistics,supportsOrderBy:!!a?.supportsOrderBy,supportsDistinct:!!a?.supportsDistinct,supportsPagination:!!a?.supportsPagination,supportsStandardizedQueriesOnly:!!a?.useStandardizedQueries,supportsPercentileStatistics:!!a?.supportsPercentileStatistics,supportsCentroid:!!a?.supportsReturningGeometryCentroid,supportsDistance:!!a?.supportsQueryWithDistance,supportsExtent:!!a?.supportsReturningQueryExtent,supportsGeometryProperties:!!a?.supportsReturningGeometryProperties,supportsHavingClause:!!a?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!a?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0},mensuration:{supportsDistanceAndAngle:S,supportsAreaAndPerimeter:S,supportsPointOrCentroid:S,supportsHeightFromBaseAndTop:b&&v.includes("base-top height"),supportsHeightFromBaseAndTopShadow:b&&v.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:b&&v.includes("top-top shadow height"),supports3D:b&&v.includes("3d")}}}};function o(e){return e?.path??""}return(0,s._)([(0,l.Cb)({clonable:!1})],r.prototype,"_functionRasterInfos",void 0),(0,s._)([(0,l.Cb)({clonable:!1})],r.prototype,"_rasterJobHandler",void 0),(0,s._)([(0,l.Cb)({clonable:!1})],r.prototype,"_cachedRendererJson",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],r.prototype,"_serviceSupportsMosaicRule",void 0),(0,s._)([(0,U.r)("_serviceSupportsMosaicRule",["currentVersion","fields"])],r.prototype,"readServiceSupportsMosaicRule",null),(0,s._)([(0,l.Cb)({readOnly:!0})],r.prototype,"_rasterAttributeTableFieldPrefix",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],r.prototype,"_rasterFunctionNamesIndex",null),(0,s._)([(0,l.Cb)()],r.prototype,"adjustAspectRatio",void 0),(0,s._)([(0,l.Cb)({type:[O.z8],json:{write:!0}})],r.prototype,"bandIds",void 0),(0,s._)([(0,U.r)("bandIds")],r.prototype,"readBandIds",null),(0,s._)([(0,l.Cb)({readOnly:!0,json:{read:!1}})],r.prototype,"capabilities",void 0),(0,s._)([(0,U.r)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],r.prototype,"readCapabilities",null),(0,s._)([(0,l.Cb)({type:Number})],r.prototype,"compressionQuality",void 0),(0,s._)([(0,D.c)("compressionQuality")],r.prototype,"writeCompressionQuality",null),(0,s._)([(0,l.Cb)({type:Number})],r.prototype,"compressionTolerance",void 0),(0,s._)([(0,D.c)("compressionTolerance")],r.prototype,"writeCompressionTolerance",null),(0,s._)([(0,l.Cb)({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),(0,s._)([(0,l.Cb)({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],r.prototype,"defaultMosaicRule",void 0),(0,s._)([(0,U.r)("defaultMosaicRule",["defaultMosaicMethod"])],r.prototype,"readDefaultMosaicRule",null),(0,s._)([(0,l.Cb)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],r.prototype,"definitionExpression",void 0),(0,s._)([(0,l.Cb)({readOnly:!0,constructOnly:!0})],r.prototype,"exportImageServiceParameters",void 0),(0,s._)([(0,l.Cb)()],r.prototype,"rasterInfo",void 0),(0,s._)([(0,l.Cb)({readOnly:!0,type:[Se.Z]})],r.prototype,"fields",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],r.prototype,"fieldsIndex",null),(0,s._)([(0,l.Cb)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],r.prototype,"format",null),(0,s._)([(0,U.r)("service","format",["serviceDataType"])],r.prototype,"readFormat",null),(0,s._)([(0,l.Cb)({type:$e.Z})],r.prototype,"fullExtent",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],r.prototype,"hasMultidimensions",void 0),(0,s._)([(0,l.Cb)({json:{read:{source:"maxImageHeight"}}})],r.prototype,"imageMaxHeight",void 0),(0,s._)([(0,l.Cb)({json:{read:{source:"maxImageWidth"}}})],r.prototype,"imageMaxWidth",void 0),(0,s._)([(0,l.Cb)({type:String,json:{type:B.cl.jsonValues,read:B.cl.read,write:B.cl.write}})],r.prototype,"interpolation",void 0),(0,s._)([(0,l.Cb)()],r.prototype,"minScale",void 0),(0,s._)([(0,U.r)("service","minScale")],r.prototype,"readMinScale",null),(0,s._)([(0,l.Cb)()],r.prototype,"maxScale",void 0),(0,s._)([(0,U.r)("service","maxScale")],r.prototype,"readMaxScale",null),(0,s._)([(0,l.Cb)({type:q.Z})],r.prototype,"mosaicRule",null),(0,s._)([(0,U.r)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],r.prototype,"readMosaicRule",null),(0,s._)([(0,D.c)("mosaicRule")],r.prototype,"writeMosaicRule",null),(0,s._)([(0,l.Cb)()],r.prototype,"multidimensionalInfo",void 0),(0,s._)([(0,l.Cb)({type:lr.Z,json:{write:!0}})],r.prototype,"multidimensionalSubset",void 0),(0,s._)([(0,l.Cb)({json:{type:O.z8}})],r.prototype,"noData",void 0),(0,s._)([(0,D.c)("noData")],r.prototype,"writeNoData",null),(0,s._)([(0,l.Cb)({type:String,json:{type:B.kQ.jsonValues,read:B.kQ.read,write:B.kQ.write}})],r.prototype,"noDataInterpretation",void 0),(0,s._)([(0,l.Cb)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],r.prototype,"objectIdField",void 0),(0,s._)([(0,U.r)("objectIdField")],r.prototype,"readObjectIdField",null),(0,s._)([(0,l.Cb)({readOnly:!0})],r.prototype,"geometryType",void 0),(0,s._)([(0,l.Cb)({})],r.prototype,"typeIdField",void 0),(0,s._)([(0,l.Cb)({})],r.prototype,"types",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],r.prototype,"parsedUrl",null),(0,s._)([(0,l.Cb)({type:Function})],r.prototype,"pixelFilter",void 0),(0,s._)([(0,l.Cb)()],r.prototype,"raster",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],r.prototype,"sourceType",void 0),(0,s._)([(0,U.r)("sourceType",["serviceSourceType","fields"])],r.prototype,"readSourceType",null),(0,s._)([(0,l.Cb)()],r.prototype,"viewId",void 0),(0,s._)([(0,l.Cb)({types:de.dr,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:de.FK,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],r.prototype,"renderer",null),(0,s._)([(0,U.r)("renderer")],r.prototype,"readRenderer",null),(0,s._)([(0,D.c)("renderer")],r.prototype,"writeRenderer",null),(0,s._)([(0,l.Cb)({clonable:!1})],r.prototype,"symbolizer",void 0),(0,s._)([(0,l.Cb)(_e.Oh)],r.prototype,"opacity",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],r.prototype,"rasterFields",null),(0,s._)([(0,l.Cb)({constructOnly:!0})],r.prototype,"rasterFunctionInfos",void 0),(0,s._)([(0,l.Cb)({type:I.Z})],r.prototype,"renderingRule",null),(0,s._)([(0,l.Cb)({type:I.Z,json:{name:"renderingRule"}})],r.prototype,"rasterFunction",null),(0,s._)([(0,U.r)("rasterFunction",["renderingRule","rasterFunctionInfos"])],r.prototype,"readRasterFunction",null),(0,s._)([(0,l.Cb)({readOnly:!0})],r.prototype,"serviceDataType",void 0),(0,s._)([(0,l.Cb)({readOnly:!0,type:Ce.Z})],r.prototype,"spatialReference",void 0),(0,s._)([(0,U.r)("spatialReference",["spatialReference","extent"])],r.prototype,"readSpatialReference",null),(0,s._)([(0,l.Cb)({json:{type:B.sM.jsonValues}})],r.prototype,"pixelType",void 0),(0,s._)([(0,U.r)("pixelType")],r.prototype,"readPixelType",null),(0,s._)([(0,D.c)("pixelType")],r.prototype,"writePixelType",null),(0,s._)([(0,l.Cb)({constructOnly:!0,type:Zt.Z})],r.prototype,"serviceRasterInfo",void 0),(0,s._)([(0,l.Cb)()],r.prototype,"sourceJSON",void 0),(0,s._)([(0,l.Cb)(_e.HQ)],r.prototype,"url",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],r.prototype,"version",void 0),(0,s._)([(0,U.r)("version",["currentVersion","fields","timeInfo"])],r.prototype,"readVersion",null),r=(0,s._)([(0,g.j)("esri.layers.mixins.ArcGISImageService")],r),r};var Kr=p(65088),Xr=p(552),Yr=p(50107),qr=p(49286),kr=p(6647),ei=p(30346),ti=p(99555),ri=p(97941),ii=p(5676),ni=p(49430),Ke=p(20885);let Y=class extends((0,Xr.h)((0,ri.n)((0,ti.M)((0,qr.q)((0,kr.I)($r((0,ei.Q)((0,Yr.N)((0,Kr.Y)((0,we.R)((0,pe.J)(M.Z)))))))))))){constructor(...n){var r;super(...n),r=this,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=(0,P.Ds)(function(){var o=(0,m.Z)(function*(e,t,i){const{save:a,saveAs:u}=yield Promise.all([p.e(8592),p.e(9301)]).then(p.bind(p,97452));switch(e){case Ke.x.SAVE:return a(r,t);case Ke.x.SAVE_AS:return u(r,i,t)}});return function(e,t,i){return o.apply(this,arguments)}}())}normalizeCtorArgs(n,r){return"string"==typeof n?{url:n,...r}:n}load(n){const r=null!=n?n.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},n).catch(P.r9).then(()=>this._fetchService(r))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(n){this._set("legendEnabled",n)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(n){this._set("listMode",n)}writeOperationalLayerType(n,r,o){r[o]="vector-field"===this.renderer?.type?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){return!(!this.raster||!this.url?.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(n){const r=this.rasterFields,o=this.title,e=new Set;let t=!1,i=!1;this.capabilities&&(t=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,i="esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType);const a=new Set;t&&a.add("raster.itempixelvalue");for(const c of r){const y=c.name.toLowerCase();a.has(y)||y.includes("raster.servicepixelvalue.")||e.add(c.name)}i&&e.add("raster.magnitude").add("raster.direction");const u=(0,ni.eZ)({fields:r,title:o},{...n,visibleFieldNames:e});return u?.fieldInfos&&this.rasterInfo?.pixelType.startsWith("f")&&u.fieldInfos.forEach(({format:c,fieldName:y})=>{c&&/^raster\.(item|service)pixelvalue/i.test(y)&&(c.places=2)}),u}queryFeatures(n,r){return this.queryRasters(n,r).then(o=>{if(o?.features)for(const e of o.features)e.layer=e.sourceLayer=this;return o})}queryFeatureCount(n,r){return this.queryRasterCount(n,r)}redraw(){this.emit("redraw")}save(n){var r=this;return(0,m.Z)(function*(){return r._debouncedSaveOperations(Ke.x.SAVE,n)})()}saveAs(n,r){var o=this;return(0,m.Z)(function*(){return o._debouncedSaveOperations(Ke.x.SAVE_AS,r,n)})()}serviceSupportsSpatialReference(n){return(0,ii.D)(this,n)}write(n,r){return this._isPreviewLayer?(r?.messages&&r.messages.push(new C.Z("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${r.origin}/${r.layerContainerType||"operational-layers"}'`,{layer:this})),null):super.write(n,r)}};(0,s._)([(0,l.Cb)(_e.rn)],Y.prototype,"legendEnabled",null),(0,s._)([(0,l.Cb)({type:["show","hide"]})],Y.prototype,"listMode",null),(0,s._)([(0,l.Cb)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Y.prototype,"isReference",void 0),(0,s._)([(0,l.Cb)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Y.prototype,"operationalLayerType",void 0),(0,s._)([(0,D.c)("web-map","operationalLayerType")],Y.prototype,"writeOperationalLayerType",null),(0,s._)([(0,l.Cb)(_e.C_)],Y.prototype,"popupEnabled",void 0),(0,s._)([(0,l.Cb)({type:z.Z,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Y.prototype,"popupTemplate",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],Y.prototype,"defaultPopupTemplate",null),(0,s._)([(0,l.Cb)({readOnly:!0,json:{read:!1}})],Y.prototype,"type",void 0),(0,s._)([(0,l.Cb)({readOnly:!0})],Y.prototype,"_isPreviewLayer",null),Y=(0,s._)([(0,g.j)("esri.layers.ImageryLayer")],Y);const si=Y},87183:(qe,ue,p)=>{p.d(ue,{Z:()=>D});var ce,m=p(17626),s=p(86810),z=p(77712),pe=p(90912),P=(p(85931),p(8314),p(76898));const fe={1:{id:1,rotation:0,mirrored:!1},2:{id:2,rotation:0,mirrored:!0},3:{id:3,rotation:180,mirrored:!1},4:{id:4,rotation:180,mirrored:!0},5:{id:5,rotation:-90,mirrored:!0},6:{id:6,rotation:90,mirrored:!1},7:{id:7,rotation:90,mirrored:!0},8:{id:8,rotation:-90,mirrored:!1}};let g=ce=class extends s.wq{constructor(M){super(M),this.contentType=null,this.exifInfo=null,this.id=null,this.globalId=null,this.keywords=null,this.name=null,this.parentGlobalId=null,this.parentObjectId=null,this.size=null,this.url=null}get orientationInfo(){const{exifInfo:M}=this,N=function l(M){const{exifInfo:N,exifName:me,tagName:de}=M;if(!N||!me||!de)return null;const F=N.find(te=>te.name===me);return F?function O(M){const{tagName:N,tags:me}=M;return me&&N&&me.find(F=>F.name===N)?.value||null}({tagName:de,tags:F.tags}):null}({exifName:"Exif IFD0",tagName:"Orientation",exifInfo:M});return fe[N]||null}clone(){return new ce({contentType:this.contentType,exifInfo:this.exifInfo,id:this.id,globalId:this.globalId,keywords:this.keywords,name:this.name,parentGlobalId:this.parentGlobalId,parentObjectId:this.parentObjectId,size:this.size,url:this.url})}};(0,m._)([(0,z.Cb)({type:String})],g.prototype,"contentType",void 0),(0,m._)([(0,z.Cb)()],g.prototype,"exifInfo",void 0),(0,m._)([(0,z.Cb)({readOnly:!0})],g.prototype,"orientationInfo",null),(0,m._)([(0,z.Cb)({type:pe.z8})],g.prototype,"id",void 0),(0,m._)([(0,z.Cb)({type:String})],g.prototype,"globalId",void 0),(0,m._)([(0,z.Cb)({type:String})],g.prototype,"keywords",void 0),(0,m._)([(0,z.Cb)({type:String})],g.prototype,"name",void 0),(0,m._)([(0,z.Cb)({json:{read:!1}})],g.prototype,"parentGlobalId",void 0),(0,m._)([(0,z.Cb)({json:{read:!1}})],g.prototype,"parentObjectId",void 0),(0,m._)([(0,z.Cb)({type:pe.z8})],g.prototype,"size",void 0),(0,m._)([(0,z.Cb)({json:{read:!1}})],g.prototype,"url",void 0),g=ce=(0,m._)([(0,P.j)("esri.layers.support.AttachmentInfo")],g);const D=g},67010:(qe,ue,p)=>{p.r(ue),p.d(ue,{default:()=>D});var fe,m=p(17626),z=(p(29132),p(86810)),pe=p(58817),C=p(77712),we=p(90912),P=p(76898),l=p(99433),O=p(15283),ce=p(65234);let g=fe=class extends z.wq{constructor(M){super(M),this.cacheHint=void 0,this.dynamicDataSource=void 0,this.gdbVersion=null,this.geometryPrecision=void 0,this.historicMoment=null,this.maxAllowableOffset=void 0,this.objectIds=null,this.orderByFields=null,this.outFields=null,this.outSpatialReference=null,this.relationshipId=void 0,this.start=void 0,this.num=void 0,this.returnGeometry=!1,this.returnM=void 0,this.returnZ=void 0,this.where=null}_writeHistoricMoment(M,N){N.historicMoment=M&&M.getTime()}writeStart(M,N){N.resultOffset=this.start,N.resultRecordCount=this.num||10,this.start>0&&null==this.where&&(N.definitionExpression="1=1")}clone(){return new fe((0,pe.d9)({cacheHint:this.cacheHint,dynamicDataSource:this.dynamicDataSource,gdbVersion:this.gdbVersion,geometryPrecision:this.geometryPrecision,historicMoment:this.historicMoment&&new Date(this.historicMoment.getTime()),maxAllowableOffset:this.maxAllowableOffset,objectIds:this.objectIds,orderByFields:this.orderByFields,outFields:this.outFields,outSpatialReference:this.outSpatialReference,relationshipId:this.relationshipId,start:this.start,num:this.num,returnGeometry:this.returnGeometry,where:this.where,returnZ:this.returnZ,returnM:this.returnM}))}};(0,m._)([(0,C.Cb)({type:Boolean,json:{write:!0}})],g.prototype,"cacheHint",void 0),(0,m._)([(0,C.Cb)({type:O.n,json:{write:!0}})],g.prototype,"dynamicDataSource",void 0),(0,m._)([(0,C.Cb)({type:String,json:{write:!0}})],g.prototype,"gdbVersion",void 0),(0,m._)([(0,C.Cb)({type:Number,json:{write:!0}})],g.prototype,"geometryPrecision",void 0),(0,m._)([(0,C.Cb)({type:Date})],g.prototype,"historicMoment",void 0),(0,m._)([(0,l.c)("historicMoment")],g.prototype,"_writeHistoricMoment",null),(0,m._)([(0,C.Cb)({type:Number,json:{write:!0}})],g.prototype,"maxAllowableOffset",void 0),(0,m._)([(0,C.Cb)({type:[Number],json:{write:!0}})],g.prototype,"objectIds",void 0),(0,m._)([(0,C.Cb)({type:[String],json:{write:!0}})],g.prototype,"orderByFields",void 0),(0,m._)([(0,C.Cb)({type:[String],json:{write:!0}})],g.prototype,"outFields",void 0),(0,m._)([(0,C.Cb)({type:ce.Z,json:{read:{source:"outSR"},write:{target:"outSR"}}})],g.prototype,"outSpatialReference",void 0),(0,m._)([(0,C.Cb)({json:{write:!0}})],g.prototype,"relationshipId",void 0),(0,m._)([(0,C.Cb)({type:Number,json:{read:{source:"resultOffset"}}})],g.prototype,"start",void 0),(0,m._)([(0,l.c)("start"),(0,l.c)("num")],g.prototype,"writeStart",null),(0,m._)([(0,C.Cb)({type:Number,json:{read:{source:"resultRecordCount"}}})],g.prototype,"num",void 0),(0,m._)([(0,C.Cb)({json:{write:!0}})],g.prototype,"returnGeometry",void 0),(0,m._)([(0,C.Cb)({type:Boolean,json:{write:{overridePolicy:M=>({enabled:M})}}})],g.prototype,"returnM",void 0),(0,m._)([(0,C.Cb)({type:Boolean,json:{write:{overridePolicy:M=>({enabled:M})}}})],g.prototype,"returnZ",void 0),(0,m._)([(0,C.Cb)({type:String,json:{read:{source:"definitionExpression"},write:{target:"definitionExpression"}}})],g.prototype,"where",void 0),g=fe=(0,m._)([(0,P.j)("esri.rest.support.RelationshipQuery")],g),g.from=(0,we.se)(g);const D=g},6871:(qe,ue,p)=>{p.d(ue,{Z:()=>ke});var M,m=p(17626),s=p(29132),z=p(97478),pe=p(2076),C=p(86810),we=p(58817),P=p(77712),l=p(90912),O=p(76898),ce=p(99433),fe=p(91179);p(85931),p(8314);let N=M=class extends C.wq{constructor($){super($),this.groupByFields=void 0,this.topCount=void 0,this.orderByFields=void 0}clone(){return new M({groupByFields:this.groupByFields,topCount:this.topCount,orderByFields:this.orderByFields})}};(0,m._)([(0,P.Cb)({type:[String],json:{write:!0}})],N.prototype,"groupByFields",void 0),(0,m._)([(0,P.Cb)({type:Number,json:{write:!0}})],N.prototype,"topCount",void 0),(0,m._)([(0,P.Cb)({type:[String],json:{write:!0}})],N.prototype,"orderByFields",void 0),N=M=(0,m._)([(0,O.j)("esri.rest.support.TopFilter")],N);const me=N;var F,de=p(65234);const te=new pe.X({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelDisjoint:"disjoint",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),W=new pe.X({esriSRUnit_Meter:"meters",esriSRUnit_Kilometer:"kilometers",esriSRUnit_Foot:"feet",esriSRUnit_StatuteMile:"miles",esriSRUnit_NauticalMile:"nautical-miles",esriSRUnit_USNauticalMile:"us-nautical-miles"});let x=F=class extends C.wq{constructor($){super($),this.cacheHint=void 0,this.distance=void 0,this.geometry=null,this.geometryPrecision=void 0,this.maxAllowableOffset=void 0,this.num=void 0,this.objectIds=null,this.orderByFields=null,this.outFields=null,this.outSpatialReference=null,this.resultType=null,this.returnGeometry=!1,this.returnM=void 0,this.returnZ=void 0,this.start=void 0,this.spatialRelationship="intersects",this.timeExtent=null,this.topFilter=void 0,this.units=null,this.where="1=1"}writeStart($,U){U.resultOffset=this.start,U.resultRecordCount=this.num||10}clone(){return new F((0,we.d9)({cacheHint:this.cacheHint,distance:this.distance,geometry:this.geometry,geometryPrecision:this.geometryPrecision,maxAllowableOffset:this.maxAllowableOffset,num:this.num,objectIds:this.objectIds,orderByFields:this.orderByFields,outFields:this.outFields,outSpatialReference:this.outSpatialReference,resultType:this.resultType,returnGeometry:this.returnGeometry,returnZ:this.returnZ,returnM:this.returnM,start:this.start,spatialRelationship:this.spatialRelationship,timeExtent:this.timeExtent,topFilter:this.topFilter,units:this.units,where:this.where}))}};(0,m._)([(0,P.Cb)({type:Boolean,json:{write:!0}})],x.prototype,"cacheHint",void 0),(0,m._)([(0,P.Cb)({type:Number,json:{write:{overridePolicy:$=>({enabled:$>0})}}})],x.prototype,"distance",void 0),(0,m._)([(0,P.Cb)({types:s.qM,json:{read:fe.im,write:!0}})],x.prototype,"geometry",void 0),(0,m._)([(0,P.Cb)({type:Number,json:{write:!0}})],x.prototype,"geometryPrecision",void 0),(0,m._)([(0,P.Cb)({type:Number,json:{write:!0}})],x.prototype,"maxAllowableOffset",void 0),(0,m._)([(0,P.Cb)({type:Number,json:{read:{source:"resultRecordCount"}}})],x.prototype,"num",void 0),(0,m._)([(0,P.Cb)({json:{write:!0}})],x.prototype,"objectIds",void 0),(0,m._)([(0,P.Cb)({type:[String],json:{write:!0}})],x.prototype,"orderByFields",void 0),(0,m._)([(0,P.Cb)({type:[String],json:{write:!0}})],x.prototype,"outFields",void 0),(0,m._)([(0,P.Cb)({type:de.Z,json:{read:{source:"outSR"},write:{target:"outSR"}}})],x.prototype,"outSpatialReference",void 0),(0,m._)([(0,P.Cb)({type:String,json:{write:!0}})],x.prototype,"resultType",void 0),(0,m._)([(0,P.Cb)({json:{write:!0}})],x.prototype,"returnGeometry",void 0),(0,m._)([(0,P.Cb)({type:Boolean,json:{write:{overridePolicy:$=>({enabled:$})}}})],x.prototype,"returnM",void 0),(0,m._)([(0,P.Cb)({type:Boolean,json:{write:{overridePolicy:$=>({enabled:$})}}})],x.prototype,"returnZ",void 0),(0,m._)([(0,P.Cb)({type:Number,json:{read:{source:"resultOffset"}}})],x.prototype,"start",void 0),(0,m._)([(0,ce.c)("start"),(0,ce.c)("num")],x.prototype,"writeStart",null),(0,m._)([(0,P.Cb)({type:String,json:{read:{source:"spatialRel",reader:te.read},write:{target:"spatialRel",writer:te.write}}})],x.prototype,"spatialRelationship",void 0),(0,m._)([(0,P.Cb)({type:z.Z,json:{write:!0}})],x.prototype,"timeExtent",void 0),(0,m._)([(0,P.Cb)({type:me,json:{write:!0}})],x.prototype,"topFilter",void 0),(0,m._)([(0,P.Cb)({type:String,json:{read:W.read,write:{writer:W.write,overridePolicy($){return{enabled:null!=$&&null!=this.distance&&this.distance>0}}}}})],x.prototype,"units",void 0),(0,m._)([(0,P.Cb)({type:String,json:{write:!0}})],x.prototype,"where",void 0),x=F=(0,m._)([(0,O.j)("esri.rest.support.TopFeaturesQuery")],x),x.from=(0,l.se)(x);const ke=x}}]);