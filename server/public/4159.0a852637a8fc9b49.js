"use strict";(self.webpackChunkCRIS=self.webpackChunkCRIS||[]).push([[4159],{64159:(it,J,c)=>{c.r(J),c.d(J,{uploadAssets:()=>Is});var i=c(15861),f=c(84792),W=c(8314),is=c(63290),d=c(10699),_=c(27422),m=c(21726),ls=c(35948),w=c(96603),y=c(26584);const x="upload-assets",v=()=>new Error;class ps extends y.Z{constructor(){super(`${x}:unsupported`,"Layer does not support asset uploads.",v())}}class cs extends y.Z{constructor(){super(`${x}:no-glb-support`,"Layer does not support glb.",v())}}class ds extends y.Z{constructor(){super(`${x}:no-supported-source`,"No supported external source found",v())}}class fs extends y.Z{constructor(){super(`${x}:not-base-64`,"Expected gltf data in base64 format after conversion.",v())}}class ms extends y.Z{constructor(){super(`${x}:unable-to-prepare-options`,"Unable to prepare uploadAsset request options.",v())}}class gs extends y.Z{constructor(e,s){super(`${x}:bad-response`,`Bad response. Uploaded ${e} items and received ${s} results.`,v())}}class hs extends y.Z{constructor(e,s){super(`${x}-layer:upload-failed`,`Failed to upload mesh file ${e}. Error code: ${s?.code??"-1"}. Error message: ${s?.messages??"unknown"}`,v())}}class K extends y.Z{constructor(e){super(`${x}-layer:unsupported-format`,`The service allowed us to upload an asset of FormatID ${e}, but it does not list it in its supported formats.`,v())}}class ys extends y.Z{constructor(){super(`${x}:convert3D-failed`,"convert3D failed.")}}const M={upload:{createFromFiles:.8,loadMesh:.2},uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};var xs=c(38305),vs=c(54024),_s=c(88159);function P(t,e=(r=>{}),s){return new ws(t,e,s)}class ws{constructor(e,s=(n=>{}),r){if(this.onProgress=s,this.taskName=r,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,"number"==typeof e){this._weights={};for(let n=0;n<e;n++){const o=n;this._weights[o]=1/e,this._progressMap.set(o,0)}}else this._weights=e;this.emitProgress()}emitProgress(){let e=0;for(const[s,r]of this._progressMap.entries())e+=r*this._weights[s];if(1===e&&(0,W.Z)("enable-feature:esri-3dofl-upload-timings")){const s=Math.round(performance.now()-(this._startTime??0))/1e3;console.log(`${this.taskName} done in ${s} sec`);for(const[r,n]of this._timingsMap){const o=Math.round(n.end-n.start)/1e3,a=Math.round(o/s*100);console.log(this.taskName??"Task",{stepKey:r,stepTime:o,relativeTime:a})}}this.onProgress(e)}setProgress(e,s){if(this._progressMap.set(e,s),(0,W.Z)("enable-feature:esri-3dofl-upload-timings")){const r=performance.now();this._startTime??=r;const n=(0,_s.s1)(this._timingsMap,e,()=>({start:r,end:0}));1===s&&(n.end=r)}this.emitProgress()}simulate(e,s){return V(r=>this.setProgress(e,r),s)}makeOnProgress(e){return s=>this.setProgress(e,s)}}function V(t=(s=>{}),e=bs){const s=performance.now();t(0);const r=setInterval(()=>{const n=performance.now()-s,o=1-Math.exp(-n/e);t(o)},Es);return(0,vs.kB)(()=>{clearInterval(r),t(1)})}function Ps(t,e=Zs){return(0,_.up)((0,_._H)(t*Y/e))}const Zs=10,As=10,Y=8e-6,Es=(0,_.HA)(50),bs=(0,_.HA)(1e3),Q=1e6,X=20*Q,Fs=2e9,Ms=3;function U(){return U=(0,i.Z)(function*({data:t,name:e,description:s},r,n){let o=null;try{const a=(0,m.v_)(r,"uploads"),u=(0,m.v_)(a,"info"),{data:l}=yield(0,f.Z)(u,{query:{f:"json"},responseType:"json"});(0,d.k_)(n);const p=(0,xs.M8)(r),g=l.maxUploadFileSize*Q,A=p?Fs:g,G=p?Math.min(X,g):X;if(t.size>A)throw new Error("Data too large");const qs=(0,m.v_)(a,"register"),{data:rs}=yield(0,f.Z)(qs,{query:{f:"json",itemName:$s(e),description:s},responseType:"json",method:"post"});if((0,d.k_)(n),!rs.success)throw new Error("Registration failed");const{itemID:st}=rs.item;o=(0,m.v_)(a,st);const tt=(0,m.v_)(o,"uploadPart"),ns=Math.ceil(t.size/G),E=new Array;for(let h=0;h<ns;++h)E.push(t.slice(h*G,Math.min((h+1)*G,t.size)));const b=E.slice().reverse(),os=new Array,et=P(ns,n?.onProgress,"uploadItem"),rt=function(){var h=(0,i.Z)(function*(){for(;0!==b.length;){const T=E.length-b.length,us=b.pop(),F=new FormData,ot=et.simulate(T,Ps(us.size));try{const at=us;F.append("f","json"),F.append("file",at),F.append("partId",`${T}`);const{data:ut}=yield(0,f.Z)(tt,{timeout:0,body:F,responseType:"json",method:"post"});if((0,d.k_)(n),!ut.success)throw new Error("Part upload failed")}finally{ot.remove()}}});return function(){return h.apply(this,arguments)}}();for(let h=0;h<Ms&&0!==b.length;++h)os.push(rt());yield Promise.all(os);const nt=(0,m.v_)(o,"commit"),{data:as}=yield(0,f.Z)(nt,{query:{f:"json",parts:E.map((h,T)=>T).join(",")},responseType:"json",method:"post"});if((0,d.k_)(n),!as.success)throw new Error("Commit failed");return as.item}catch(a){if(null!=o){const u=(0,m.v_)(o,"delete");yield(0,f.Z)(u,{query:{f:"json"},responseType:"json",method:"post"})}throw a}}),U.apply(this,arguments)}function $s(t){return t.replaceAll("/","_").replaceAll("\\","_")}var Z=c(35391);function Is(t,e,s){return $.apply(this,arguments)}function $(){return $=(0,i.Z)(function*(t,e,s){const r=t.length;if(!r)return s?.onProgress?.(1),[];const n=P(r,s?.onProgress,"uploadAssets");return Promise.all(t.map((o,a)=>function Ss(t,e,s){return I.apply(this,arguments)}(o,e,{...s,onProgress:n.makeOnProgress(a)})))}),$.apply(this,arguments)}function I(){return I=(0,i.Z)(function*(t,{layer:e,ongoingUploads:s},r){const n=s.get(t);if(n)return n;if(!function Ys(t){return!!t.infoFor3D&&!!t.url}(e))throw new ps;if(function js(t,e){const{parsedUrl:s}=e;return null!=s&&t.metadata.externalSources.some(r=>(0,w.JG)(r,s))}(t,e))return r?.onProgress?.(1),t;const o=function ks(t,e,s){return S.apply(this,arguments)}(t,e,r);s.set(t,o);try{yield o}finally{s.delete(t)}return t}),I.apply(this,arguments)}function S(){return S=(0,i.Z)(function*(t,e,s){const{metadata:r}=t,{displaySource:n}=r,o=q(n?.source,e),u=r.externalSources.length>0,l=o?function Cs(t,e,s){return j.apply(this,arguments)}(o,e,s):u?function Ds(t,e,s){return k.apply(this,arguments)}(t,e,s):function Ns(t,e,s){return C.apply(this,arguments)}(t,e,s),p=yield l;return(0,d.k_)(s),t.addExternalSources([p]),t}),S.apply(this,arguments)}function j(){return(j=(0,i.Z)(function*(t,e,s){return{source:yield ss(t,e,s),original:!0}})).apply(this,arguments)}function k(){return(k=(0,i.Z)(function*(t,e,s){const r=es(e),{externalSources:n}=t.metadata,o=function Bs(t,e){for(const s of t){const r=q(s.source,e);if(r)return r}return null}(n,e);if(!o)throw new ds;const a=P(M.uploadConvertibleSource,s?.onProgress,"uploadConvertibleSource"),u=yield ss(o,e,{onProgress:a.makeOnProgress("uploadEditSource")});t.addExternalSources([{source:u,original:!0}]);const l=o.reduce((g,{asset:A})=>A instanceof File?g+A.size:g,0),p=a.simulate("serviceAssetsToGlb",function Ts(t,e=As){return(0,_.up)((0,_._H)(t*Y/e))}(l));try{return{source:yield Ws(u,e,r)}}finally{p.remove()}})).apply(this,arguments)}function C(){return C=(0,i.Z)(function*(t,e,s){const r=P(M.uploadLocalMesh,s?.onProgress,"uploadLocalMesh"),n=function Ls(t,e,s){return D.apply(this,arguments)}(t,e,{...s,onProgress:r.makeOnProgress("meshToAssetBlob")});return{source:yield ts([n],e,{...s,onProgress:r.makeOnProgress("uploadAssetBlobs")}),extent:t.extent.clone(),original:!0}}),C.apply(this,arguments)}function D(){return(D=(0,i.Z)(function*(t,e,s){const r=es(e),n=yield t.load(s),o=yield n.toBinaryGLTF({ignoreLocalTransform:!0});(0,d.k_)(s);const a=yield o.buffer();return(0,d.k_)(s),{blob:new Blob([a.data],{type:a.type}),assetName:`${(0,ls.zS)()}.glb`,assetType:r}})).apply(this,arguments)}function q(t,e){if(!t)return null;const{infoFor3D:{supportedFormats:s,editFormats:r}}=e,n=(0,w.zE)(t),o=new Array;let a=!1;for(let u=0;u<n.length;++u){const l=Os(n[u],s);if(!l)return null;r.includes(l.assetType)&&(a=!0),o.push(l)}return a?o:null}function Os(t,e){const s=(0,w.vj)(t,e);return s?{asset:t,assetType:s}:null}function ss(t,e,s){return N.apply(this,arguments)}function N(){return N=(0,i.Z)(function*(t,e,s){return ts(t.map(r=>function Rs(t,e){return B.apply(this,arguments)}(r,s)),e,s)}),N.apply(this,arguments)}function ts(t,e,s){return L.apply(this,arguments)}function L(){return L=(0,i.Z)(function*(t,e,s){const r=P(M.uploadAssetBlobs,s?.onProgress,"uploadAssetBlobs"),n=yield function Hs(t,e,s){const r=P(t.length,s?.onProgress,"prepareAssetItems");return Promise.all(t.map(function(){var n=(0,i.Z)(function*(o,a){const u=function zs(t,e,s){return O.apply(this,arguments)}(yield o,e,{...s,onProgress:r.makeOnProgress(a)});return(0,d.k_)(s),u});return function(o,a){return n.apply(this,arguments)}}()))}(t,e,{...s,onProgress:r.makeOnProgress("prepareAssetItems")});(0,d.k_)(s);const o=n.map(({item:u})=>u),{uploadResults:a}=yield function Gs(t,e,s){return R.apply(this,arguments)}(o,e,{...s,onProgress:r.makeOnProgress("uploadAssetItems")});return(0,d.k_)(s),t.map((u,l)=>function Js(t,e,s){const{success:r}=e;if(!r){const{error:p}=e;throw new hs(t.assetName,p)}const{assetHash:n}=e,{assetName:o,item:{assetType:a}}=t,{infoFor3D:{supportedFormats:u}}=s,l=(0,Z.d1)(a,u);if(!l)throw new K(a);return new w.CP(o,l,[new w.LL(`${s.parsedUrl.path}/assets/${n}`,n)])}(n[l],a[l],e))}),L.apply(this,arguments)}function B(){return(B=(0,i.Z)(function*(t,e){const{asset:s,assetType:r}=t;if(s instanceof File)return{blob:s,assetName:s.name,assetType:r};const n=yield s.toBlob(e);return(0,d.k_)(e),{blob:n,assetName:s.assetName,assetType:r}})).apply(this,arguments)}function O(){return O=(0,i.Z)(function*(t,e,s){const{blob:r,assetType:n,assetName:o}=t;let a=null;try{const u=yield function Us(t,e,s){return U.apply(this,arguments)}({data:r,name:o},e.url,s);(0,d.k_)(s),a={assetType:n,assetUploadId:u.itemID}}catch(u){(0,d.r9)(u),function Qs(){return is.Z.getLogger("esri.layers.graphics.sources.support.uploadAssets")}().warnOnce(`Service ${e.url} does not support the REST Uploads API.`)}if(!a){const u=yield(0,m.IR)(r);if((0,d.k_)(s),!u.isBase64)throw new fs;a={assetType:n,assetData:u.data}}if(!a)throw new ms;return{item:a,assetName:o}}),O.apply(this,arguments)}function R(){return(R=(0,i.Z)(function*(t,e,s){const r=V(s?.onProgress);try{const n=yield(0,f.Z)((0,m.v_)(e.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(t)},method:"post",responseType:"json"});if((0,d.k_)(s),n.data.uploadResults.length!==t.length)throw new gs(t.length,n.data.uploadResults.length);return n.data}finally{r.remove()}})).apply(this,arguments)}function Ws(t,e,s){return z.apply(this,arguments)}function z(){return(z=(0,i.Z)(function*(t,e,s){const r=t.map(({assetName:p,parts:g})=>({assetName:p,assetHash:g[0].partHash})),n=e.capabilities?.operations.supportsAsyncConvert3D,o={f:"json",assets:JSON.stringify(r),transportType:"esriTransportTypeUrl",targetFormat:s,async:n},a=(0,m.v_)(e.parsedUrl.path,"convert3D");let u;try{u=(yield(n?Vs:Ks)(a,{query:o,responseType:"json",timeout:0})).data}catch{throw new ys}const{supportedFormats:l}=e.infoFor3D;return u.assets.map(p=>{const g=(0,Z.S0)(p.contentType,l);if(!g)throw new K(g);return new w.CP(p.assetName,p.contentType,[new w.LL(p.assetURL,p.assetHash)])})})).apply(this,arguments)}function Ks(t,e){return(0,f.Z)(t,e)}function Vs(t,e){return H.apply(this,arguments)}function H(){return(H=(0,i.Z)(function*(t,e){const s=(yield(0,f.Z)(t,e)).data.statusUrl;for(;;){const r=(yield(0,f.Z)(s,{query:{f:"json"},responseType:"json"})).data;switch(r.status){case"Completed":return(0,f.Z)(r.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(r.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}yield(0,d.e4)(Xs)}})).apply(this,arguments)}function es(t){const{infoFor3D:e}=t,s=(0,Z.S0)("model/gltf-binary",e.supportedFormats)??(0,Z.Ow)("glb",e.supportedFormats);if(!s)throw new cs;return s}const Xs=(0,_.HA)(1e3)}}]);